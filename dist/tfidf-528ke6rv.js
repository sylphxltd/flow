import{createRequire as w}from"node:module";var h=Object.create;var{getPrototypeOf:z,defineProperty:Q,getOwnPropertyNames:M}=Object;var p=Object.prototype.hasOwnProperty;var g=(E,B,A)=>{A=E!=null?h(z(E)):{};let G=B||!E||!E.__esModule?Q(A,"default",{value:E,enumerable:!0}):A;for(let H of M(E))if(!p.call(G,H))Q(G,H,{get:()=>E[H],enumerable:!0});return G};var F=(E,B)=>()=>(B||E((B={exports:{}}).exports,B),B.exports);var T=(E,B)=>{for(var A in B)Q(E,A,{get:B[A],enumerable:!0,configurable:!0,set:(G)=>B[A]=()=>G})};var x=w(import.meta.url);class Y{static step1aRules=[{pattern:/sses$/i,replacement:"ss"},{pattern:/ies$/i,replacement:"i"},{pattern:/ss$/i,replacement:"ss"},{pattern:/s$/i,replacement:""}];static step1bRules=[{pattern:/eed$/i,replacement:"ee"},{pattern:/ed$/i,replacement:""},{pattern:/ing$/i,replacement:""}];static step1cRules=[{pattern:/y$/i,replacement:"i"}];static step2Rules=[{pattern:/ational$/i,replacement:"ate"},{pattern:/tional$/i,replacement:"tion"},{pattern:/enci$/i,replacement:"ence"},{pattern:/anci$/i,replacement:"ance"},{pattern:/izer$/i,replacement:"ize"},{pattern:/abli$/i,replacement:"able"},{pattern:/alli$/i,replacement:"al"},{pattern:/entli$/i,replacement:"ent"},{pattern:/eli$/i,replacement:"e"},{pattern:/ousli$/i,replacement:"ous"},{pattern:/ization$/i,replacement:"ize"},{pattern:/ation$/i,replacement:"ate"},{pattern:/ator$/i,replacement:"ate"},{pattern:/alism$/i,replacement:"al"},{pattern:/iveness$/i,replacement:"ive"},{pattern:/fulness$/i,replacement:"ful"},{pattern:/ousness$/i,replacement:"ous"},{pattern:/aliti$/i,replacement:"al"},{pattern:/iviti$/i,replacement:"ive"},{pattern:/biliti$/i,replacement:"ble"}];static step3Rules=[{pattern:/icate$/i,replacement:"ic"},{pattern:/ative$/i,replacement:""},{pattern:/alize$/i,replacement:"al"},{pattern:/iciti$/i,replacement:"ic"},{pattern:/ical$/i,replacement:"ic"},{pattern:/ful$/i,replacement:""},{pattern:/ness$/i,replacement:""}];static step4Rules=[{pattern:/al$/i,replacement:""},{pattern:/ance$/i,replacement:""},{pattern:/ence$/i,replacement:""},{pattern:/er$/i,replacement:""},{pattern:/ic$/i,replacement:""},{pattern:/able$/i,replacement:""},{pattern:/ible$/i,replacement:""},{pattern:/ant$/i,replacement:""},{pattern:/ement$/i,replacement:""},{pattern:/ment$/i,replacement:""},{pattern:/ent$/i,replacement:""},{pattern:/ion$/i,replacement:""},{pattern:/ou$/i,replacement:""},{pattern:/ism$/i,replacement:""},{pattern:/ate$/i,replacement:""},{pattern:/iti$/i,replacement:""},{pattern:/ous$/i,replacement:""},{pattern:/ive$/i,replacement:""},{pattern:/ize$/i,replacement:""}];static step5Rules=[{pattern:/e$/i,replacement:""},{pattern:/ll$/i,replacement:"l"}];static stem(E){if(E.length<3)return E.toLowerCase();let B=E.toLowerCase();for(let A of Y.step1aRules)if(A.pattern.test(B)){B=B.replace(A.pattern,A.replacement);break}for(let A of Y.step1bRules)if(A.pattern.test(B)){B=B.replace(A.pattern,A.replacement);break}for(let A of Y.step1cRules)if(A.pattern.test(B)&&B.length>2){B=B.replace(A.pattern,A.replacement);break}for(let A of Y.step2Rules)if(A.pattern.test(B)){B=B.replace(A.pattern,A.replacement);break}for(let A of Y.step3Rules)if(A.pattern.test(B)){B=B.replace(A.pattern,A.replacement);break}for(let A of Y.step4Rules)if(A.pattern.test(B)&&B.length>3){B=B.replace(A.pattern,A.replacement);break}for(let A of Y.step5Rules)if(A.pattern.test(B)&&B.length>2){B=B.replace(A.pattern,A.replacement);break}return B}}function _(E){return E.replace(/```[\s\S]*?```/g," ").replace(/`[^`]+`/g," ").replace(/#{1,6}\s/g,"").replace(/[*_~]/g,"").replace(/\[([^\]]+)\]\([^)]+\)/g,"$1").toLowerCase().split(/[^a-z0-9_-]+/).filter((G)=>G.length>1)}function R(E){let B=_(E),A=new Map;for(let G of B){let H=Y.stem(G);A.set(H,(A.get(H)||0)+1)}return A}var D=new Set(["a","an","and","are","as","at","be","by","for","from","has","he","in","is","it","its","of","on","that","the","to","was","will","with","this","but","they","have","had","what","when","where","who","which","why","how"]);function j(E){return E.filter((B)=>!D.has(B.toLowerCase()))}async function a(E,B){try{let A=await E.getAllCodebaseFiles();if(B){if(B.file_extensions&&B.file_extensions.length>0)A=A.filter((K)=>B.file_extensions?.some((U)=>K.path.endsWith(U)));if(B.path_filter)A=A.filter((K)=>K.path.includes(B.path_filter));if(B.exclude_paths&&B.exclude_paths.length>0)A=A.filter((K)=>!B.exclude_paths?.some((U)=>K.path.includes(U)))}if(A.length===0)return null;let G=[];for(let K of A){let U=await E.getTFIDFDocument(K.path);if(U){let C=U.rawTerms||{},$=new Map,J=new Map;for(let[X,Z]of Object.entries(C))$.set(X,Z),J.set(X,Z);G.push({uri:`file://${K.path}`,terms:$,rawTerms:J,magnitude:U.magnitude})}}if(G.length===0)return null;let H=await E.getIDFValues(),L=new Map;for(let[K,U]of Object.entries(H))L.set(K,U);return{documents:G,idf:L,totalDocuments:G.length,metadata:{generatedAt:new Date().toISOString(),version:"1.0.0"}}}catch(A){return console.error("[ERROR] Failed to build search index from database:",A),null}}function I(E){let B=Array.from(E.values()).reduce((G,H)=>G+H,0),A=new Map;for(let[G,H]of E.entries())A.set(G,H/B);return A}function v(E,B){let A=new Map;for(let H of E){let L=new Set(H.keys());for(let K of L)A.set(K,(A.get(K)||0)+1)}let G=new Map;for(let[H,L]of A.entries())G.set(H,Math.log(B/L));return G}function O(E,B){let A=new Map;for(let[G,H]of E.entries()){let L=B.get(G)||0;A.set(G,H*L)}return A}function b(E){let B=0;for(let A of E.values())B+=A*A;return Math.sqrt(B)}function f(E){let B=E.map((H)=>({uri:H.uri,terms:R(H.content)})),A=v(B.map((H)=>H.terms),E.length);return{documents:B.map((H)=>{let L=I(H.terms),K=O(L,A),U=b(K);return{uri:H.uri,terms:K,rawTerms:H.terms,magnitude:U}}),idf:A,totalDocuments:E.length,metadata:{generatedAt:new Date().toISOString(),version:"1.0.0"}}}function V(E,B){let A=0;for(let[H,L]of E.entries()){let K=B.terms.get(H)||0;A+=L*K}let G=b(E);if(G===0||B.magnitude===0)return 0;return A/(G*B.magnitude)}function k(E,B){let A=R(E),G=I(A);return O(G,B)}function n(E,B,A={}){let{limit:G=10,minScore:H=0,boostFactors:L={}}=A,{exactMatch:K=1.5,phraseMatch:U=2}=L,C=k(E,B.idf),$=j(_(E));return B.documents.map((X)=>{let Z=V(C,X),N=[];for(let W of $)if(X.rawTerms.has(W))Z*=K,N.push(W);if(N.length===$.length&&$.length>1)Z*=U;return{uri:X.uri,score:Z,matchedTerms:N}}).filter((X)=>X.score>=H).sort((X,Z)=>Z.score-X.score).slice(0,G)}function l(E){let B={documents:E.documents.map((A)=>({uri:A.uri,terms:Array.from(A.terms.entries()),rawTerms:Array.from(A.rawTerms.entries()),magnitude:A.magnitude})),idf:Array.from(E.idf.entries()),totalDocuments:E.totalDocuments,metadata:E.metadata};return JSON.stringify(B,null,2)}function i(E){let B=JSON.parse(E);return{documents:B.documents.map((A)=>({uri:A.uri,terms:new Map(A.terms),rawTerms:new Map(A.rawTerms),magnitude:A.magnitude})),idf:new Map(B.idf),totalDocuments:B.totalDocuments,metadata:B.metadata}}export{l as serializeIndex,n as searchDocuments,k as processQuery,i as deserializeIndex,V as calculateCosineSimilarity,a as buildSearchIndexFromDB,f as buildSearchIndex};
export{g as a,F as b,T as c,x as d,f as e,n as f};
