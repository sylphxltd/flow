{
  "version": 3,
  "sources": ["../node_modules/ws/lib/constants.js", "../node_modules/ws/lib/buffer-util.js", "../node_modules/ws/lib/limiter.js", "../node_modules/ws/lib/permessage-deflate.js", "../node_modules/ws/lib/validation.js", "../node_modules/ws/lib/receiver.js", "../node_modules/ws/lib/sender.js", "../node_modules/ws/lib/event-target.js", "../node_modules/ws/lib/extension.js", "../node_modules/ws/lib/websocket.js", "../node_modules/ws/lib/stream.js", "../node_modules/ws/lib/subprotocol.js", "../node_modules/ws/lib/websocket-server.js", "../node_modules/ws/wrapper.mjs"],
  "sourcesContent": [
    "'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n",
    "'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n",
    "'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n",
    "'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n\n  //\n  // The choice to employ `zlib.reset()` over `zlib.close()` is dictated by the\n  // fact that in Node.js versions prior to 13.10.0, the callback for\n  // `zlib.flush()` is not called if `zlib.close()` is used. Utilizing\n  // `zlib.reset()` ensures that either the callback is invoked or an error is\n  // emitted.\n  //\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n\n  if (this[kError]) {\n    this[kCallback](this[kError]);\n    return;\n  }\n\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n",
    "'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n",
    "'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n",
    "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {(Buffer | String)[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n",
    "'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n",
    "'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n",
    "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https:\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n",
    "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^WebSocket$\" }] */\n'use strict';\n\nconst WebSocket = require('./websocket');\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n",
    "'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n",
    "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 13 && version !== 8) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message, {\n        'Sec-WebSocket-Version': '13, 8'\n      });\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @param {Object} [headers] The HTTP response headers\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(\n  server,\n  req,\n  socket,\n  code,\n  message,\n  headers\n) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message, headers);\n  }\n}\n",
    "import createWebSocketStream from './lib/stream.js';\nimport Receiver from './lib/receiver.js';\nimport Sender from './lib/sender.js';\nimport WebSocket from './lib/websocket.js';\nimport WebSocketServer from './lib/websocket-server.js';\n\nexport { createWebSocketStream, Receiver, Sender, WebSocket, WebSocketServer };\nexport default WebSocket;\n"
  ],
  "mappings": "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",
  "debugId": "D29D2589698A33D964756E2164756E21",
  "names": []
}