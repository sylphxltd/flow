import"./index-b8xrx8ea.js";import q from"node:fs/promises";import y from"node:path";var B=".sylphx-flow/settings.json",D="1.0.0";class z{settingsPath;constructor(b=process.cwd()){this.settingsPath=y.join(b,B)}async load(){try{let b=await q.readFile(this.settingsPath,"utf8");return JSON.parse(b)}catch(b){if(b.code==="ENOENT")return{};throw Error(`Failed to load settings: ${b.message}`)}}async save(b){try{await q.mkdir(y.dirname(this.settingsPath),{recursive:!0});let k={...b,version:b.version||D};await q.writeFile(this.settingsPath,`${JSON.stringify(k,null,2)}
`,"utf8")}catch(k){throw Error(`Failed to save settings: ${k.message}`)}}async update(b){let A={...await this.load(),...b};await this.save(A)}async getDefaultTarget(){return(await this.load()).defaultTarget}async setDefaultTarget(b){await this.update({defaultTarget:b})}async exists(){try{return await q.access(this.settingsPath),!0}catch{return!1}}}var K=new z;export{K as projectSettings,z as ProjectSettings};
export{K as V};
