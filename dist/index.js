#!/usr/bin/env node
import{a as Y_}from"./knowledge-resources-55p20eka.js";import{b as B0,c as y,d as b0,e as v1,f as C0,g as f1,h as x1,i as h1,j as q_,k as j_,l as A_,m as I0,n as s0,o as k,p as X0,q as $0,r as K_,s as L_,t as i,u as i2,v as h}from"./index-nk3037r2.js";import{w as a0,z as o2}from"./paths-fxepcppg.js";import{C as s2}from"./index-sf23req4.js";import{D as L,E as S_}from"./error-handler-q36peasz.js";import{F as C,G as b_}from"./servers-5sht3sst.js";import{H as D,I as X_,J as j}from"./index-ccyrgdxz.js";import"./targets-zqgwn6tj.js";import{Q as i0}from"./secret-utils-kw504jar.js";import{V as T1}from"./index-ppx2q8vn.js";import{$ as t,_ as U0,aa as I2,ba as n}from"./index-z7h8chkt.js";var M0=t((y_)=>{class r0 extends Error{constructor(_,F,B){super(B);Error.captureStackTrace(this,this.constructor),this.name=this.constructor.name,this.code=F,this.exitCode=_,this.nestedError=void 0}}class d1 extends r0{constructor(_){super(1,"commander.invalidArgument",_);Error.captureStackTrace(this,this.constructor),this.name=this.constructor.name}}y_.CommanderError=r0;y_.InvalidArgumentError=d1});var k0=t((m_)=>{var{InvalidArgumentError:h_}=M0();class c1{constructor(_,F){switch(this.description=F||"",this.variadic=!1,this.parseArg=void 0,this.defaultValue=void 0,this.defaultValueDescription=void 0,this.argChoices=void 0,_[0]){case"<":this.required=!0,this._name=_.slice(1,-1);break;case"[":this.required=!1,this._name=_.slice(1,-1);break;default:this.required=!0,this._name=_;break}if(this._name.length>3&&this._name.slice(-3)==="...")this.variadic=!0,this._name=this._name.slice(0,-3)}name(){return this._name}_concatValue(_,F){if(F===this.defaultValue||!Array.isArray(F))return[_];return F.concat(_)}default(_,F){return this.defaultValue=_,this.defaultValueDescription=F,this}argParser(_){return this.parseArg=_,this}choices(_){return this.argChoices=_.slice(),this.parseArg=(F,B)=>{if(!this.argChoices.includes(F))throw new h_(`Allowed choices are ${this.argChoices.join(", ")}.`);if(this.variadic)return this._concatValue(F,B);return F},this}argRequired(){return this.required=!0,this}argOptional(){return this.required=!1,this}}function u_(_){let F=_.name()+(_.variadic===!0?"...":"");return _.required?"<"+F+">":"["+F+"]"}m_.Argument=c1;m_.humanReadableArgName=u_});var t0=t((l_)=>{var{humanReadableArgName:c_}=k0();class l1{constructor(){this.helpWidth=void 0,this.sortSubcommands=!1,this.sortOptions=!1,this.showGlobalOptions=!1}visibleCommands(_){let F=_.commands.filter(($)=>!$._hidden),B=_._getHelpCommand();if(B&&!B._hidden)F.push(B);if(this.sortSubcommands)F.sort(($,J)=>{return $.name().localeCompare(J.name())});return F}compareOptions(_,F){let B=($)=>{return $.short?$.short.replace(/^-/,""):$.long.replace(/^--/,"")};return B(_).localeCompare(B(F))}visibleOptions(_){let F=_.options.filter(($)=>!$.hidden),B=_._getHelpOption();if(B&&!B.hidden){let $=B.short&&_._findOption(B.short),J=B.long&&_._findOption(B.long);if(!$&&!J)F.push(B);else if(B.long&&!J)F.push(_.createOption(B.long,B.description));else if(B.short&&!$)F.push(_.createOption(B.short,B.description))}if(this.sortOptions)F.sort(this.compareOptions);return F}visibleGlobalOptions(_){if(!this.showGlobalOptions)return[];let F=[];for(let B=_.parent;B;B=B.parent){let $=B.options.filter((J)=>!J.hidden);F.push(...$)}if(this.sortOptions)F.sort(this.compareOptions);return F}visibleArguments(_){if(_._argsDescription)_.registeredArguments.forEach((F)=>{F.description=F.description||_._argsDescription[F.name()]||""});if(_.registeredArguments.find((F)=>F.description))return _.registeredArguments;return[]}subcommandTerm(_){let F=_.registeredArguments.map((B)=>c_(B)).join(" ");return _._name+(_._aliases[0]?"|"+_._aliases[0]:"")+(_.options.length?" [options]":"")+(F?" "+F:"")}optionTerm(_){return _.flags}argumentTerm(_){return _.name()}longestSubcommandTermLength(_,F){return F.visibleCommands(_).reduce((B,$)=>{return Math.max(B,F.subcommandTerm($).length)},0)}longestOptionTermLength(_,F){return F.visibleOptions(_).reduce((B,$)=>{return Math.max(B,F.optionTerm($).length)},0)}longestGlobalOptionTermLength(_,F){return F.visibleGlobalOptions(_).reduce((B,$)=>{return Math.max(B,F.optionTerm($).length)},0)}longestArgumentTermLength(_,F){return F.visibleArguments(_).reduce((B,$)=>{return Math.max(B,F.argumentTerm($).length)},0)}commandUsage(_){let F=_._name;if(_._aliases[0])F=F+"|"+_._aliases[0];let B="";for(let $=_.parent;$;$=$.parent)B=$.name()+" "+B;return B+F+" "+_.usage()}commandDescription(_){return _.description()}subcommandDescription(_){return _.summary()||_.description()}optionDescription(_){let F=[];if(_.argChoices)F.push(`choices: ${_.argChoices.map((B)=>JSON.stringify(B)).join(", ")}`);if(_.defaultValue!==void 0){if(_.required||_.optional||_.isBoolean()&&typeof _.defaultValue==="boolean")F.push(`default: ${_.defaultValueDescription||JSON.stringify(_.defaultValue)}`)}if(_.presetArg!==void 0&&_.optional)F.push(`preset: ${JSON.stringify(_.presetArg)}`);if(_.envVar!==void 0)F.push(`env: ${_.envVar}`);if(F.length>0)return`${_.description} (${F.join(", ")})`;return _.description}argumentDescription(_){let F=[];if(_.argChoices)F.push(`choices: ${_.argChoices.map((B)=>JSON.stringify(B)).join(", ")}`);if(_.defaultValue!==void 0)F.push(`default: ${_.defaultValueDescription||JSON.stringify(_.defaultValue)}`);if(F.length>0){let B=`(${F.join(", ")})`;if(_.description)return`${_.description} ${B}`;return B}return _.description}formatHelp(_,F){let B=F.padWidth(_,F),$=F.helpWidth||80,J=2,Z=2;function Q(W,q){if(q){let N=`${W.padEnd(B+2)}${q}`;return F.wrap(N,$-2,B+2)}return W}function X(W){return W.join(`
`).replace(/^/gm," ".repeat(2))}let G=[`Usage: ${F.commandUsage(_)}`,""],Y=F.commandDescription(_);if(Y.length>0)G=G.concat([F.wrap(Y,$,0),""]);let H=F.visibleArguments(_).map((W)=>{return Q(F.argumentTerm(W),F.argumentDescription(W))});if(H.length>0)G=G.concat(["Arguments:",X(H),""]);let K=F.visibleOptions(_).map((W)=>{return Q(F.optionTerm(W),F.optionDescription(W))});if(K.length>0)G=G.concat(["Options:",X(K),""]);if(this.showGlobalOptions){let W=F.visibleGlobalOptions(_).map((q)=>{return Q(F.optionTerm(q),F.optionDescription(q))});if(W.length>0)G=G.concat(["Global Options:",X(W),""])}let z=F.visibleCommands(_).map((W)=>{return Q(F.subcommandTerm(W),F.subcommandDescription(W))});if(z.length>0)G=G.concat(["Commands:",X(z),""]);return G.join(`
`)}padWidth(_,F){return Math.max(F.longestOptionTermLength(_,F),F.longestGlobalOptionTermLength(_,F),F.longestSubcommandTermLength(_,F),F.longestArgumentTermLength(_,F))}wrap(_,F,B,$=40){let Z=new RegExp(`[\\n][${" \\f\\t\\v   -   　\uFEFF"}]+`);if(_.match(Z))return _;let Q=F-B;if(Q<$)return _;let X=_.slice(0,B),G=_.slice(B).replace(`\r
`,`
`),Y=" ".repeat(B),K=`\\s${"​"}`,z=new RegExp(`
|.{1,${Q-1}}([${K}]|$)|[^${K}]+?([${K}]|$)`,"g"),W=G.match(z)||[];return X+W.map((q,N)=>{if(q===`
`)return"";return(N>0?Y:"")+q.trimEnd()}).join(`
`)}}l_.Help=l1});var e0=t((a_)=>{var{InvalidArgumentError:i_}=M0();class p1{constructor(_,F){this.flags=_,this.description=F||"",this.required=_.includes("<"),this.optional=_.includes("["),this.variadic=/\w\.\.\.[>\]]$/.test(_),this.mandatory=!1;let B=n_(_);if(this.short=B.shortFlag,this.long=B.longFlag,this.negate=!1,this.long)this.negate=this.long.startsWith("--no-");this.defaultValue=void 0,this.defaultValueDescription=void 0,this.presetArg=void 0,this.envVar=void 0,this.parseArg=void 0,this.hidden=!1,this.argChoices=void 0,this.conflictsWith=[],this.implied=void 0}default(_,F){return this.defaultValue=_,this.defaultValueDescription=F,this}preset(_){return this.presetArg=_,this}conflicts(_){return this.conflictsWith=this.conflictsWith.concat(_),this}implies(_){let F=_;if(typeof _==="string")F={[_]:!0};return this.implied=Object.assign(this.implied||{},F),this}env(_){return this.envVar=_,this}argParser(_){return this.parseArg=_,this}makeOptionMandatory(_=!0){return this.mandatory=!!_,this}hideHelp(_=!0){return this.hidden=!!_,this}_concatValue(_,F){if(F===this.defaultValue||!Array.isArray(F))return[_];return F.concat(_)}choices(_){return this.argChoices=_.slice(),this.parseArg=(F,B)=>{if(!this.argChoices.includes(F))throw new i_(`Allowed choices are ${this.argChoices.join(", ")}.`);if(this.variadic)return this._concatValue(F,B);return F},this}name(){if(this.long)return this.long.replace(/^--/,"");return this.short.replace(/^-/,"")}attributeName(){return s_(this.name().replace(/^no-/,""))}is(_){return this.short===_||this.long===_}isBoolean(){return!this.required&&!this.optional&&!this.negate}}class i1{constructor(_){this.positiveOptions=new Map,this.negativeOptions=new Map,this.dualOptions=new Set,_.forEach((F)=>{if(F.negate)this.negativeOptions.set(F.attributeName(),F);else this.positiveOptions.set(F.attributeName(),F)}),this.negativeOptions.forEach((F,B)=>{if(this.positiveOptions.has(B))this.dualOptions.add(B)})}valueFromOption(_,F){let B=F.attributeName();if(!this.dualOptions.has(B))return!0;let $=this.negativeOptions.get(B).presetArg,J=$!==void 0?$:!1;return F.negate===(J===_)}}function s_(_){return _.split("-").reduce((F,B)=>{return F+B[0].toUpperCase()+B.slice(1)})}function n_(_){let F,B,$=_.split(/[ |,]+/);if($.length>1&&!/^[[<]/.test($[1]))F=$.shift();if(B=$.shift(),!F&&/^-[^-]$/.test(B))F=B,B=void 0;return{shortFlag:F,longFlag:B}}a_.Option=p1;a_.DualOptions=i1});var s1=t((_3)=>{function t_(_,F){if(Math.abs(_.length-F.length)>3)return Math.max(_.length,F.length);let B=[];for(let $=0;$<=_.length;$++)B[$]=[$];for(let $=0;$<=F.length;$++)B[0][$]=$;for(let $=1;$<=F.length;$++)for(let J=1;J<=_.length;J++){let Z=1;if(_[J-1]===F[$-1])Z=0;else Z=1;if(B[J][$]=Math.min(B[J-1][$]+1,B[J][$-1]+1,B[J-1][$-1]+Z),J>1&&$>1&&_[J-1]===F[$-2]&&_[J-2]===F[$-1])B[J][$]=Math.min(B[J][$],B[J-2][$-2]+1)}return B[_.length][F.length]}function e_(_,F){if(!F||F.length===0)return"";F=Array.from(new Set(F));let B=_.startsWith("--");if(B)_=_.slice(2),F=F.map((Q)=>Q.slice(2));let $=[],J=3,Z=0.4;if(F.forEach((Q)=>{if(Q.length<=1)return;let X=t_(_,Q),G=Math.max(_.length,Q.length);if((G-X)/G>Z){if(X<J)J=X,$=[Q];else if(X===J)$.push(Q)}}),$.sort((Q,X)=>Q.localeCompare(X)),B)$=$.map((Q)=>`--${Q}`);if($.length>1)return`
(Did you mean one of ${$.join(", ")}?)`;if($.length===1)return`
(Did you mean ${$[0]}?)`;return""}_3.suggestSimilar=e_});var r1=t((X3)=>{var B3=n("node:events").EventEmitter,_1=n("node:child_process"),s=n("node:path"),F1=n("node:fs"),S=n("node:process"),{Argument:$3,humanReadableArgName:J3}=k0(),{CommanderError:B1}=M0(),{Help:Z3}=t0(),{Option:n1,DualOptions:Q3}=e0(),{suggestSimilar:a1}=s1();class $1 extends B3{constructor(_){super();this.commands=[],this.options=[],this.parent=null,this._allowUnknownOption=!1,this._allowExcessArguments=!0,this.registeredArguments=[],this._args=this.registeredArguments,this.args=[],this.rawArgs=[],this.processedArgs=[],this._scriptPath=null,this._name=_||"",this._optionValues={},this._optionValueSources={},this._storeOptionsAsProperties=!1,this._actionHandler=null,this._executableHandler=!1,this._executableFile=null,this._executableDir=null,this._defaultCommandName=null,this._exitCallback=null,this._aliases=[],this._combineFlagAndOptionalValue=!0,this._description="",this._summary="",this._argsDescription=void 0,this._enablePositionalOptions=!1,this._passThroughOptions=!1,this._lifeCycleHooks={},this._showHelpAfterError=!1,this._showSuggestionAfterError=!0,this._outputConfiguration={writeOut:(F)=>S.stdout.write(F),writeErr:(F)=>S.stderr.write(F),getOutHelpWidth:()=>S.stdout.isTTY?S.stdout.columns:void 0,getErrHelpWidth:()=>S.stderr.isTTY?S.stderr.columns:void 0,outputError:(F,B)=>B(F)},this._hidden=!1,this._helpOption=void 0,this._addImplicitHelpCommand=void 0,this._helpCommand=void 0,this._helpConfiguration={}}copyInheritedSettings(_){return this._outputConfiguration=_._outputConfiguration,this._helpOption=_._helpOption,this._helpCommand=_._helpCommand,this._helpConfiguration=_._helpConfiguration,this._exitCallback=_._exitCallback,this._storeOptionsAsProperties=_._storeOptionsAsProperties,this._combineFlagAndOptionalValue=_._combineFlagAndOptionalValue,this._allowExcessArguments=_._allowExcessArguments,this._enablePositionalOptions=_._enablePositionalOptions,this._showHelpAfterError=_._showHelpAfterError,this._showSuggestionAfterError=_._showSuggestionAfterError,this}_getCommandAndAncestors(){let _=[];for(let F=this;F;F=F.parent)_.push(F);return _}command(_,F,B){let $=F,J=B;if(typeof $==="object"&&$!==null)J=$,$=null;J=J||{};let[,Z,Q]=_.match(/([^ ]+) *(.*)/),X=this.createCommand(Z);if($)X.description($),X._executableHandler=!0;if(J.isDefault)this._defaultCommandName=X._name;if(X._hidden=!!(J.noHelp||J.hidden),X._executableFile=J.executableFile||null,Q)X.arguments(Q);if(this._registerCommand(X),X.parent=this,X.copyInheritedSettings(this),$)return this;return X}createCommand(_){return new $1(_)}createHelp(){return Object.assign(new Z3,this.configureHelp())}configureHelp(_){if(_===void 0)return this._helpConfiguration;return this._helpConfiguration=_,this}configureOutput(_){if(_===void 0)return this._outputConfiguration;return Object.assign(this._outputConfiguration,_),this}showHelpAfterError(_=!0){if(typeof _!=="string")_=!!_;return this._showHelpAfterError=_,this}showSuggestionAfterError(_=!0){return this._showSuggestionAfterError=!!_,this}addCommand(_,F){if(!_._name)throw Error(`Command passed to .addCommand() must have a name
- specify the name in Command constructor or using .name()`);if(F=F||{},F.isDefault)this._defaultCommandName=_._name;if(F.noHelp||F.hidden)_._hidden=!0;return this._registerCommand(_),_.parent=this,_._checkForBrokenPassThrough(),this}createArgument(_,F){return new $3(_,F)}argument(_,F,B,$){let J=this.createArgument(_,F);if(typeof B==="function")J.default($).argParser(B);else J.default(B);return this.addArgument(J),this}arguments(_){return _.trim().split(/ +/).forEach((F)=>{this.argument(F)}),this}addArgument(_){let F=this.registeredArguments.slice(-1)[0];if(F&&F.variadic)throw Error(`only the last argument can be variadic '${F.name()}'`);if(_.required&&_.defaultValue!==void 0&&_.parseArg===void 0)throw Error(`a default value for a required argument is never used: '${_.name()}'`);return this.registeredArguments.push(_),this}helpCommand(_,F){if(typeof _==="boolean")return this._addImplicitHelpCommand=_,this;_=_??"help [command]";let[,B,$]=_.match(/([^ ]+) *(.*)/),J=F??"display help for command",Z=this.createCommand(B);if(Z.helpOption(!1),$)Z.arguments($);if(J)Z.description(J);return this._addImplicitHelpCommand=!0,this._helpCommand=Z,this}addHelpCommand(_,F){if(typeof _!=="object")return this.helpCommand(_,F),this;return this._addImplicitHelpCommand=!0,this._helpCommand=_,this}_getHelpCommand(){if(this._addImplicitHelpCommand??(this.commands.length&&!this._actionHandler&&!this._findCommand("help"))){if(this._helpCommand===void 0)this.helpCommand(void 0,void 0);return this._helpCommand}return null}hook(_,F){let B=["preSubcommand","preAction","postAction"];if(!B.includes(_))throw Error(`Unexpected value for event passed to hook : '${_}'.
Expecting one of '${B.join("', '")}'`);if(this._lifeCycleHooks[_])this._lifeCycleHooks[_].push(F);else this._lifeCycleHooks[_]=[F];return this}exitOverride(_){if(_)this._exitCallback=_;else this._exitCallback=(F)=>{if(F.code!=="commander.executeSubCommandAsync")throw F};return this}_exit(_,F,B){if(this._exitCallback)this._exitCallback(new B1(_,F,B));S.exit(_)}action(_){let F=(B)=>{let $=this.registeredArguments.length,J=B.slice(0,$);if(this._storeOptionsAsProperties)J[$]=this;else J[$]=this.opts();return J.push(this),_.apply(this,J)};return this._actionHandler=F,this}createOption(_,F){return new n1(_,F)}_callParseArg(_,F,B,$){try{return _.parseArg(F,B)}catch(J){if(J.code==="commander.invalidArgument"){let Z=`${$} ${J.message}`;this.error(Z,{exitCode:J.exitCode,code:J.code})}throw J}}_registerOption(_){let F=_.short&&this._findOption(_.short)||_.long&&this._findOption(_.long);if(F){let B=_.long&&this._findOption(_.long)?_.long:_.short;throw Error(`Cannot add option '${_.flags}'${this._name&&` to command '${this._name}'`} due to conflicting flag '${B}'
-  already used by option '${F.flags}'`)}this.options.push(_)}_registerCommand(_){let F=($)=>{return[$.name()].concat($.aliases())},B=F(_).find(($)=>this._findCommand($));if(B){let $=F(this._findCommand(B)).join("|"),J=F(_).join("|");throw Error(`cannot add command '${J}' as already have command '${$}'`)}this.commands.push(_)}addOption(_){this._registerOption(_);let F=_.name(),B=_.attributeName();if(_.negate){let J=_.long.replace(/^--no-/,"--");if(!this._findOption(J))this.setOptionValueWithSource(B,_.defaultValue===void 0?!0:_.defaultValue,"default")}else if(_.defaultValue!==void 0)this.setOptionValueWithSource(B,_.defaultValue,"default");let $=(J,Z,Q)=>{if(J==null&&_.presetArg!==void 0)J=_.presetArg;let X=this.getOptionValue(B);if(J!==null&&_.parseArg)J=this._callParseArg(_,J,X,Z);else if(J!==null&&_.variadic)J=_._concatValue(J,X);if(J==null)if(_.negate)J=!1;else if(_.isBoolean()||_.optional)J=!0;else J="";this.setOptionValueWithSource(B,J,Q)};if(this.on("option:"+F,(J)=>{let Z=`error: option '${_.flags}' argument '${J}' is invalid.`;$(J,Z,"cli")}),_.envVar)this.on("optionEnv:"+F,(J)=>{let Z=`error: option '${_.flags}' value '${J}' from env '${_.envVar}' is invalid.`;$(J,Z,"env")});return this}_optionEx(_,F,B,$,J){if(typeof F==="object"&&F instanceof n1)throw Error("To add an Option object use addOption() instead of option() or requiredOption()");let Z=this.createOption(F,B);if(Z.makeOptionMandatory(!!_.mandatory),typeof $==="function")Z.default(J).argParser($);else if($ instanceof RegExp){let Q=$;$=(X,G)=>{let Y=Q.exec(X);return Y?Y[0]:G},Z.default(J).argParser($)}else Z.default($);return this.addOption(Z)}option(_,F,B,$){return this._optionEx({},_,F,B,$)}requiredOption(_,F,B,$){return this._optionEx({mandatory:!0},_,F,B,$)}combineFlagAndOptionalValue(_=!0){return this._combineFlagAndOptionalValue=!!_,this}allowUnknownOption(_=!0){return this._allowUnknownOption=!!_,this}allowExcessArguments(_=!0){return this._allowExcessArguments=!!_,this}enablePositionalOptions(_=!0){return this._enablePositionalOptions=!!_,this}passThroughOptions(_=!0){return this._passThroughOptions=!!_,this._checkForBrokenPassThrough(),this}_checkForBrokenPassThrough(){if(this.parent&&this._passThroughOptions&&!this.parent._enablePositionalOptions)throw Error(`passThroughOptions cannot be used for '${this._name}' without turning on enablePositionalOptions for parent command(s)`)}storeOptionsAsProperties(_=!0){if(this.options.length)throw Error("call .storeOptionsAsProperties() before adding options");if(Object.keys(this._optionValues).length)throw Error("call .storeOptionsAsProperties() before setting option values");return this._storeOptionsAsProperties=!!_,this}getOptionValue(_){if(this._storeOptionsAsProperties)return this[_];return this._optionValues[_]}setOptionValue(_,F){return this.setOptionValueWithSource(_,F,void 0)}setOptionValueWithSource(_,F,B){if(this._storeOptionsAsProperties)this[_]=F;else this._optionValues[_]=F;return this._optionValueSources[_]=B,this}getOptionValueSource(_){return this._optionValueSources[_]}getOptionValueSourceWithGlobals(_){let F;return this._getCommandAndAncestors().forEach((B)=>{if(B.getOptionValueSource(_)!==void 0)F=B.getOptionValueSource(_)}),F}_prepareUserArgs(_,F){if(_!==void 0&&!Array.isArray(_))throw Error("first parameter to parse must be array or undefined");if(F=F||{},_===void 0&&F.from===void 0){if(S.versions?.electron)F.from="electron";let $=S.execArgv??[];if($.includes("-e")||$.includes("--eval")||$.includes("-p")||$.includes("--print"))F.from="eval"}if(_===void 0)_=S.argv;this.rawArgs=_.slice();let B;switch(F.from){case void 0:case"node":this._scriptPath=_[1],B=_.slice(2);break;case"electron":if(S.defaultApp)this._scriptPath=_[1],B=_.slice(2);else B=_.slice(1);break;case"user":B=_.slice(0);break;case"eval":B=_.slice(1);break;default:throw Error(`unexpected parse option { from: '${F.from}' }`)}if(!this._name&&this._scriptPath)this.nameFromFilename(this._scriptPath);return this._name=this._name||"program",B}parse(_,F){let B=this._prepareUserArgs(_,F);return this._parseCommand([],B),this}async parseAsync(_,F){let B=this._prepareUserArgs(_,F);return await this._parseCommand([],B),this}_executeSubCommand(_,F){F=F.slice();let B=!1,$=[".js",".ts",".tsx",".mjs",".cjs"];function J(Y,H){let K=s.resolve(Y,H);if(F1.existsSync(K))return K;if($.includes(s.extname(H)))return;let z=$.find((W)=>F1.existsSync(`${K}${W}`));if(z)return`${K}${z}`;return}this._checkForMissingMandatoryOptions(),this._checkForConflictingOptions();let Z=_._executableFile||`${this._name}-${_._name}`,Q=this._executableDir||"";if(this._scriptPath){let Y;try{Y=F1.realpathSync(this._scriptPath)}catch(H){Y=this._scriptPath}Q=s.resolve(s.dirname(Y),Q)}if(Q){let Y=J(Q,Z);if(!Y&&!_._executableFile&&this._scriptPath){let H=s.basename(this._scriptPath,s.extname(this._scriptPath));if(H!==this._name)Y=J(Q,`${H}-${_._name}`)}Z=Y||Z}B=$.includes(s.extname(Z));let X;if(S.platform!=="win32")if(B)F.unshift(Z),F=o1(S.execArgv).concat(F),X=_1.spawn(S.argv[0],F,{stdio:"inherit"});else X=_1.spawn(Z,F,{stdio:"inherit"});else F.unshift(Z),F=o1(S.execArgv).concat(F),X=_1.spawn(S.execPath,F,{stdio:"inherit"});if(!X.killed)["SIGUSR1","SIGUSR2","SIGTERM","SIGINT","SIGHUP"].forEach((H)=>{S.on(H,()=>{if(X.killed===!1&&X.exitCode===null)X.kill(H)})});let G=this._exitCallback;X.on("close",(Y)=>{if(Y=Y??1,!G)S.exit(Y);else G(new B1(Y,"commander.executeSubCommandAsync","(close)"))}),X.on("error",(Y)=>{if(Y.code==="ENOENT"){let H=Q?`searched for local subcommand relative to directory '${Q}'`:"no directory for search for local subcommand, use .executableDir() to supply a custom directory",K=`'${Z}' does not exist
 - if '${_._name}' is not meant to be an executable command, remove description parameter from '.command()' and use '.description()' instead
 - if the default executable name is not suitable, use the executableFile option to supply a custom name or path
 - ${H}`;throw Error(K)}else if(Y.code==="EACCES")throw Error(`'${Z}' not executable`);if(!G)S.exit(1);else{let H=new B1(1,"commander.executeSubCommandAsync","(error)");H.nestedError=Y,G(H)}}),this.runningCommand=X}_dispatchSubcommand(_,F,B){let $=this._findCommand(_);if(!$)this.help({error:!0});let J;return J=this._chainOrCallSubCommandHook(J,$,"preSubcommand"),J=this._chainOrCall(J,()=>{if($._executableHandler)this._executeSubCommand($,F.concat(B));else return $._parseCommand(F,B)}),J}_dispatchHelpCommand(_){if(!_)this.help();let F=this._findCommand(_);if(F&&!F._executableHandler)F.help();return this._dispatchSubcommand(_,[],[this._getHelpOption()?.long??this._getHelpOption()?.short??"--help"])}_checkNumberOfArguments(){if(this.registeredArguments.forEach((_,F)=>{if(_.required&&this.args[F]==null)this.missingArgument(_.name())}),this.registeredArguments.length>0&&this.registeredArguments[this.registeredArguments.length-1].variadic)return;if(this.args.length>this.registeredArguments.length)this._excessArguments(this.args)}_processArguments(){let _=(B,$,J)=>{let Z=$;if($!==null&&B.parseArg){let Q=`error: command-argument value '${$}' is invalid for argument '${B.name()}'.`;Z=this._callParseArg(B,$,J,Q)}return Z};this._checkNumberOfArguments();let F=[];this.registeredArguments.forEach((B,$)=>{let J=B.defaultValue;if(B.variadic){if($<this.args.length){if(J=this.args.slice($),B.parseArg)J=J.reduce((Z,Q)=>{return _(B,Q,Z)},B.defaultValue)}else if(J===void 0)J=[]}else if($<this.args.length){if(J=this.args[$],B.parseArg)J=_(B,J,B.defaultValue)}F[$]=J}),this.processedArgs=F}_chainOrCall(_,F){if(_&&_.then&&typeof _.then==="function")return _.then(()=>F());return F()}_chainOrCallHooks(_,F){let B=_,$=[];if(this._getCommandAndAncestors().reverse().filter((J)=>J._lifeCycleHooks[F]!==void 0).forEach((J)=>{J._lifeCycleHooks[F].forEach((Z)=>{$.push({hookedCommand:J,callback:Z})})}),F==="postAction")$.reverse();return $.forEach((J)=>{B=this._chainOrCall(B,()=>{return J.callback(J.hookedCommand,this)})}),B}_chainOrCallSubCommandHook(_,F,B){let $=_;if(this._lifeCycleHooks[B]!==void 0)this._lifeCycleHooks[B].forEach((J)=>{$=this._chainOrCall($,()=>{return J(this,F)})});return $}_parseCommand(_,F){let B=this.parseOptions(F);if(this._parseOptionsEnv(),this._parseOptionsImplied(),_=_.concat(B.operands),F=B.unknown,this.args=_.concat(F),_&&this._findCommand(_[0]))return this._dispatchSubcommand(_[0],_.slice(1),F);if(this._getHelpCommand()&&_[0]===this._getHelpCommand().name())return this._dispatchHelpCommand(_[1]);if(this._defaultCommandName)return this._outputHelpIfRequested(F),this._dispatchSubcommand(this._defaultCommandName,_,F);if(this.commands.length&&this.args.length===0&&!this._actionHandler&&!this._defaultCommandName)this.help({error:!0});this._outputHelpIfRequested(B.unknown),this._checkForMissingMandatoryOptions(),this._checkForConflictingOptions();let $=()=>{if(B.unknown.length>0)this.unknownOption(B.unknown[0])},J=`command:${this.name()}`;if(this._actionHandler){$(),this._processArguments();let Z;if(Z=this._chainOrCallHooks(Z,"preAction"),Z=this._chainOrCall(Z,()=>this._actionHandler(this.processedArgs)),this.parent)Z=this._chainOrCall(Z,()=>{this.parent.emit(J,_,F)});return Z=this._chainOrCallHooks(Z,"postAction"),Z}if(this.parent&&this.parent.listenerCount(J))$(),this._processArguments(),this.parent.emit(J,_,F);else if(_.length){if(this._findCommand("*"))return this._dispatchSubcommand("*",_,F);if(this.listenerCount("command:*"))this.emit("command:*",_,F);else if(this.commands.length)this.unknownCommand();else $(),this._processArguments()}else if(this.commands.length)$(),this.help({error:!0});else $(),this._processArguments()}_findCommand(_){if(!_)return;return this.commands.find((F)=>F._name===_||F._aliases.includes(_))}_findOption(_){return this.options.find((F)=>F.is(_))}_checkForMissingMandatoryOptions(){this._getCommandAndAncestors().forEach((_)=>{_.options.forEach((F)=>{if(F.mandatory&&_.getOptionValue(F.attributeName())===void 0)_.missingMandatoryOptionValue(F)})})}_checkForConflictingLocalOptions(){let _=this.options.filter((B)=>{let $=B.attributeName();if(this.getOptionValue($)===void 0)return!1;return this.getOptionValueSource($)!=="default"});_.filter((B)=>B.conflictsWith.length>0).forEach((B)=>{let $=_.find((J)=>B.conflictsWith.includes(J.attributeName()));if($)this._conflictingOption(B,$)})}_checkForConflictingOptions(){this._getCommandAndAncestors().forEach((_)=>{_._checkForConflictingLocalOptions()})}parseOptions(_){let F=[],B=[],$=F,J=_.slice();function Z(X){return X.length>1&&X[0]==="-"}let Q=null;while(J.length){let X=J.shift();if(X==="--"){if($===B)$.push(X);$.push(...J);break}if(Q&&!Z(X)){this.emit(`option:${Q.name()}`,X);continue}if(Q=null,Z(X)){let G=this._findOption(X);if(G){if(G.required){let Y=J.shift();if(Y===void 0)this.optionMissingArgument(G);this.emit(`option:${G.name()}`,Y)}else if(G.optional){let Y=null;if(J.length>0&&!Z(J[0]))Y=J.shift();this.emit(`option:${G.name()}`,Y)}else this.emit(`option:${G.name()}`);Q=G.variadic?G:null;continue}}if(X.length>2&&X[0]==="-"&&X[1]!=="-"){let G=this._findOption(`-${X[1]}`);if(G){if(G.required||G.optional&&this._combineFlagAndOptionalValue)this.emit(`option:${G.name()}`,X.slice(2));else this.emit(`option:${G.name()}`),J.unshift(`-${X.slice(2)}`);continue}}if(/^--[^=]+=/.test(X)){let G=X.indexOf("="),Y=this._findOption(X.slice(0,G));if(Y&&(Y.required||Y.optional)){this.emit(`option:${Y.name()}`,X.slice(G+1));continue}}if(Z(X))$=B;if((this._enablePositionalOptions||this._passThroughOptions)&&F.length===0&&B.length===0){if(this._findCommand(X)){if(F.push(X),J.length>0)B.push(...J);break}else if(this._getHelpCommand()&&X===this._getHelpCommand().name()){if(F.push(X),J.length>0)F.push(...J);break}else if(this._defaultCommandName){if(B.push(X),J.length>0)B.push(...J);break}}if(this._passThroughOptions){if($.push(X),J.length>0)$.push(...J);break}$.push(X)}return{operands:F,unknown:B}}opts(){if(this._storeOptionsAsProperties){let _={},F=this.options.length;for(let B=0;B<F;B++){let $=this.options[B].attributeName();_[$]=$===this._versionOptionName?this._version:this[$]}return _}return this._optionValues}optsWithGlobals(){return this._getCommandAndAncestors().reduce((_,F)=>Object.assign(_,F.opts()),{})}error(_,F){if(this._outputConfiguration.outputError(`${_}
`,this._outputConfiguration.writeErr),typeof this._showHelpAfterError==="string")this._outputConfiguration.writeErr(`${this._showHelpAfterError}
`);else if(this._showHelpAfterError)this._outputConfiguration.writeErr(`
`),this.outputHelp({error:!0});let B=F||{},$=B.exitCode||1,J=B.code||"commander.error";this._exit($,J,_)}_parseOptionsEnv(){this.options.forEach((_)=>{if(_.envVar&&_.envVar in S.env){let F=_.attributeName();if(this.getOptionValue(F)===void 0||["default","config","env"].includes(this.getOptionValueSource(F)))if(_.required||_.optional)this.emit(`optionEnv:${_.name()}`,S.env[_.envVar]);else this.emit(`optionEnv:${_.name()}`)}})}_parseOptionsImplied(){let _=new Q3(this.options),F=(B)=>{return this.getOptionValue(B)!==void 0&&!["default","implied"].includes(this.getOptionValueSource(B))};this.options.filter((B)=>B.implied!==void 0&&F(B.attributeName())&&_.valueFromOption(this.getOptionValue(B.attributeName()),B)).forEach((B)=>{Object.keys(B.implied).filter(($)=>!F($)).forEach(($)=>{this.setOptionValueWithSource($,B.implied[$],"implied")})})}missingArgument(_){let F=`error: missing required argument '${_}'`;this.error(F,{code:"commander.missingArgument"})}optionMissingArgument(_){let F=`error: option '${_.flags}' argument missing`;this.error(F,{code:"commander.optionMissingArgument"})}missingMandatoryOptionValue(_){let F=`error: required option '${_.flags}' not specified`;this.error(F,{code:"commander.missingMandatoryOptionValue"})}_conflictingOption(_,F){let B=(Z)=>{let Q=Z.attributeName(),X=this.getOptionValue(Q),G=this.options.find((H)=>H.negate&&Q===H.attributeName()),Y=this.options.find((H)=>!H.negate&&Q===H.attributeName());if(G&&(G.presetArg===void 0&&X===!1||G.presetArg!==void 0&&X===G.presetArg))return G;return Y||Z},$=(Z)=>{let Q=B(Z),X=Q.attributeName();if(this.getOptionValueSource(X)==="env")return`environment variable '${Q.envVar}'`;return`option '${Q.flags}'`},J=`error: ${$(_)} cannot be used with ${$(F)}`;this.error(J,{code:"commander.conflictingOption"})}unknownOption(_){if(this._allowUnknownOption)return;let F="";if(_.startsWith("--")&&this._showSuggestionAfterError){let $=[],J=this;do{let Z=J.createHelp().visibleOptions(J).filter((Q)=>Q.long).map((Q)=>Q.long);$=$.concat(Z),J=J.parent}while(J&&!J._enablePositionalOptions);F=a1(_,$)}let B=`error: unknown option '${_}'${F}`;this.error(B,{code:"commander.unknownOption"})}_excessArguments(_){if(this._allowExcessArguments)return;let F=this.registeredArguments.length,B=F===1?"":"s",J=`error: too many arguments${this.parent?` for '${this.name()}'`:""}. Expected ${F} argument${B} but got ${_.length}.`;this.error(J,{code:"commander.excessArguments"})}unknownCommand(){let _=this.args[0],F="";if(this._showSuggestionAfterError){let $=[];this.createHelp().visibleCommands(this).forEach((J)=>{if($.push(J.name()),J.alias())$.push(J.alias())}),F=a1(_,$)}let B=`error: unknown command '${_}'${F}`;this.error(B,{code:"commander.unknownCommand"})}version(_,F,B){if(_===void 0)return this._version;this._version=_,F=F||"-V, --version",B=B||"output the version number";let $=this.createOption(F,B);return this._versionOptionName=$.attributeName(),this._registerOption($),this.on("option:"+$.name(),()=>{this._outputConfiguration.writeOut(`${_}
`),this._exit(0,"commander.version",_)}),this}description(_,F){if(_===void 0&&F===void 0)return this._description;if(this._description=_,F)this._argsDescription=F;return this}summary(_){if(_===void 0)return this._summary;return this._summary=_,this}alias(_){if(_===void 0)return this._aliases[0];let F=this;if(this.commands.length!==0&&this.commands[this.commands.length-1]._executableHandler)F=this.commands[this.commands.length-1];if(_===F._name)throw Error("Command alias can't be the same as its name");let B=this.parent?._findCommand(_);if(B){let $=[B.name()].concat(B.aliases()).join("|");throw Error(`cannot add alias '${_}' to command '${this.name()}' as already have command '${$}'`)}return F._aliases.push(_),this}aliases(_){if(_===void 0)return this._aliases;return _.forEach((F)=>this.alias(F)),this}usage(_){if(_===void 0){if(this._usage)return this._usage;let F=this.registeredArguments.map((B)=>{return J3(B)});return[].concat(this.options.length||this._helpOption!==null?"[options]":[],this.commands.length?"[command]":[],this.registeredArguments.length?F:[]).join(" ")}return this._usage=_,this}name(_){if(_===void 0)return this._name;return this._name=_,this}nameFromFilename(_){return this._name=s.basename(_,s.extname(_)),this}executableDir(_){if(_===void 0)return this._executableDir;return this._executableDir=_,this}helpInformation(_){let F=this.createHelp();if(F.helpWidth===void 0)F.helpWidth=_&&_.error?this._outputConfiguration.getErrHelpWidth():this._outputConfiguration.getOutHelpWidth();return F.formatHelp(this,F)}_getHelpContext(_){_=_||{};let F={error:!!_.error},B;if(F.error)B=($)=>this._outputConfiguration.writeErr($);else B=($)=>this._outputConfiguration.writeOut($);return F.write=_.write||B,F.command=this,F}outputHelp(_){let F;if(typeof _==="function")F=_,_=void 0;let B=this._getHelpContext(_);this._getCommandAndAncestors().reverse().forEach((J)=>J.emit("beforeAllHelp",B)),this.emit("beforeHelp",B);let $=this.helpInformation(B);if(F){if($=F($),typeof $!=="string"&&!Buffer.isBuffer($))throw Error("outputHelp callback must return a string or a Buffer")}if(B.write($),this._getHelpOption()?.long)this.emit(this._getHelpOption().long);this.emit("afterHelp",B),this._getCommandAndAncestors().forEach((J)=>J.emit("afterAllHelp",B))}helpOption(_,F){if(typeof _==="boolean"){if(_)this._helpOption=this._helpOption??void 0;else this._helpOption=null;return this}return _=_??"-h, --help",F=F??"display help for command",this._helpOption=this.createOption(_,F),this}_getHelpOption(){if(this._helpOption===void 0)this.helpOption(void 0,void 0);return this._helpOption}addHelpOption(_){return this._helpOption=_,this}help(_){this.outputHelp(_);let F=S.exitCode||0;if(F===0&&_&&typeof _!=="function"&&_.error)F=1;this._exit(F,"commander.help","(outputHelp)")}addHelpText(_,F){let B=["beforeAll","before","after","afterAll"];if(!B.includes(_))throw Error(`Unexpected value for position to addHelpText.
Expecting one of '${B.join("', '")}'`);let $=`${_}Help`;return this.on($,(J)=>{let Z;if(typeof F==="function")Z=F({error:J.error,command:J.command});else Z=F;if(Z)J.write(`${Z}
`)}),this}_outputHelpIfRequested(_){let F=this._getHelpOption();if(F&&_.find(($)=>F.is($)))this.outputHelp(),this._exit(0,"commander.helpDisplayed","(outputHelp)")}}function o1(_){return _.map((F)=>{if(!F.startsWith("--inspect"))return F;let B,$="127.0.0.1",J="9229",Z;if((Z=F.match(/^(--inspect(-brk)?)$/))!==null)B=Z[1];else if((Z=F.match(/^(--inspect(-brk|-port)?)=([^:]+)$/))!==null)if(B=Z[1],/^\d+$/.test(Z[3]))J=Z[3];else $=Z[3];else if((Z=F.match(/^(--inspect(-brk|-port)?)=([^:]+):(\d+)$/))!==null)B=Z[1],$=Z[3],J=Z[4];if(B&&J!=="0")return`${B}=${$}:${parseInt(J)+1}`;return F})}X3.Command=$1});var F2=t((U3)=>{var{Argument:t1}=k0(),{Command:J1}=r1(),{CommanderError:Y3,InvalidArgumentError:e1}=M0(),{Help:z3}=t0(),{Option:_2}=e0();U3.program=new J1;U3.createCommand=(_)=>new J1(_);U3.createOption=(_,F)=>new _2(_,F);U3.createArgument=(_,F)=>new t1(_,F);U3.Command=J1;U3.Option=_2;U3.Argument=t1;U3.Help=z3;U3.CommanderError=Y3;U3.InvalidArgumentError=e1;U3.InvalidOptionArgumentError=e1});var p2=t((SF,c0)=>{function v2(_){return Array.isArray(_)?_:[_]}var H6=void 0,E1="",x2=" ",R1="\\",W6=/^\s+$/,K6=/(?:[^\\]|^)\\$/,q6=/^\\!/,A6=/^\\#/,L6=/\r?\n/g,j6=/^\.{0,2}\/|^\.{1,2}$/,N6=/\/$/,q0="/",f2="node-ignore";if(typeof Symbol<"u")f2=Symbol.for("node-ignore");var h2=f2,A0=(_,F,B)=>{return Object.defineProperty(_,F,{value:B}),B},M6=/([0-z])-([0-z])/g,u2=()=>!1,R6=(_)=>_.replace(M6,(F,B,$)=>B.charCodeAt(0)<=$.charCodeAt(0)?F:E1),E6=(_)=>{let{length:F}=_;return _.slice(0,F-F%2)},D6=[[/^\uFEFF/,()=>E1],[/((?:\\\\)*?)(\\?\s+)$/,(_,F,B)=>F+(B.indexOf("\\")===0?x2:E1)],[/(\\+?)\s/g,(_,F)=>{let{length:B}=F;return F.slice(0,B-B%2)+x2}],[/[\\$.|*+(){^]/g,(_)=>`\\${_}`],[/(?!\\)\?/g,()=>"[^/]"],[/^\//,()=>"^"],[/\//g,()=>"\\/"],[/^\^*\\\*\\\*\\\//,()=>"^(?:.*\\/)?"],[/^(?=[^^])/,function(){return!/\/(?!$)/.test(this)?"(?:^|\\/)":"^"}],[/\\\/\\\*\\\*(?=\\\/|$)/g,(_,F,B)=>F+6<B.length?"(?:\\/[^\\/]+)*":"\\/.+"],[/(^|[^\\]+)(\\\*)+(?=.+)/g,(_,F,B)=>{let $=B.replace(/\\\*/g,"[^\\/]*");return F+$}],[/\\\\\\(?=[$.|*+(){^])/g,()=>R1],[/\\\\/g,()=>R1],[/(\\)?\[([^\]/]*?)(\\*)($|\])/g,(_,F,B,$,J)=>F===R1?`\\[${B}${E6($)}${J}`:J==="]"?$.length%2===0?`[${R6(B)}${$}]`:"[]":"[]"],[/(?:[^*])$/,(_)=>/\/$/.test(_)?`${_}$`:`${_}(?=$|\\/$)`]],V6=/(^|\\\/)?\\\*$/,T0="regex",g0="checkRegex",y2="_",O6={[T0](_,F){return`${F?`${F}[^/]+`:"[^/]*"}(?=$|\\/$)`},[g0](_,F){return`${F?`${F}[^/]*`:"[^/]*"}(?=$|\\/$)`}},T6=(_)=>D6.reduce((F,[B,$])=>F.replace(B,$.bind(_)),_),d0=(_)=>typeof _==="string",w6=(_)=>_&&d0(_)&&!W6.test(_)&&!K6.test(_)&&_.indexOf("#")!==0,I6=(_)=>_.split(L6).filter(Boolean);class m2{constructor(_,F,B,$,J,Z){this.pattern=_,this.mark=F,this.negative=J,A0(this,"body",B),A0(this,"ignoreCase",$),A0(this,"regexPrefix",Z)}get regex(){let _=y2+T0;if(this[_])return this[_];return this._make(T0,_)}get checkRegex(){let _=y2+g0;if(this[_])return this[_];return this._make(g0,_)}_make(_,F){let B=this.regexPrefix.replace(V6,O6[_]),$=this.ignoreCase?new RegExp(B,"i"):new RegExp(B);return A0(this,F,$)}}var S6=({pattern:_,mark:F},B)=>{let $=!1,J=_;if(J.indexOf("!")===0)$=!0,J=J.substr(1);J=J.replace(q6,"!").replace(A6,"#");let Z=T6(J);return new m2(_,F,J,B,$,Z)};class g2{constructor(_){this._ignoreCase=_,this._rules=[]}_add(_){if(_&&_[h2]){this._rules=this._rules.concat(_._rules._rules),this._added=!0;return}if(d0(_))_={pattern:_};if(w6(_.pattern)){let F=S6(_,this._ignoreCase);this._added=!0,this._rules.push(F)}}add(_){return this._added=!1,v2(d0(_)?I6(_):_).forEach(this._add,this),this._added}test(_,F,B){let $=!1,J=!1,Z;this._rules.forEach((X)=>{let{negative:G}=X;if(J===G&&$!==J||G&&!$&&!J&&!F)return;if(!X[B].test(_))return;$=!G,J=G,Z=G?H6:X});let Q={ignored:$,unignored:J};if(Z)Q.rule=Z;return Q}}var b6=(_,F)=>{throw new F(_)},a=(_,F,B)=>{if(!d0(_))return B(`path must be a string, but got \`${F}\``,TypeError);if(!_)return B("path must not be empty",TypeError);if(a.isNotRelative(_))return B(`path should be a \`path.relative()\`d string, but got "${F}"`,RangeError);return!0},d2=(_)=>j6.test(_);a.isNotRelative=d2;a.convert=(_)=>_;class c2{constructor({ignorecase:_=!0,ignoreCase:F=_,allowRelativePaths:B=!1}={}){A0(this,h2,!0),this._rules=new g2(F),this._strictPathCheck=!B,this._initCache()}_initCache(){this._ignoreCache=Object.create(null),this._testCache=Object.create(null)}add(_){if(this._rules.add(_))this._initCache();return this}addPattern(_){return this.add(_)}_test(_,F,B,$){let J=_&&a.convert(_);return a(J,_,this._strictPathCheck?b6:u2),this._t(J,F,B,$)}checkIgnore(_){if(!N6.test(_))return this.test(_);let F=_.split(q0).filter(Boolean);if(F.pop(),F.length){let B=this._t(F.join(q0)+q0,this._testCache,!0,F);if(B.ignored)return B}return this._rules.test(_,!1,g0)}_t(_,F,B,$){if(_ in F)return F[_];if(!$)$=_.split(q0).filter(Boolean);if($.pop(),!$.length)return F[_]=this._rules.test(_,B,T0);let J=this._t($.join(q0)+q0,F,B,$);return F[_]=J.ignored?J:this._rules.test(_,B,T0)}ignores(_){return this._test(_,this._ignoreCache,!1).ignored}createFilter(){return(_)=>!this.ignores(_)}filter(_){return v2(_).filter(this.createFilter())}test(_){return this._test(_,this._testCache,!0)}}var D1=(_)=>new c2(_),C6=(_)=>a(_&&a.convert(_),_,u2),l2=()=>{let _=(B)=>/^\\\\\?\\/.test(B)||/["<>|\u0000-\u001F]+/u.test(B)?B:B.replace(/\\/g,"/");a.convert=_;let F=/^[a-z]:\//i;a.isNotRelative=(B)=>F.test(B)||d2(B)};if(typeof process<"u"&&process.platform==="win32")l2();c0.exports=D1;D1.default=D1;c0.exports.isPathValid=C6;A0(c0.exports,Symbol.for("setupWindows"),l2)});var B2=U0(F2(),1),{program:T5,createCommand:w5,createArgument:I5,createOption:S5,CommanderError:b5,InvalidArgumentError:C5,InvalidOptionArgumentError:k5,Command:f,Argument:P5,Option:x5,Help:y5}=B2.default;var $2=(_=0)=>(F)=>`\x1B[${F+_}m`,J2=(_=0)=>(F)=>`\x1B[${38+_};5;${F}m`,Z2=(_=0)=>(F,B,$)=>`\x1B[${38+_};2;${F};${B};${$}m`,T={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],overline:[53,55],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],blackBright:[90,39],gray:[90,39],grey:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgGray:[100,49],bgGrey:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}},f5=Object.keys(T.modifier),D3=Object.keys(T.color),V3=Object.keys(T.bgColor),h5=[...D3,...V3];function O3(){let _=new Map;for(let[F,B]of Object.entries(T)){for(let[$,J]of Object.entries(B))T[$]={open:`\x1B[${J[0]}m`,close:`\x1B[${J[1]}m`},B[$]=T[$],_.set(J[0],J[1]);Object.defineProperty(T,F,{value:B,enumerable:!1})}return Object.defineProperty(T,"codes",{value:_,enumerable:!1}),T.color.close="\x1B[39m",T.bgColor.close="\x1B[49m",T.color.ansi=$2(),T.color.ansi256=J2(),T.color.ansi16m=Z2(),T.bgColor.ansi=$2(10),T.bgColor.ansi256=J2(10),T.bgColor.ansi16m=Z2(10),Object.defineProperties(T,{rgbToAnsi256:{value(F,B,$){if(F===B&&B===$){if(F<8)return 16;if(F>248)return 231;return Math.round((F-8)/247*24)+232}return 16+36*Math.round(F/255*5)+6*Math.round(B/255*5)+Math.round($/255*5)},enumerable:!1},hexToRgb:{value(F){let B=/[a-f\d]{6}|[a-f\d]{3}/i.exec(F.toString(16));if(!B)return[0,0,0];let[$]=B;if($.length===3)$=[...$].map((Z)=>Z+Z).join("");let J=Number.parseInt($,16);return[J>>16&255,J>>8&255,J&255]},enumerable:!1},hexToAnsi256:{value:(F)=>T.rgbToAnsi256(...T.hexToRgb(F)),enumerable:!1},ansi256ToAnsi:{value(F){if(F<8)return 30+F;if(F<16)return 90+(F-8);let B,$,J;if(F>=232)B=((F-232)*10+8)/255,$=B,J=B;else{F-=16;let X=F%36;B=Math.floor(F/36)/5,$=Math.floor(X/6)/5,J=X%6/5}let Z=Math.max(B,$,J)*2;if(Z===0)return 30;let Q=30+(Math.round(J)<<2|Math.round($)<<1|Math.round(B));if(Z===2)Q+=60;return Q},enumerable:!1},rgbToAnsi:{value:(F,B,$)=>T.ansi256ToAnsi(T.rgbToAnsi256(F,B,$)),enumerable:!1},hexToAnsi:{value:(F)=>T.ansi256ToAnsi(T.hexToAnsi256(F)),enumerable:!1}}),T}var T3=O3(),d=T3;import Z1 from"node:process";import w3 from"node:os";import Q2 from"node:tty";function m(_,F=globalThis.Deno?globalThis.Deno.args:Z1.argv){let B=_.startsWith("-")?"":_.length===1?"-":"--",$=F.indexOf(B+_),J=F.indexOf("--");return $!==-1&&(J===-1||$<J)}var{env:w}=Z1,P0;if(m("no-color")||m("no-colors")||m("color=false")||m("color=never"))P0=0;else if(m("color")||m("colors")||m("color=true")||m("color=always"))P0=1;function I3(){if("FORCE_COLOR"in w){if(w.FORCE_COLOR==="true")return 1;if(w.FORCE_COLOR==="false")return 0;return w.FORCE_COLOR.length===0?1:Math.min(Number.parseInt(w.FORCE_COLOR,10),3)}}function S3(_){if(_===0)return!1;return{level:_,hasBasic:!0,has256:_>=2,has16m:_>=3}}function b3(_,{streamIsTTY:F,sniffFlags:B=!0}={}){let $=I3();if($!==void 0)P0=$;let J=B?P0:$;if(J===0)return 0;if(B){if(m("color=16m")||m("color=full")||m("color=truecolor"))return 3;if(m("color=256"))return 2}if("TF_BUILD"in w&&"AGENT_NAME"in w)return 1;if(_&&!F&&J===void 0)return 0;let Z=J||0;if(w.TERM==="dumb")return Z;if(Z1.platform==="win32"){let Q=w3.release().split(".");if(Number(Q[0])>=10&&Number(Q[2])>=10586)return Number(Q[2])>=14931?3:2;return 1}if("CI"in w){if(["GITHUB_ACTIONS","GITEA_ACTIONS","CIRCLECI"].some((Q)=>(Q in w)))return 3;if(["TRAVIS","APPVEYOR","GITLAB_CI","BUILDKITE","DRONE"].some((Q)=>(Q in w))||w.CI_NAME==="codeship")return 1;return Z}if("TEAMCITY_VERSION"in w)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(w.TEAMCITY_VERSION)?1:0;if(w.COLORTERM==="truecolor")return 3;if(w.TERM==="xterm-kitty")return 3;if(w.TERM==="xterm-ghostty")return 3;if(w.TERM==="wezterm")return 3;if("TERM_PROGRAM"in w){let Q=Number.parseInt((w.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(w.TERM_PROGRAM){case"iTerm.app":return Q>=3?3:2;case"Apple_Terminal":return 2}}if(/-256(color)?$/i.test(w.TERM))return 2;if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(w.TERM))return 1;if("COLORTERM"in w)return 1;return Z}function X2(_,F={}){let B=b3(_,{streamIsTTY:_&&_.isTTY,...F});return S3(B)}var C3={stdout:X2({isTTY:Q2.isatty(1)}),stderr:X2({isTTY:Q2.isatty(2)})},G2=C3;function Y2(_,F,B){let $=_.indexOf(F);if($===-1)return _;let J=F.length,Z=0,Q="";do Q+=_.slice(Z,$)+F+B,Z=$+J,$=_.indexOf(F,Z);while($!==-1);return Q+=_.slice(Z),Q}function z2(_,F,B,$){let J=0,Z="";do{let Q=_[$-1]==="\r";Z+=_.slice(J,Q?$-1:$)+F+(Q?`\r
`:`
`)+B,J=$+1,$=_.indexOf(`
`,J)}while($!==-1);return Z+=_.slice(J),Z}var{stdout:U2,stderr:H2}=G2,Q1=Symbol("GENERATOR"),H0=Symbol("STYLER"),R0=Symbol("IS_EMPTY"),W2=["ansi","ansi","ansi256","ansi16m"],W0=Object.create(null),k3=(_,F={})=>{if(F.level&&!(Number.isInteger(F.level)&&F.level>=0&&F.level<=3))throw Error("The `level` option should be an integer from 0 to 3");let B=U2?U2.level:0;_.level=F.level===void 0?B:F.level};var P3=(_)=>{let F=(...B)=>B.join(" ");return k3(F,_),Object.setPrototypeOf(F,E0.prototype),F};function E0(_){return P3(_)}Object.setPrototypeOf(E0.prototype,Function.prototype);for(let[_,F]of Object.entries(d))W0[_]={get(){let B=x0(this,G1(F.open,F.close,this[H0]),this[R0]);return Object.defineProperty(this,_,{value:B}),B}};W0.visible={get(){let _=x0(this,this[H0],!0);return Object.defineProperty(this,"visible",{value:_}),_}};var X1=(_,F,B,...$)=>{if(_==="rgb"){if(F==="ansi16m")return d[B].ansi16m(...$);if(F==="ansi256")return d[B].ansi256(d.rgbToAnsi256(...$));return d[B].ansi(d.rgbToAnsi(...$))}if(_==="hex")return X1("rgb",F,B,...d.hexToRgb(...$));return d[B][_](...$)},x3=["rgb","hex","ansi256"];for(let _ of x3){W0[_]={get(){let{level:B}=this;return function(...$){let J=G1(X1(_,W2[B],"color",...$),d.color.close,this[H0]);return x0(this,J,this[R0])}}};let F="bg"+_[0].toUpperCase()+_.slice(1);W0[F]={get(){let{level:B}=this;return function(...$){let J=G1(X1(_,W2[B],"bgColor",...$),d.bgColor.close,this[H0]);return x0(this,J,this[R0])}}}}var y3=Object.defineProperties(()=>{},{...W0,level:{enumerable:!0,get(){return this[Q1].level},set(_){this[Q1].level=_}}}),G1=(_,F,B)=>{let $,J;if(B===void 0)$=_,J=F;else $=B.openAll+_,J=F+B.closeAll;return{open:_,close:F,openAll:$,closeAll:J,parent:B}},x0=(_,F,B)=>{let $=(...J)=>v3($,J.length===1?""+J[0]:J.join(" "));return Object.setPrototypeOf($,y3),$[Q1]=_,$[H0]=F,$[R0]=B,$},v3=(_,F)=>{if(_.level<=0||!F)return _[R0]?"":F;let B=_[H0];if(B===void 0)return F;let{openAll:$,closeAll:J}=B;if(F.includes("\x1B"))while(B!==void 0)F=Y2(F,B.close,B.open),B=B.parent;let Z=F.indexOf(`
`);if(Z!==-1)F=z2(F,J,$,Z);return $+F+J};Object.defineProperties(E0.prototype,W0);var f3=E0(),n5=E0({level:H2?H2.level:0});var U=f3;import m0 from"node:process";import E2 from"node:process";import f0 from"node:process";var h3=(_,F,B,$)=>{if(B==="length"||B==="prototype")return;if(B==="arguments"||B==="caller")return;let J=Object.getOwnPropertyDescriptor(_,B),Z=Object.getOwnPropertyDescriptor(F,B);if(!u3(J,Z)&&$)return;Object.defineProperty(_,B,Z)},u3=function(_,F){return _===void 0||_.configurable||_.writable===F.writable&&_.enumerable===F.enumerable&&_.configurable===F.configurable&&(_.writable||_.value===F.value)},m3=(_,F)=>{let B=Object.getPrototypeOf(F);if(B===Object.getPrototypeOf(_))return;Object.setPrototypeOf(_,B)},g3=(_,F)=>`/* Wrapped ${_}*/
${F}`,d3=Object.getOwnPropertyDescriptor(Function.prototype,"toString"),c3=Object.getOwnPropertyDescriptor(Function.prototype.toString,"name"),l3=(_,F,B)=>{let $=B===""?"":`with ${B.trim()}() `,J=g3.bind(null,$,F.toString());Object.defineProperty(J,"name",c3);let{writable:Z,enumerable:Q,configurable:X}=d3;Object.defineProperty(_,"toString",{value:J,writable:Z,enumerable:Q,configurable:X})};function Y1(_,F,{ignoreNonConfigurable:B=!1}={}){let{name:$}=_;for(let J of Reflect.ownKeys(F))h3(_,F,J,B);return m3(_,F),l3(_,F,$),_}var y0=new WeakMap,K2=(_,F={})=>{if(typeof _!=="function")throw TypeError("Expected a function");let B,$=0,J=_.displayName||_.name||"<anonymous>",Z=function(...Q){if(y0.set(Z,++$),$===1)B=_.apply(this,Q),_=void 0;else if(F.throw===!0)throw Error(`Function \`${J}\` can only be called once`);return B};return Y1(Z,_),y0.set(Z,$),Z};K2.callCount=(_)=>{if(!y0.has(_))throw Error(`The given function \`${_.name}\` is not wrapped by the \`onetime\` package`);return y0.get(_)};var q2=K2;var J0=[];J0.push("SIGHUP","SIGINT","SIGTERM");if(process.platform!=="win32")J0.push("SIGALRM","SIGABRT","SIGVTALRM","SIGXCPU","SIGXFSZ","SIGUSR2","SIGTRAP","SIGSYS","SIGQUIT","SIGIOT");if(process.platform==="linux")J0.push("SIGIO","SIGPOLL","SIGPWR","SIGSTKFLT");var v0=(_)=>!!_&&typeof _==="object"&&typeof _.removeListener==="function"&&typeof _.emit==="function"&&typeof _.reallyExit==="function"&&typeof _.listeners==="function"&&typeof _.kill==="function"&&typeof _.pid==="number"&&typeof _.on==="function",z1=Symbol.for("signal-exit emitter"),U1=globalThis,p3=Object.defineProperty.bind(Object);class A2{emitted={afterExit:!1,exit:!1};listeners={afterExit:[],exit:[]};count=0;id=Math.random();constructor(){if(U1[z1])return U1[z1];p3(U1,z1,{value:this,writable:!1,enumerable:!1,configurable:!1})}on(_,F){this.listeners[_].push(F)}removeListener(_,F){let B=this.listeners[_],$=B.indexOf(F);if($===-1)return;if($===0&&B.length===1)B.length=0;else B.splice($,1)}emit(_,F,B){if(this.emitted[_])return!1;this.emitted[_]=!0;let $=!1;for(let J of this.listeners[_])$=J(F,B)===!0||$;if(_==="exit")$=this.emit("afterExit",F,B)||$;return $}}class W1{}var i3=(_)=>{return{onExit(F,B){return _.onExit(F,B)},load(){return _.load()},unload(){return _.unload()}}};class L2 extends W1{onExit(){return()=>{}}load(){}unload(){}}class j2 extends W1{#Z=H1.platform==="win32"?"SIGINT":"SIGHUP";#$=new A2;#_;#J;#W;#U={};#F=!1;constructor(_){super();this.#_=_,this.#U={};for(let F of J0)this.#U[F]=()=>{let B=this.#_.listeners(F),{count:$}=this.#$,J=_;if(typeof J.__signal_exit_emitter__==="object"&&typeof J.__signal_exit_emitter__.count==="number")$+=J.__signal_exit_emitter__.count;if(B.length===$){this.unload();let Z=this.#$.emit("exit",null,F),Q=F==="SIGHUP"?this.#Z:F;if(!Z)_.kill(_.pid,Q)}};this.#W=_.reallyExit,this.#J=_.emit}onExit(_,F){if(!v0(this.#_))return()=>{};if(this.#F===!1)this.load();let B=F?.alwaysLast?"afterExit":"exit";return this.#$.on(B,_),()=>{if(this.#$.removeListener(B,_),this.#$.listeners.exit.length===0&&this.#$.listeners.afterExit.length===0)this.unload()}}load(){if(this.#F)return;this.#F=!0,this.#$.count+=1;for(let _ of J0)try{let F=this.#U[_];if(F)this.#_.on(_,F)}catch(F){}this.#_.emit=(_,...F)=>{return this.#B(_,...F)},this.#_.reallyExit=(_)=>{return this.#Q(_)}}unload(){if(!this.#F)return;this.#F=!1,J0.forEach((_)=>{let F=this.#U[_];if(!F)throw Error("Listener not defined for signal: "+_);try{this.#_.removeListener(_,F)}catch(B){}}),this.#_.emit=this.#J,this.#_.reallyExit=this.#W,this.#$.count-=1}#Q(_){if(!v0(this.#_))return 0;return this.#_.exitCode=_||0,this.#$.emit("exit",this.#_.exitCode,null),this.#W.call(this.#_,this.#_.exitCode)}#B(_,...F){let B=this.#J;if(_==="exit"&&v0(this.#_)){if(typeof F[0]==="number")this.#_.exitCode=F[0];let $=B.call(this.#_,_,...F);return this.#$.emit("exit",this.#_.exitCode,null),$}else return B.call(this.#_,_,...F)}}var H1=globalThis.process,{onExit:N2,load:F8,unload:B8}=i3(v0(H1)?new j2(H1):new L2);var M2=f0.stderr.isTTY?f0.stderr:f0.stdout.isTTY?f0.stdout:void 0,s3=M2?q2(()=>{N2(()=>{M2.write("\x1B[?25h")},{alwaysLast:!0})}):()=>{},R2=s3;var h0=!1,K0={};K0.show=(_=E2.stderr)=>{if(!_.isTTY)return;h0=!1,_.write("\x1B[?25h")};K0.hide=(_=E2.stderr)=>{if(!_.isTTY)return;R2(),h0=!0,_.write("\x1B[?25l")};K0.toggle=(_,F)=>{if(_!==void 0)h0=_;if(h0)K0.show(F);else K0.hide(F)};var K1=K0;var q1={dots:{interval:80,frames:["⠋","⠙","⠹","⠸","⠼","⠴","⠦","⠧","⠇","⠏"]},dots2:{interval:80,frames:["⣾","⣽","⣻","⢿","⡿","⣟","⣯","⣷"]},dots3:{interval:80,frames:["⠋","⠙","⠚","⠞","⠖","⠦","⠴","⠲","⠳","⠓"]},dots4:{interval:80,frames:["⠄","⠆","⠇","⠋","⠙","⠸","⠰","⠠","⠰","⠸","⠙","⠋","⠇","⠆"]},dots5:{interval:80,frames:["⠋","⠙","⠚","⠒","⠂","⠂","⠒","⠲","⠴","⠦","⠖","⠒","⠐","⠐","⠒","⠓","⠋"]},dots6:{interval:80,frames:["⠁","⠉","⠙","⠚","⠒","⠂","⠂","⠒","⠲","⠴","⠤","⠄","⠄","⠤","⠴","⠲","⠒","⠂","⠂","⠒","⠚","⠙","⠉","⠁"]},dots7:{interval:80,frames:["⠈","⠉","⠋","⠓","⠒","⠐","⠐","⠒","⠖","⠦","⠤","⠠","⠠","⠤","⠦","⠖","⠒","⠐","⠐","⠒","⠓","⠋","⠉","⠈"]},dots8:{interval:80,frames:["⠁","⠁","⠉","⠙","⠚","⠒","⠂","⠂","⠒","⠲","⠴","⠤","⠄","⠄","⠤","⠠","⠠","⠤","⠦","⠖","⠒","⠐","⠐","⠒","⠓","⠋","⠉","⠈","⠈"]},dots9:{interval:80,frames:["⢹","⢺","⢼","⣸","⣇","⡧","⡗","⡏"]},dots10:{interval:80,frames:["⢄","⢂","⢁","⡁","⡈","⡐","⡠"]},dots11:{interval:100,frames:["⠁","⠂","⠄","⡀","⢀","⠠","⠐","⠈"]},dots12:{interval:80,frames:["⢀⠀","⡀⠀","⠄⠀","⢂⠀","⡂⠀","⠅⠀","⢃⠀","⡃⠀","⠍⠀","⢋⠀","⡋⠀","⠍⠁","⢋⠁","⡋⠁","⠍⠉","⠋⠉","⠋⠉","⠉⠙","⠉⠙","⠉⠩","⠈⢙","⠈⡙","⢈⠩","⡀⢙","⠄⡙","⢂⠩","⡂⢘","⠅⡘","⢃⠨","⡃⢐","⠍⡐","⢋⠠","⡋⢀","⠍⡁","⢋⠁","⡋⠁","⠍⠉","⠋⠉","⠋⠉","⠉⠙","⠉⠙","⠉⠩","⠈⢙","⠈⡙","⠈⠩","⠀⢙","⠀⡙","⠀⠩","⠀⢘","⠀⡘","⠀⠨","⠀⢐","⠀⡐","⠀⠠","⠀⢀","⠀⡀"]},dots13:{interval:80,frames:["⣼","⣹","⢻","⠿","⡟","⣏","⣧","⣶"]},dots14:{interval:80,frames:["⠉⠉","⠈⠙","⠀⠹","⠀⢸","⠀⣰","⢀⣠","⣀⣀","⣄⡀","⣆⠀","⡇⠀","⠏⠀","⠋⠁"]},dots8Bit:{interval:80,frames:["⠀","⠁","⠂","⠃","⠄","⠅","⠆","⠇","⡀","⡁","⡂","⡃","⡄","⡅","⡆","⡇","⠈","⠉","⠊","⠋","⠌","⠍","⠎","⠏","⡈","⡉","⡊","⡋","⡌","⡍","⡎","⡏","⠐","⠑","⠒","⠓","⠔","⠕","⠖","⠗","⡐","⡑","⡒","⡓","⡔","⡕","⡖","⡗","⠘","⠙","⠚","⠛","⠜","⠝","⠞","⠟","⡘","⡙","⡚","⡛","⡜","⡝","⡞","⡟","⠠","⠡","⠢","⠣","⠤","⠥","⠦","⠧","⡠","⡡","⡢","⡣","⡤","⡥","⡦","⡧","⠨","⠩","⠪","⠫","⠬","⠭","⠮","⠯","⡨","⡩","⡪","⡫","⡬","⡭","⡮","⡯","⠰","⠱","⠲","⠳","⠴","⠵","⠶","⠷","⡰","⡱","⡲","⡳","⡴","⡵","⡶","⡷","⠸","⠹","⠺","⠻","⠼","⠽","⠾","⠿","⡸","⡹","⡺","⡻","⡼","⡽","⡾","⡿","⢀","⢁","⢂","⢃","⢄","⢅","⢆","⢇","⣀","⣁","⣂","⣃","⣄","⣅","⣆","⣇","⢈","⢉","⢊","⢋","⢌","⢍","⢎","⢏","⣈","⣉","⣊","⣋","⣌","⣍","⣎","⣏","⢐","⢑","⢒","⢓","⢔","⢕","⢖","⢗","⣐","⣑","⣒","⣓","⣔","⣕","⣖","⣗","⢘","⢙","⢚","⢛","⢜","⢝","⢞","⢟","⣘","⣙","⣚","⣛","⣜","⣝","⣞","⣟","⢠","⢡","⢢","⢣","⢤","⢥","⢦","⢧","⣠","⣡","⣢","⣣","⣤","⣥","⣦","⣧","⢨","⢩","⢪","⢫","⢬","⢭","⢮","⢯","⣨","⣩","⣪","⣫","⣬","⣭","⣮","⣯","⢰","⢱","⢲","⢳","⢴","⢵","⢶","⢷","⣰","⣱","⣲","⣳","⣴","⣵","⣶","⣷","⢸","⢹","⢺","⢻","⢼","⢽","⢾","⢿","⣸","⣹","⣺","⣻","⣼","⣽","⣾","⣿"]},dotsCircle:{interval:80,frames:["⢎ ","⠎⠁","⠊⠑","⠈⠱"," ⡱","⢀⡰","⢄⡠","⢆⡀"]},sand:{interval:80,frames:["⠁","⠂","⠄","⡀","⡈","⡐","⡠","⣀","⣁","⣂","⣄","⣌","⣔","⣤","⣥","⣦","⣮","⣶","⣷","⣿","⡿","⠿","⢟","⠟","⡛","⠛","⠫","⢋","⠋","⠍","⡉","⠉","⠑","⠡","⢁"]},line:{interval:130,frames:["-","\\","|","/"]},line2:{interval:100,frames:["⠂","-","–","—","–","-"]},rollingLine:{interval:80,frames:["/  "," - "," \\ ","  |","  |"," \\ "," - ","/  "]},pipe:{interval:100,frames:["┤","┘","┴","└","├","┌","┬","┐"]},simpleDots:{interval:400,frames:[".  ",".. ","...","   "]},simpleDotsScrolling:{interval:200,frames:[".  ",".. ","..."," ..","  .","   "]},star:{interval:70,frames:["✶","✸","✹","✺","✹","✷"]},star2:{interval:80,frames:["+","x","*"]},flip:{interval:70,frames:["_","_","_","-","`","`","'","´","-","_","_","_"]},hamburger:{interval:100,frames:["☱","☲","☴"]},growVertical:{interval:120,frames:["▁","▃","▄","▅","▆","▇","▆","▅","▄","▃"]},growHorizontal:{interval:120,frames:["▏","▎","▍","▌","▋","▊","▉","▊","▋","▌","▍","▎"]},balloon:{interval:140,frames:[" ",".","o","O","@","*"," "]},balloon2:{interval:120,frames:[".","o","O","°","O","o","."]},noise:{interval:100,frames:["▓","▒","░"]},bounce:{interval:120,frames:["⠁","⠂","⠄","⠂"]},boxBounce:{interval:120,frames:["▖","▘","▝","▗"]},boxBounce2:{interval:100,frames:["▌","▀","▐","▄"]},triangle:{interval:50,frames:["◢","◣","◤","◥"]},binary:{interval:80,frames:["010010","001100","100101","111010","111101","010111","101011","111000","110011","110101"]},arc:{interval:100,frames:["◜","◠","◝","◞","◡","◟"]},circle:{interval:120,frames:["◡","⊙","◠"]},squareCorners:{interval:180,frames:["◰","◳","◲","◱"]},circleQuarters:{interval:120,frames:["◴","◷","◶","◵"]},circleHalves:{interval:50,frames:["◐","◓","◑","◒"]},squish:{interval:100,frames:["╫","╪"]},toggle:{interval:250,frames:["⊶","⊷"]},toggle2:{interval:80,frames:["▫","▪"]},toggle3:{interval:120,frames:["□","■"]},toggle4:{interval:100,frames:["■","□","▪","▫"]},toggle5:{interval:100,frames:["▮","▯"]},toggle6:{interval:300,frames:["ဝ","၀"]},toggle7:{interval:80,frames:["⦾","⦿"]},toggle8:{interval:100,frames:["◍","◌"]},toggle9:{interval:100,frames:["◉","◎"]},toggle10:{interval:100,frames:["㊂","㊀","㊁"]},toggle11:{interval:50,frames:["⧇","⧆"]},toggle12:{interval:120,frames:["☗","☖"]},toggle13:{interval:80,frames:["=","*","-"]},arrow:{interval:100,frames:["←","↖","↑","↗","→","↘","↓","↙"]},arrow2:{interval:80,frames:["⬆️ ","↗️ ","➡️ ","↘️ ","⬇️ ","↙️ ","⬅️ ","↖️ "]},arrow3:{interval:120,frames:["▹▹▹▹▹","▸▹▹▹▹","▹▸▹▹▹","▹▹▸▹▹","▹▹▹▸▹","▹▹▹▹▸"]},bouncingBar:{interval:80,frames:["[    ]","[=   ]","[==  ]","[=== ]","[====]","[ ===]","[  ==]","[   =]","[    ]","[   =]","[  ==]","[ ===]","[====]","[=== ]","[==  ]","[=   ]"]},bouncingBall:{interval:80,frames:["( ●    )","(  ●   )","(   ●  )","(    ● )","(     ●)","(    ● )","(   ●  )","(  ●   )","( ●    )","(●     )"]},smiley:{interval:200,frames:["😄 ","😝 "]},monkey:{interval:300,frames:["🙈 ","🙈 ","🙉 ","🙊 "]},hearts:{interval:100,frames:["💛 ","💙 ","💜 ","💚 ","💗 "]},clock:{interval:100,frames:["🕛 ","🕐 ","🕑 ","🕒 ","🕓 ","🕔 ","🕕 ","🕖 ","🕗 ","🕘 ","🕙 ","🕚 "]},earth:{interval:180,frames:["🌍 ","🌎 ","🌏 "]},material:{interval:17,frames:["█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","██▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","███▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","████▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","██████▁▁▁▁▁▁▁▁▁▁▁▁▁▁","██████▁▁▁▁▁▁▁▁▁▁▁▁▁▁","███████▁▁▁▁▁▁▁▁▁▁▁▁▁","████████▁▁▁▁▁▁▁▁▁▁▁▁","█████████▁▁▁▁▁▁▁▁▁▁▁","█████████▁▁▁▁▁▁▁▁▁▁▁","██████████▁▁▁▁▁▁▁▁▁▁","███████████▁▁▁▁▁▁▁▁▁","█████████████▁▁▁▁▁▁▁","██████████████▁▁▁▁▁▁","██████████████▁▁▁▁▁▁","▁██████████████▁▁▁▁▁","▁██████████████▁▁▁▁▁","▁██████████████▁▁▁▁▁","▁▁██████████████▁▁▁▁","▁▁▁██████████████▁▁▁","▁▁▁▁█████████████▁▁▁","▁▁▁▁██████████████▁▁","▁▁▁▁██████████████▁▁","▁▁▁▁▁██████████████▁","▁▁▁▁▁██████████████▁","▁▁▁▁▁██████████████▁","▁▁▁▁▁▁██████████████","▁▁▁▁▁▁██████████████","▁▁▁▁▁▁▁█████████████","▁▁▁▁▁▁▁█████████████","▁▁▁▁▁▁▁▁████████████","▁▁▁▁▁▁▁▁████████████","▁▁▁▁▁▁▁▁▁███████████","▁▁▁▁▁▁▁▁▁███████████","▁▁▁▁▁▁▁▁▁▁██████████","▁▁▁▁▁▁▁▁▁▁██████████","▁▁▁▁▁▁▁▁▁▁▁▁████████","▁▁▁▁▁▁▁▁▁▁▁▁▁███████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁██████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█████","█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁████","██▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███","██▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███","███▁▁▁▁▁▁▁▁▁▁▁▁▁▁███","████▁▁▁▁▁▁▁▁▁▁▁▁▁▁██","█████▁▁▁▁▁▁▁▁▁▁▁▁▁▁█","█████▁▁▁▁▁▁▁▁▁▁▁▁▁▁█","██████▁▁▁▁▁▁▁▁▁▁▁▁▁█","████████▁▁▁▁▁▁▁▁▁▁▁▁","█████████▁▁▁▁▁▁▁▁▁▁▁","█████████▁▁▁▁▁▁▁▁▁▁▁","█████████▁▁▁▁▁▁▁▁▁▁▁","█████████▁▁▁▁▁▁▁▁▁▁▁","███████████▁▁▁▁▁▁▁▁▁","████████████▁▁▁▁▁▁▁▁","████████████▁▁▁▁▁▁▁▁","██████████████▁▁▁▁▁▁","██████████████▁▁▁▁▁▁","▁██████████████▁▁▁▁▁","▁██████████████▁▁▁▁▁","▁▁▁█████████████▁▁▁▁","▁▁▁▁▁████████████▁▁▁","▁▁▁▁▁████████████▁▁▁","▁▁▁▁▁▁███████████▁▁▁","▁▁▁▁▁▁▁▁█████████▁▁▁","▁▁▁▁▁▁▁▁█████████▁▁▁","▁▁▁▁▁▁▁▁▁█████████▁▁","▁▁▁▁▁▁▁▁▁█████████▁▁","▁▁▁▁▁▁▁▁▁▁█████████▁","▁▁▁▁▁▁▁▁▁▁▁████████▁","▁▁▁▁▁▁▁▁▁▁▁████████▁","▁▁▁▁▁▁▁▁▁▁▁▁███████▁","▁▁▁▁▁▁▁▁▁▁▁▁███████▁","▁▁▁▁▁▁▁▁▁▁▁▁▁███████","▁▁▁▁▁▁▁▁▁▁▁▁▁███████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁████","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁██","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁██","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁██","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁","▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁"]},moon:{interval:80,frames:["🌑 ","🌒 ","🌓 ","🌔 ","🌕 ","🌖 ","🌗 ","🌘 "]},runner:{interval:140,frames:["🚶 ","🏃 "]},pong:{interval:80,frames:["▐⠂       ▌","▐⠈       ▌","▐ ⠂      ▌","▐ ⠠      ▌","▐  ⡀     ▌","▐  ⠠     ▌","▐   ⠂    ▌","▐   ⠈    ▌","▐    ⠂   ▌","▐    ⠠   ▌","▐     ⡀  ▌","▐     ⠠  ▌","▐      ⠂ ▌","▐      ⠈ ▌","▐       ⠂▌","▐       ⠠▌","▐       ⡀▌","▐      ⠠ ▌","▐      ⠂ ▌","▐     ⠈  ▌","▐     ⠂  ▌","▐    ⠠   ▌","▐    ⡀   ▌","▐   ⠠    ▌","▐   ⠂    ▌","▐  ⠈     ▌","▐  ⠂     ▌","▐ ⠠      ▌","▐ ⡀      ▌","▐⠠       ▌"]},shark:{interval:120,frames:["▐|\\____________▌","▐_|\\___________▌","▐__|\\__________▌","▐___|\\_________▌","▐____|\\________▌","▐_____|\\_______▌","▐______|\\______▌","▐_______|\\_____▌","▐________|\\____▌","▐_________|\\___▌","▐__________|\\__▌","▐___________|\\_▌","▐____________|\\▌","▐____________/|▌","▐___________/|_▌","▐__________/|__▌","▐_________/|___▌","▐________/|____▌","▐_______/|_____▌","▐______/|______▌","▐_____/|_______▌","▐____/|________▌","▐___/|_________▌","▐__/|__________▌","▐_/|___________▌","▐/|____________▌"]},dqpb:{interval:100,frames:["d","q","p","b"]},weather:{interval:100,frames:["☀️ ","☀️ ","☀️ ","🌤 ","⛅️ ","🌥 ","☁️ ","🌧 ","🌨 ","🌧 ","🌨 ","🌧 ","🌨 ","⛈ ","🌨 ","🌧 ","🌨 ","☁️ ","🌥 ","⛅️ ","🌤 ","☀️ ","☀️ "]},christmas:{interval:400,frames:["🌲","🎄"]},grenade:{interval:80,frames:["،  ","′  "," ´ "," ‾ ","  ⸌","  ⸊","  |","  ⁎","  ⁕"," ෴ ","  ⁓","   ","   ","   "]},point:{interval:125,frames:["∙∙∙","●∙∙","∙●∙","∙∙●","∙∙∙"]},layer:{interval:150,frames:["-","=","≡"]},betaWave:{interval:80,frames:["ρββββββ","βρβββββ","ββρββββ","βββρβββ","ββββρββ","βββββρβ","ββββββρ"]},fingerDance:{interval:160,frames:["🤘 ","🤟 ","🖖 ","✋ ","🤚 ","👆 "]},fistBump:{interval:80,frames:["🤜　　　　🤛 ","🤜　　　　🤛 ","🤜　　　　🤛 ","　🤜　　🤛　 ","　　🤜🤛　　 ","　🤜✨🤛　　 ","🤜　✨　🤛　 "]},soccerHeader:{interval:80,frames:[" 🧑⚽️       🧑 ","🧑  ⚽️      🧑 ","🧑   ⚽️     🧑 ","🧑    ⚽️    🧑 ","🧑     ⚽️   🧑 ","🧑      ⚽️  🧑 ","🧑       ⚽️🧑  ","🧑      ⚽️  🧑 ","🧑     ⚽️   🧑 ","🧑    ⚽️    🧑 ","🧑   ⚽️     🧑 ","🧑  ⚽️      🧑 "]},mindblown:{interval:160,frames:["😐 ","😐 ","😮 ","😮 ","😦 ","😦 ","😧 ","😧 ","🤯 ","💥 ","✨ ","　 ","　 ","　 "]},speaker:{interval:160,frames:["🔈 ","🔉 ","🔊 ","🔉 "]},orangePulse:{interval:100,frames:["🔸 ","🔶 ","🟠 ","🟠 ","🔶 "]},bluePulse:{interval:100,frames:["🔹 ","🔷 ","🔵 ","🔵 ","🔷 "]},orangeBluePulse:{interval:100,frames:["🔸 ","🔶 ","🟠 ","🟠 ","🔶 ","🔹 ","🔷 ","🔵 ","🔵 ","🔷 "]},timeTravel:{interval:100,frames:["🕛 ","🕚 ","🕙 ","🕘 ","🕗 ","🕖 ","🕕 ","🕔 ","🕓 ","🕒 ","🕑 ","🕐 "]},aesthetic:{interval:80,frames:["▰▱▱▱▱▱▱","▰▰▱▱▱▱▱","▰▰▰▱▱▱▱","▰▰▰▰▱▱▱","▰▰▰▰▰▱▱","▰▰▰▰▰▰▱","▰▰▰▰▰▰▰","▰▱▱▱▱▱▱"]},dwarfFortress:{interval:80,frames:[" ██████£££  ","☺██████£££  ","☺██████£££  ","☺▓█████£££  ","☺▓█████£££  ","☺▒█████£££  ","☺▒█████£££  ","☺░█████£££  ","☺░█████£££  ","☺ █████£££  "," ☺█████£££  "," ☺█████£££  "," ☺▓████£££  "," ☺▓████£££  "," ☺▒████£££  "," ☺▒████£££  "," ☺░████£££  "," ☺░████£££  "," ☺ ████£££  ","  ☺████£££  ","  ☺████£££  ","  ☺▓███£££  ","  ☺▓███£££  ","  ☺▒███£££  ","  ☺▒███£££  ","  ☺░███£££  ","  ☺░███£££  ","  ☺ ███£££  ","   ☺███£££  ","   ☺███£££  ","   ☺▓██£££  ","   ☺▓██£££  ","   ☺▒██£££  ","   ☺▒██£££  ","   ☺░██£££  ","   ☺░██£££  ","   ☺ ██£££  ","    ☺██£££  ","    ☺██£££  ","    ☺▓█£££  ","    ☺▓█£££  ","    ☺▒█£££  ","    ☺▒█£££  ","    ☺░█£££  ","    ☺░█£££  ","    ☺ █£££  ","     ☺█£££  ","     ☺█£££  ","     ☺▓£££  ","     ☺▓£££  ","     ☺▒£££  ","     ☺▒£££  ","     ☺░£££  ","     ☺░£££  ","     ☺ £££  ","      ☺£££  ","      ☺£££  ","      ☺▓££  ","      ☺▓££  ","      ☺▒££  ","      ☺▒££  ","      ☺░££  ","      ☺░££  ","      ☺ ££  ","       ☺££  ","       ☺££  ","       ☺▓£  ","       ☺▓£  ","       ☺▒£  ","       ☺▒£  ","       ☺░£  ","       ☺░£  ","       ☺ £  ","        ☺£  ","        ☺£  ","        ☺▓  ","        ☺▓  ","        ☺▒  ","        ☺▒  ","        ☺░  ","        ☺░  ","        ☺   ","        ☺  &","        ☺ ☼&","       ☺ ☼ &","       ☺☼  &","      ☺☼  & ","      ‼   & ","     ☺   &  ","    ‼    &  ","   ☺    &   ","  ‼     &   "," ☺     &    ","‼      &    ","      &     ","      &     ","     &   ░  ","     &   ▒  ","    &    ▓  ","    &    £  ","   &    ░£  ","   &    ▒£  ","  &     ▓£  ","  &     ££  "," &     ░££  "," &     ▒££  ","&      ▓££  ","&      £££  ","      ░£££  ","      ▒£££  ","      ▓£££  ","      █£££  ","     ░█£££  ","     ▒█£££  ","     ▓█£££  ","     ██£££  ","    ░██£££  ","    ▒██£££  ","    ▓██£££  ","    ███£££  ","   ░███£££  ","   ▒███£££  ","   ▓███£££  ","   ████£££  ","  ░████£££  ","  ▒████£££  ","  ▓████£££  ","  █████£££  "," ░█████£££  "," ▒█████£££  "," ▓█████£££  "," ██████£££  "," ██████£££  "]}};var D0=q1,W8=Object.keys(q1);var Z0={};I2(Z0,{warning:()=>e3,success:()=>t3,info:()=>r3,error:()=>_6});import a3 from"node:tty";var o3=a3?.WriteStream?.prototype?.hasColors?.()??!1,A=(_,F)=>{if(!o3)return(J)=>J;let B=`\x1B[${_}m`,$=`\x1B[${F}m`;return(J)=>{let Z=J+"",Q=Z.indexOf($);if(Q===-1)return B+Z+$;let X=B,G=0,H=(F===22?$:"")+B;while(Q!==-1)X+=Z.slice(G,Q)+H,G=Q+$.length,Q=Z.indexOf($,G);return X+=Z.slice(G)+$,X}},A8=A(0,0),L8=A(1,22),j8=A(2,22),N8=A(3,23),M8=A(4,24),R8=A(53,55),E8=A(7,27),D8=A(8,28),V8=A(9,29),O8=A(30,39),D2=A(31,39),V2=A(32,39),O2=A(33,39),T2=A(34,39),T8=A(35,39),w8=A(36,39),I8=A(37,39),S8=A(90,39),b8=A(40,49),C8=A(41,49),k8=A(42,49),P8=A(43,49),x8=A(44,49),y8=A(45,49),v8=A(46,49),f8=A(47,49),h8=A(100,49),u8=A(91,39),m8=A(92,39),g8=A(93,39),d8=A(94,39),c8=A(95,39),l8=A(96,39),p8=A(97,39),i8=A(101,49),s8=A(102,49),n8=A(103,49),a8=A(104,49),o8=A(105,49),r8=A(106,49),t8=A(107,49);import w2 from"node:process";function V0(){let{env:_}=w2,{TERM:F,TERM_PROGRAM:B}=_;if(w2.platform!=="win32")return F!=="linux";return Boolean(_.WT_SESSION)||Boolean(_.TERMINUS_SUBLIME)||_.ConEmuTask==="{cmd::Cmder}"||B==="Terminus-Sublime"||B==="vscode"||F==="xterm-256color"||F==="alacritty"||F==="rxvt-unicode"||F==="rxvt-unicode-256color"||_.TERMINAL_EMULATOR==="JetBrains-JediTerm"}var u0=V0(),r3=T2(u0?"ℹ":"i"),t3=V2(u0?"✔":"√"),e3=O2(u0?"⚠":"‼"),_6=D2(u0?"✖":"×");function A1({onlyFirst:_=!1}={}){return new RegExp("(?:\\u001B\\][\\s\\S]*?(?:\\u0007|\\u001B\\u005C|\\u009C))|[\\u001B\\u009B][[\\]()#;?]*(?:\\d{1,4}(?:[;:]\\d{0,4})*)?[\\dA-PR-TZcf-nq-uy=><~]",_?void 0:"g")}var F6=A1();function O0(_){if(typeof _!=="string")throw TypeError(`Expected a \`string\`, got \`${typeof _}\``);return _.replace(F6,"")}function S2(_){return _===161||_===164||_===167||_===168||_===170||_===173||_===174||_>=176&&_<=180||_>=182&&_<=186||_>=188&&_<=191||_===198||_===208||_===215||_===216||_>=222&&_<=225||_===230||_>=232&&_<=234||_===236||_===237||_===240||_===242||_===243||_>=247&&_<=250||_===252||_===254||_===257||_===273||_===275||_===283||_===294||_===295||_===299||_>=305&&_<=307||_===312||_>=319&&_<=322||_===324||_>=328&&_<=331||_===333||_===338||_===339||_===358||_===359||_===363||_===462||_===464||_===466||_===468||_===470||_===472||_===474||_===476||_===593||_===609||_===708||_===711||_>=713&&_<=715||_===717||_===720||_>=728&&_<=731||_===733||_===735||_>=768&&_<=879||_>=913&&_<=929||_>=931&&_<=937||_>=945&&_<=961||_>=963&&_<=969||_===1025||_>=1040&&_<=1103||_===1105||_===8208||_>=8211&&_<=8214||_===8216||_===8217||_===8220||_===8221||_>=8224&&_<=8226||_>=8228&&_<=8231||_===8240||_===8242||_===8243||_===8245||_===8251||_===8254||_===8308||_===8319||_>=8321&&_<=8324||_===8364||_===8451||_===8453||_===8457||_===8467||_===8470||_===8481||_===8482||_===8486||_===8491||_===8531||_===8532||_>=8539&&_<=8542||_>=8544&&_<=8555||_>=8560&&_<=8569||_===8585||_>=8592&&_<=8601||_===8632||_===8633||_===8658||_===8660||_===8679||_===8704||_===8706||_===8707||_===8711||_===8712||_===8715||_===8719||_===8721||_===8725||_===8730||_>=8733&&_<=8736||_===8739||_===8741||_>=8743&&_<=8748||_===8750||_>=8756&&_<=8759||_===8764||_===8765||_===8776||_===8780||_===8786||_===8800||_===8801||_>=8804&&_<=8807||_===8810||_===8811||_===8814||_===8815||_===8834||_===8835||_===8838||_===8839||_===8853||_===8857||_===8869||_===8895||_===8978||_>=9312&&_<=9449||_>=9451&&_<=9547||_>=9552&&_<=9587||_>=9600&&_<=9615||_>=9618&&_<=9621||_===9632||_===9633||_>=9635&&_<=9641||_===9650||_===9651||_===9654||_===9655||_===9660||_===9661||_===9664||_===9665||_>=9670&&_<=9672||_===9675||_>=9678&&_<=9681||_>=9698&&_<=9701||_===9711||_===9733||_===9734||_===9737||_===9742||_===9743||_===9756||_===9758||_===9792||_===9794||_===9824||_===9825||_>=9827&&_<=9829||_>=9831&&_<=9834||_===9836||_===9837||_===9839||_===9886||_===9887||_===9919||_>=9926&&_<=9933||_>=9935&&_<=9939||_>=9941&&_<=9953||_===9955||_===9960||_===9961||_>=9963&&_<=9969||_===9972||_>=9974&&_<=9977||_===9979||_===9980||_===9982||_===9983||_===10045||_>=10102&&_<=10111||_>=11094&&_<=11097||_>=12872&&_<=12879||_>=57344&&_<=63743||_>=65024&&_<=65039||_===65533||_>=127232&&_<=127242||_>=127248&&_<=127277||_>=127280&&_<=127337||_>=127344&&_<=127373||_===127375||_===127376||_>=127387&&_<=127404||_>=917760&&_<=917999||_>=983040&&_<=1048573||_>=1048576&&_<=1114109}function b2(_){return _===12288||_>=65281&&_<=65376||_>=65504&&_<=65510}function C2(_){return _>=4352&&_<=4447||_===8986||_===8987||_===9001||_===9002||_>=9193&&_<=9196||_===9200||_===9203||_===9725||_===9726||_===9748||_===9749||_>=9776&&_<=9783||_>=9800&&_<=9811||_===9855||_>=9866&&_<=9871||_===9875||_===9889||_===9898||_===9899||_===9917||_===9918||_===9924||_===9925||_===9934||_===9940||_===9962||_===9970||_===9971||_===9973||_===9978||_===9981||_===9989||_===9994||_===9995||_===10024||_===10060||_===10062||_>=10067&&_<=10069||_===10071||_>=10133&&_<=10135||_===10160||_===10175||_===11035||_===11036||_===11088||_===11093||_>=11904&&_<=11929||_>=11931&&_<=12019||_>=12032&&_<=12245||_>=12272&&_<=12287||_>=12289&&_<=12350||_>=12353&&_<=12438||_>=12441&&_<=12543||_>=12549&&_<=12591||_>=12593&&_<=12686||_>=12688&&_<=12773||_>=12783&&_<=12830||_>=12832&&_<=12871||_>=12880&&_<=42124||_>=42128&&_<=42182||_>=43360&&_<=43388||_>=44032&&_<=55203||_>=63744&&_<=64255||_>=65040&&_<=65049||_>=65072&&_<=65106||_>=65108&&_<=65126||_>=65128&&_<=65131||_>=94176&&_<=94180||_>=94192&&_<=94198||_>=94208&&_<=101589||_>=101631&&_<=101662||_>=101760&&_<=101874||_>=110576&&_<=110579||_>=110581&&_<=110587||_===110589||_===110590||_>=110592&&_<=110882||_===110898||_>=110928&&_<=110930||_===110933||_>=110948&&_<=110951||_>=110960&&_<=111355||_>=119552&&_<=119638||_>=119648&&_<=119670||_===126980||_===127183||_===127374||_>=127377&&_<=127386||_>=127488&&_<=127490||_>=127504&&_<=127547||_>=127552&&_<=127560||_===127568||_===127569||_>=127584&&_<=127589||_>=127744&&_<=127776||_>=127789&&_<=127797||_>=127799&&_<=127868||_>=127870&&_<=127891||_>=127904&&_<=127946||_>=127951&&_<=127955||_>=127968&&_<=127984||_===127988||_>=127992&&_<=128062||_===128064||_>=128066&&_<=128252||_>=128255&&_<=128317||_>=128331&&_<=128334||_>=128336&&_<=128359||_===128378||_===128405||_===128406||_===128420||_>=128507&&_<=128591||_>=128640&&_<=128709||_===128716||_>=128720&&_<=128722||_>=128725&&_<=128728||_>=128732&&_<=128735||_===128747||_===128748||_>=128756&&_<=128764||_>=128992&&_<=129003||_===129008||_>=129292&&_<=129338||_>=129340&&_<=129349||_>=129351&&_<=129535||_>=129648&&_<=129660||_>=129664&&_<=129674||_>=129678&&_<=129734||_===129736||_>=129741&&_<=129756||_>=129759&&_<=129770||_>=129775&&_<=129784||_>=131072&&_<=196605||_>=196608&&_<=262141}function B6(_){if(!Number.isSafeInteger(_))throw TypeError(`Expected a code point, got \`${typeof _}\`.`)}function L1(_,{ambiguousAsWide:F=!1}={}){if(B6(_),b2(_)||C2(_)||F&&S2(_))return 2;return 1}var $6=new Intl.Segmenter,J6=/^(?:\p{Default_Ignorable_Code_Point}|\p{Control}|\p{Mark}|\p{Surrogate})+$/v,Z6=/^[\p{Default_Ignorable_Code_Point}\p{Control}\p{Format}\p{Mark}\p{Surrogate}]+/v,Q6=/^\p{RGI_Emoji}$/v;function X6(_){return _.replace(Z6,"")}function G6(_){return J6.test(_)}function Y6(_,F){let B=0;if(_.length>1){for(let $ of _.slice(1))if($>="＀"&&$<="￯")B+=L1($.codePointAt(0),F)}return B}function j1(_,F={}){if(typeof _!=="string"||_.length===0)return 0;let{ambiguousIsNarrow:B=!0,countAnsiEscapeCodes:$=!1}=F,J=_;if(!$)J=O0(J);if(J.length===0)return 0;let Z=0,Q={ambiguousAsWide:!B};for(let{segment:X}of $6.segment(J)){if(G6(X))continue;if(Q6.test(X)){Z+=2;continue}let G=X6(X).codePointAt(0);Z+=L1(G,Q),Z+=Y6(X,Q)}return Z}function N1({stream:_=process.stdout}={}){return Boolean(_&&_.isTTY&&process.env.TERM!=="dumb"&&!("CI"in process.env))}import l from"node:process";var z6=3;class k2{#Z=0;start(){if(this.#Z++,this.#Z===1)this.#$()}stop(){if(this.#Z<=0)throw Error("`stop` called more times than `start`");if(this.#Z--,this.#Z===0)this.#_()}#$(){if(l.platform==="win32"||!l.stdin.isTTY)return;l.stdin.setRawMode(!0),l.stdin.on("data",this.#J),l.stdin.resume()}#_(){if(!l.stdin.isTTY)return;l.stdin.off("data",this.#J),l.stdin.pause(),l.stdin.setRawMode(!1)}#J(_){if(_[0]===z6)l.emit("SIGINT")}}var U6=new k2,M1=U6;class P2{#Z=0;#$=!1;#_=0;#J=-1;#W=0;#U=0;#F;#Q;#B;#K;#L;#X;#H;#G;#q;#Y;#z;color;constructor(_){if(typeof _==="string")_={text:_};if(this.#F={color:"cyan",stream:m0.stderr,discardStdin:!0,hideCursor:!0,..._},this.color=this.#F.color,this.spinner=this.#F.spinner,this.#L=this.#F.interval,this.#B=this.#F.stream,this.#X=typeof this.#F.isEnabled==="boolean"?this.#F.isEnabled:N1({stream:this.#B}),this.#H=typeof this.#F.isSilent==="boolean"?this.#F.isSilent:!1,this.text=this.#F.text,this.prefixText=this.#F.prefixText,this.suffixText=this.#F.suffixText,this.indent=this.#F.indent,m0.env.NODE_ENV==="test")this._stream=this.#B,this._isEnabled=this.#X,Object.defineProperty(this,"_linesToClear",{get(){return this.#Z},set(F){this.#Z=F}}),Object.defineProperty(this,"_frameIndex",{get(){return this.#J}}),Object.defineProperty(this,"_lineCount",{get(){return this.#_}})}get indent(){return this.#G}set indent(_=0){if(!(_>=0&&Number.isInteger(_)))throw Error("The `indent` option must be an integer from 0 and up");this.#G=_,this.#A()}get interval(){return this.#L??this.#Q.interval??100}get spinner(){return this.#Q}set spinner(_){if(this.#J=-1,this.#L=void 0,typeof _==="object"){if(!Array.isArray(_.frames)||_.frames.length===0||_.frames.some((F)=>typeof F!=="string"))throw Error("The given spinner must have a non-empty `frames` array of strings");if(_.interval!==void 0&&!(Number.isInteger(_.interval)&&_.interval>0))throw Error("`spinner.interval` must be a positive integer if provided");this.#Q=_}else if(!V0())this.#Q=D0.line;else if(_===void 0)this.#Q=D0.dots;else if(_!=="default"&&D0[_])this.#Q=D0[_];else throw Error(`There is no built-in spinner named '${_}'. See https://github.com/sindresorhus/cli-spinners/blob/main/spinners.json for a full list.`)}get text(){return this.#q}set text(_=""){this.#q=_,this.#A()}get prefixText(){return this.#Y}set prefixText(_=""){this.#Y=_,this.#A()}get suffixText(){return this.#z}set suffixText(_=""){this.#z=_,this.#A()}get isSpinning(){return this.#K!==void 0}#R(_,F,B=!1){let $=typeof _==="function"?_():_;if(typeof $==="string"&&$!=="")return B?F+$:$+F;return""}#j(_=this.#Y,F=" "){return this.#R(_,F,!1)}#N(_=this.#z,F=" "){return this.#R(_,F,!0)}#M(_,F){let B=0;for(let $ of O0(_).split(`
`))B+=Math.max(1,Math.ceil(j1($)/F));return B}#A(){let _=this.#B.columns??80,F=typeof this.#Y==="function"?"":this.#Y,B=typeof this.#z==="function"?"":this.#z,$=typeof F==="string"&&F!==""?F+" ":"",J=typeof B==="string"&&B!==""?" "+B:"",Z="-",Q=" ".repeat(this.#G)+$+"-"+(typeof this.#q==="string"?" "+this.#q:"")+J;this.#_=this.#M(Q,_)}get isEnabled(){return this.#X&&!this.#H}set isEnabled(_){if(typeof _!=="boolean")throw TypeError("The `isEnabled` option must be a boolean");this.#X=_}get isSilent(){return this.#H}set isSilent(_){if(typeof _!=="boolean")throw TypeError("The `isSilent` option must be a boolean");this.#H=_}frame(){let _=Date.now();if(this.#J===-1||_-this.#W>=this.interval)this.#J=++this.#J%this.#Q.frames.length,this.#W=_;let{frames:F}=this.#Q,B=F[this.#J];if(this.color)B=U[this.color](B);let $=this.#j(this.#Y," "),J=typeof this.text==="string"?" "+this.text:"",Z=this.#N(this.#z," ");return $+B+J+Z}clear(){if(!this.#X||!this.#B.isTTY)return this;this.#B.cursorTo(0);for(let _=0;_<this.#Z;_++){if(_>0)this.#B.moveCursor(0,-1);this.#B.clearLine(1)}if(this.#G||this.#U!==this.#G)this.#B.cursorTo(this.#G);return this.#U=this.#G,this.#Z=0,this}render(){if(!this.#X||this.#H)return this;this.clear();let _=this.frame(),F=this.#B.columns??80,B=this.#M(_,F),$=this.#B.rows;if($&&$>1&&B>$){let J=_.split(`
`),Z=$-1;_=[...J.slice(0,Z),"... (content truncated to fit terminal)"].join(`
`)}return this.#B.write(_),this.#Z=this.#M(_,F),this}start(_){if(_)this.text=_;if(this.#H)return this;if(!this.#X){let F=" ".repeat(this.#G)+this.#j(this.#Y," ")+(this.text?`- ${this.text}`:"")+this.#N(this.#z," ");if(F.trim()!=="")this.#B.write(F+`
`);return this}if(this.isSpinning)return this;if(this.#F.hideCursor)K1.hide(this.#B);if(this.#F.discardStdin&&m0.stdin.isTTY)this.#$=!0,M1.start();return this.render(),this.#K=setInterval(this.render.bind(this),this.interval),this}stop(){if(clearInterval(this.#K),this.#K=void 0,this.#J=0,this.#X){if(this.clear(),this.#F.hideCursor)K1.show(this.#B)}if(this.#F.discardStdin&&m0.stdin.isTTY&&this.#$)M1.stop(),this.#$=!1;return this}succeed(_){return this.stopAndPersist({symbol:Z0.success,text:_})}fail(_){return this.stopAndPersist({symbol:Z0.error,text:_})}warn(_){return this.stopAndPersist({symbol:Z0.warning,text:_})}info(_){return this.stopAndPersist({symbol:Z0.info,text:_})}stopAndPersist(_={}){if(this.#H)return this;let F=_.prefixText??this.#Y,B=this.#j(F," "),$=_.symbol??" ",J=_.text??this.text,Q=typeof J==="string"?($?" ":"")+J:"",X=_.suffixText??this.#z,G=this.#N(X," "),Y=B+$+Q+G+`
`;return this.stop(),this.#B.write(Y),this}}function g(_){return new P2(_)}var n2=U0(p2(),1);import o from"node:fs";import p from"node:path";function k6(_){let F=p.extname(_).toLowerCase();return{".ts":"TypeScript",".tsx":"TSX",".js":"JavaScript",".jsx":"JSX",".py":"Python",".java":"Java",".go":"Go",".rs":"Rust",".c":"C",".cpp":"C++",".cs":"C#",".rb":"Ruby",".php":"PHP",".swift":"Swift",".kt":"Kotlin",".md":"Markdown",".json":"JSON",".yaml":"YAML",".yml":"YAML",".toml":"TOML",".sql":"SQL",".sh":"Shell",".bash":"Bash"}[F]}function P6(_){let F=new Set([".ts",".tsx",".js",".jsx",".py",".java",".go",".rs",".c",".cpp",".h",".hpp",".cs",".rb",".php",".swift",".kt",".md",".txt",".json",".yaml",".yml",".toml",".xml",".html",".css",".scss",".sass",".less",".sql",".sh",".bash",".env",".gitignore",".dockerignore"]),B=p.extname(_).toLowerCase();return F.has(B)||!B}function x6(_){let F=n2.default();F.add(["node_modules/",".git/","dist/","build/",".next/",".cache/","coverage/","*.log",".DS_Store","Thumbs.db"]);let B=p.join(_,".gitignore");if(o.existsSync(B)){let $=o.readFileSync(B,"utf8");F.add($)}return F}function y6(_,F,B,$={}){let{maxFileSize:J=1048576,maxFiles:Z=50000}=$,Q=[];function X(G){if(Q.length>=Z)return;let Y=o.readdirSync(G,{withFileTypes:!0});for(let H of Y){if(Q.length>=Z)break;let K=p.join(G,H.name),z=p.relative(F,K);if(B.ignores(z))continue;if(H.isDirectory())X(K);else if(H.isFile()&&P6(H.name))try{let W=o.statSync(K);if(W.size>J){console.warn(`[WARN] Skipping large file: ${z} (${W.size} bytes)`);continue}let q=o.readFileSync(K,"utf8"),N=k6(H.name);Q.push({path:z,absolutePath:K,content:q,language:N,size:W.size,mtime:W.mtimeMs})}catch(W){console.warn(`[WARN] Failed to read file: ${z}`,W)}}}return X(_),Q}function v6(_){let F=0;for(let B=0;B<_.length;B++){let $=_.charCodeAt(B);F=(F<<5)-F+$,F=F&F}return F.toString(36)}class V1{codebaseRoot;cacheDir;cache=null;ig;db;options;constructor(_={}){this.options={batchSize:100,..._},this.codebaseRoot=_.codebaseRoot||process.cwd(),this.cacheDir=_.cacheDir||p.join(this.codebaseRoot,".sylphx-flow","cache"),this.ig=x6(this.codebaseRoot),this.db=new i}async buildTFIDFIndexFromDB(){try{let _=[],F=await this.db.getAllCodebaseFiles();for(let J of F){let Z=await this.db.getTFIDFDocument(J.path);if(Z){let Q=Z.rawTerms||{},X=new Map,G=new Map;for(let[Y,H]of Object.entries(Q))X.set(Y,H),G.set(Y,H);_.push({uri:`file://${J.path}`,terms:X,rawTerms:G,magnitude:Z.magnitude})}}let B=await this.db.getIDFValues(),$=new Map;for(let[J,Z]of Object.entries(B))$.set(J,Z);if(_.length===0)return;return{documents:_,idf:$,totalDocuments:_.length,metadata:{generatedAt:new Date().toISOString(),version:"1.0.0"}}}catch(_){console.error("[ERROR] Failed to build TF-IDF index from database:",_);return}}async loadCache(){try{await this.db.initialize();let _=await this.db.getCodebaseMetadata("version"),F=await this.db.getCodebaseMetadata("codebaseRoot"),B=await this.db.getCodebaseMetadata("indexedAt"),$=await this.db.getCodebaseMetadata("fileCount");if(!_||!F||!B||!$)return null;let J=await this.db.getAllCodebaseFiles(),Z=new Map;for(let G of J)Z.set(G.path,{mtime:G.mtime,hash:G.hash});let Q=await this.buildTFIDFIndexFromDB(),X=await this.db.getCodebaseMetadata("vectorIndexPath");return{version:_,codebaseRoot:F,indexedAt:B,fileCount:Number.parseInt($),files:Z,tfidfIndex:Q,vectorIndexPath:X}}catch(_){return console.error("[ERROR] Failed to load cache from database:",_),null}}async saveCache(_){try{if(await this.db.initialize(),await this.db.setCodebaseMetadata("version",_.version),await this.db.setCodebaseMetadata("codebaseRoot",_.codebaseRoot),await this.db.setCodebaseMetadata("indexedAt",_.indexedAt),await this.db.setCodebaseMetadata("fileCount",_.fileCount.toString()),_.vectorIndexPath)await this.db.setCodebaseMetadata("vectorIndexPath",_.vectorIndexPath);for(let[F,B]of _.files.entries())await this.db.upsertCodebaseFile({path:F,mtime:B.mtime,hash:B.hash});if(_.tfidfIndex){for(let B of _.tfidfIndex.documents){let $=B.uri.replace("file://",""),J={};for(let[Q,X]of B.rawTerms.entries())J[Q]=X;await this.db.upsertTFIDFDocument($,{magnitude:B.magnitude,termCount:B.terms.size,rawTerms:J});let Z={};for(let[Q,X]of B.terms.entries())Z[Q]=X;await this.db.setTFIDFTerms($,Z)}let F={};for(let[B,$]of _.tfidfIndex.idf.entries())F[B]=$;await this.db.setIDFValues(F)}console.error("[INFO] Cache saved to database")}catch(F){throw console.error("[ERROR] Failed to save cache to database:",F),F}}async indexCodebase(_={}){let{force:F=!1}=_,{embeddingProvider:B}=_;this.cache=await this.loadCache(),console.error("[INFO] Scanning codebase...");let $=y6(this.codebaseRoot,this.codebaseRoot,this.ig);if(console.error(`[INFO] Found ${$.length} files`),this.cache&&!F){let W=Math.abs($.length-this.cache.fileCount)/this.cache.fileCount*100;if(W>20)console.error(`[WARN] File count changed significantly (${W.toFixed(1)}%), forcing full reindex`),F=!0,this.cache=null}let J=[],Z=[],Q=new Map;for(let z of $){let W=v6(z.content);Q.set(z.path,{mtime:z.mtime,hash:W});let q=this.cache?.files.get(z.path);if(F||!q||q.hash!==W)J.push(z)}if(this.cache?.files){for(let z of this.cache.files.keys())if(!Q.has(z))Z.push(z)}let X=J.length>0||Z.length>0;if(!F&&!X&&this.cache?.tfidfIndex)return console.error("[INFO] Cache hit! Using cached index"),{tfidfIndex:this.cache.tfidfIndex,stats:{totalFiles:$.length,indexedFiles:0,skippedFiles:$.length,cacheHit:!0}};if(J.length>0)console.error(`[INFO] Changed files: ${J.length}`);if(Z.length>0)console.error(`[INFO] Deleted files: ${Z.length}`);console.error(`[INFO] Indexing ${J.length} changed files...`);let Y=$.map((z)=>({uri:`file://${z.path}`,content:z.content})),H=i2(Y),K;if(B){console.error("[INFO] Generating embeddings...");let z=p.join(this.cacheDir,"codebase-vectors.hnsw");K=new s2(z,B.dimensions);let W=10;for(let q=0;q<$.length;q+=W){let N=$.slice(q,q+W),R=N.map((O)=>O.content),b=await B.generateEmbeddings(R);for(let O=0;O<N.length;O++){let P=N[O],v=b[O],u={id:`file://${P.path}`,embedding:v,metadata:{type:"code",language:P.language||"",content:P.content.slice(0,500),category:""}};K.addDocument(u)}console.error(`[INFO] Embedded ${Math.min(q+W,$.length)}/${$.length} files`)}K.save()}return this.cache={version:"1.0.0",codebaseRoot:this.codebaseRoot,indexedAt:new Date().toISOString(),fileCount:$.length,files:Q,tfidfIndex:H,vectorIndexPath:K?p.join(this.cacheDir,"codebase-vectors.hnsw"):void 0},await this.saveCache(this.cache),{tfidfIndex:H,vectorStorage:K,stats:{totalFiles:$.length,indexedFiles:J.length,skippedFiles:$.length-J.length,cacheHit:!1}}}async getCacheStats(){try{await this.db.initialize();let _=await this.db.getCodebaseIndexStats();return{exists:_.fileCount>0,fileCount:_.fileCount,indexedAt:_.indexedAt}}catch(_){return console.error("[ERROR] Failed to get cache stats:",_),{exists:!1,fileCount:0}}}async clearCache(){try{await this.db.initialize(),await this.db.clearCodebaseIndex();let _=p.join(this.cacheDir,"codebase-index.json");if(o.existsSync(_))o.unlinkSync(_);let F=p.join(this.cacheDir,"codebase-vectors.hnsw");if(o.existsSync(F))o.unlinkSync(F);console.error("[INFO] Cache cleared from database and files")}catch(_){console.error("[ERROR] Failed to clear cache:",_)}}}var f6=new f("search").description("Search codebase files and source code").argument("<query>","Search query - use natural language, function names, or technical terms").option("-l, --limit <number>","Maximum number of results to return (default: 10)","10").option("--include-content","Include file content snippets in results (default: true)","true").option("--extensions <exts...>","Filter by file extensions (e.g., .ts .tsx .js)").option("--path <pattern>","Filter by path pattern (e.g., src/components)").option("--exclude <patterns...>","Exclude paths containing these patterns").action(async(_,F)=>{try{console.log(""),console.log(U.cyan.bold("▸ Search Codebase")),console.log(U.gray(`  Query: "${_}"`));let B=g("Searching...").start();await h.initialize();let $=await h.searchCodebase(_,{limit:Number.parseInt(F.limit),include_content:F.includeContent!=="false",file_extensions:F.extensions,path_filter:F.path,exclude_paths:F.exclude});B.stop();let J=h.formatResultsForCLI($.results,_,$.totalIndexed);console.log(J),console.log("")}catch(B){console.error(U.red(`
✗ Error: ${B.message}
`)),process.exit(1)}}),h6=new f("reindex").description("Reindex all codebase files").action(async()=>{try{console.log(""),console.log(U.cyan.bold("▸ Reindex Codebase"));let _=g("Scanning and indexing files...").start(),F=new V1,B=await(await import("./embeddings-n5k0ar8w.js")).getDefaultEmbeddingProvider();await F.indexCodebase({embeddingProvider:B}),_.succeed(U.green("Indexing complete")),console.log("")}catch(_){throw new L(`Codebase reindex failed: ${_.message}`)}}),u6=new f("status").description("Get codebase search system status").action(async()=>{try{console.log(""),console.log(U.cyan.bold("▸ Codebase Status")),await h.initialize();let _=await h.getStatus();if(_.codebase.indexed){if(console.log(U.green(`
✓ Indexed and ready`)),console.log(U.gray(`  Files: ${_.codebase.fileCount}`)),_.codebase.indexedAt)console.log(U.gray(`  Last indexed: ${new Date(_.codebase.indexedAt).toLocaleString()}`))}else console.log(U.yellow(`
⚠ Not indexed`)),console.log(U.gray("  Run: sylphx-flow codebase reindex"));console.log(U.cyan(`
▸ Available Commands`)),console.log(U.gray("  • codebase search <query>")),console.log(U.gray("  • codebase reindex")),console.log(U.gray("  • codebase status")),console.log("")}catch(_){console.error(U.red(`
✗ Error: ${_.message}
`)),process.exit(1)}}),a2=new f("codebase").description("Manage codebase indexing and search").addCommand(f6).addCommand(h6).addCommand(u6);import c from"node:fs";import e from"node:path";var m6={core:"core.md"};function O1(_="core"){return o2(m6[_])}function r2(_){try{return O1(_),!0}catch{return!1}}function L0(_,F="white"){let B={red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",magenta:"\x1B[35m",cyan:"\x1B[36m",white:"\x1B[37m",reset:"\x1B[0m"},$=B[F]||B.white;console.log(`${$}${_}${B.reset}`)}import F_ from"node:path";import Q0 from"node:fs/promises";import t2 from"node:path";async function w1(_,F={}){let{encoding:B="utf8",fallback:$}=F;try{return await Q0.readFile(_,B)}catch(J){if(J.code==="ENOENT"&&$!==void 0)return $;throw J}}async function e2(_){try{return await Q0.access(_),!0}catch{return!1}}async function l0(_){try{let F=await Q0.stat(_);return{exists:!0,isFile:F.isFile(),isDirectory:F.isDirectory(),size:F.size,mtime:F.mtime,atime:F.atime,ctime:F.ctime}}catch{return{exists:!1,isFile:!1,isDirectory:!1}}}async function __(_){if(T1.validatePath(_),!await e2(_))return;if((await l0(_)).isDirectory)await Q0.rmdir(_,{recursive:!0});else await Q0.unlink(_)}async function p0(_,F={}){let{recursive:B=!1,includeFiles:$=!0,includeDirectories:J=!0}=F;if(T1.validatePath(_),!await e2(_))throw Error(`Directory does not exist: ${_}`);if(!(await l0(_)).isDirectory)throw Error(`Path is not a directory: ${_}`);if(B){let Q=[],X=await Q0.readdir(_,{withFileTypes:!0});for(let G of X){let Y=t2.join(_,G.name);if(G.isDirectory()&&J){Q.push(Y);let H=await p0(Y,F);Q.push(...H)}else if(G.isFile()&&$)Q.push(Y)}return Q}else return(await Q0.readdir(_,{withFileTypes:!0})).filter((X)=>{if(X.isFile()&&$)return!0;if(X.isDirectory()&&J)return!0;return!1}).map((X)=>t2.join(_,X.name))}async function I1(_,F){try{return(await p0(_,{recursive:!0,includeFiles:!0,includeDirectories:!1})).filter(($)=>F.some((J)=>$.endsWith(J))).map(($)=>F_.relative(_,$)).sort()}catch{return[]}}async function w0(_){let F=await l0(_);if(!F.exists||!F.isFile)return null;let B=await w1(_);if(B===null)return null;return{content:B,mtime:F.mtime}}async function S1(_,F,B,$){try{let J=await p0(_,{recursive:!1,includeFiles:!0,includeDirectories:!1});for(let Z of J){let Q=F_.basename(Z);if(B.some((G)=>Q.endsWith(G))&&!F.has(Q))await __(Z),$.push({file:Q,status:"skipped",action:"Removed obsolete file"})}}catch{}}async function b1(_,F,B,$,J=!1,Z=!1){if(Z)return;if(!J){let K=_.length,z=_.filter((W)=>W.status==="added"||W.status==="updated").length;if(z>0)console.log(`✓ ${z} files updated`);else console.log(`✓ All ${K} files already current`);return}console.log(`
\uD83D\uDCCA ${$} Results for ${B}`),console.log("=====================================");let Q=_.reduce((K,z)=>{if(!K[z.status])K[z.status]=[];return K[z.status].push(z),K},{}),X=["added","updated","current","skipped"],G={added:"green",updated:"yellow",current:"blue",skipped:"magenta"};for(let K of X){let z=Q[K];if(z&&z.length>0){let W=G[K];L0(`${K.toUpperCase()} (${z.length}):`,W);for(let q of z)L0(`  ${q.file} - ${q.action}`,W);console.log("")}}let Y=_.length,H=_.filter((K)=>K.status==="added"||K.status==="updated").length;if(H>0)L0(`✓ ${$} complete: ${H}/${Y} files modified`,"green");else L0(`✓ ${$} complete: All ${Y} files already current`,"blue");console.log(`\uD83D\uDCC1 Target directory: ${F}`)}async function B_(){let{getAgentsDir:_}=await import("./paths-fxepcppg.js"),F=_();if(!c.existsSync(F))throw Error(`Could not find agents directory at: ${F}`);let B=[],$=c.readdirSync(F,{withFileTypes:!0}).filter((Z)=>Z.isFile()&&Z.name.endsWith(".md")).map((Z)=>Z.name);B.push(...$);let J=c.readdirSync(F,{withFileTypes:!0}).filter((Z)=>Z.isDirectory()&&Z.name!=="archived").map((Z)=>Z.name);for(let Z of J){let Q=e.join(F,Z),X=await I1(Q,[".md"]);B.push(...X.map((G)=>e.join(Z,G)))}return B}async function $_(_){let F=process.cwd(),B=[],$=await j.resolveTarget({target:_.target}),J=j.getTarget($);if(!J)throw Error(`Target not found: ${$}`);if(_.quiet!==!0)console.log(`Using target: ${J.name}`);let Z=J.config,Q=e.join(F,Z.agentDir),X=async(z,W)=>{return await J.transformAgentContent(z,void 0,W)};if(_.clear&&c.existsSync(Q)){let z,W=await B_();z=new Set(W.map((q)=>{let N=e.parse(q),R=N.name,b=N.dir;if(Z.flatten)return`${b?`${b.replace(/[\/\\]/g,"-")}-${R}`:R}${Z.agentExtension}`;return q})),S1(Q,z,[Z.agentExtension],B)}c.mkdirSync(Q,{recursive:!0});let G=await B_();if(_.quiet!==!0)console.log(`Installing ${G.length} agents to ${Q.replace(`${process.cwd()}/`,"")}`),console.log("");if(_.dryRun){console.log("✓ Dry run completed - no files were modified");return}let{getAgentsDir:Y}=await import("./paths-fxepcppg.js"),H=Y(),K=G.map(async(z)=>{let W=e.join(H,z),q=e.join(Q,z),N=e.dirname(q);if(!c.existsSync(N))c.mkdirSync(N,{recursive:!0});let R=await w0(q),b=!R,O=c.readFileSync(W,"utf8");O=await X(O,z);let P=R?await X(R.content,z):"";if(!R||P!==O)c.writeFileSync(q,O,"utf8"),B.push({file:z,status:R?"updated":"added",action:R?"Updated":"Created"});else B.push({file:z,status:"current",action:"Already current"})});await Promise.all(K),b1(B,Q,J.name,"Install",_.verbose,_.quiet)}async function J_(_){let F=process.cwd(),B=await j.resolveTarget({target:_.target}),$=j.getTarget(B);if(!$)throw Error(`Target not found: ${B}`);if(!$.config.rulesFile)return;if(!r2("core")){console.warn("⚠️ Core rules file not found");return}let J=O1("core"),Q=c.readFileSync(J,"utf8"),X=e.join(F,$.config.rulesFile),G=await w0(X),Y=Q;if(_.dryRun){console.log(`Dry run: Would install rules file to ${X.replace(`${F}/`,"")}`);return}if(G&&G.content===Y){if(_.quiet!==!0)console.log(`Rules file already current: ${$.config.rulesFile}`);return}if(c.writeFileSync(X,Y,"utf8"),_.quiet!==!0)console.log(`${G?"Updated":"Created"} rules file: ${$.config.rulesFile}`)}function g6(_){return _.type==="stdio"}function C1(_){return g6(_)}function k1(_){if(typeof _==="function"){let F=_();return Promise.resolve(F)}return Promise.resolve(_)}class _0{target;constructor(_){let F=j.getTarget(_);if(!F)throw Error(`Target not found: ${_}`);this.target=F}getAllServerIds(){return Object.keys(C)}async getAvailableServers(){let _=await this.getInstalledServerIds();return this.getAllServerIds().filter((F)=>!_.includes(F))}async getInstalledServerIds(){try{let _=await this.target.readConfig(process.cwd()),F=this.target.config.mcpConfigPath,B=this.getNestedProperty(_,F)||{},$=Object.keys(B);return Object.values(C).filter((J)=>$.includes(J.name)).map((J)=>J.id)}catch(_){return[]}}getRequiringConfiguration(_){return _.filter((F)=>{return!!C[F].envVars})}validateServer(_,F){let B=C[_];if(!B?.envVars)return{isValid:!0,missingRequired:[],invalidValues:[]};let $=[],J=[];for(let[Z,Q]of Object.entries(B.envVars)){let X=F[Z]||process.env[Z]||"";if(Q.required&&(!X||X===""))$.push(Z)}return{isValid:$.length===0&&J.length===0,missingRequired:$,invalidValues:J}}async configureServer(_,F={}){let B=C[_],$={};if(!B.envVars)return $;console.log(""),console.log(U.cyan(`▸ ${B.name}`)),console.log(U.gray(`  ${B.description}`)),console.log("");for(let[J,Z]of Object.entries(B.envVars)){if(Z.dependsOn){if(Z.dependsOn.filter((Y)=>!(F[Y]||process.env[Y])).length>0)continue}let Q=F[J]||process.env[J],X;if(Q&&Q.trim()!=="")X=Q;else if(Z.fetchChoices){let G=g("Fetching options...").start();for(let[Y,H]of Object.entries(F))if(H)process.env[Y]=H;try{let Y=await Z.fetchChoices();G.stop(),X=(await D.prompt({type:"list",name:"value",message:`${J}${Z.required?" *":""}`,choices:Y,default:Z.default||Y[0]})).value}catch(Y){let H=Y instanceof Error?Y.message:String(Y);G.fail(U.red(`Failed to fetch options: ${H}`)),X=(await D.prompt({type:"input",name:"value",message:`${J}${Z.required?" *":""}`,default:Z.default})).value}}else if(J==="GEMINI_MODEL")X=(await D.prompt({type:"list",name:"model",message:`${J}${Z.required?" *":""}`,choices:["gemini-2.5-flash","gemini-2.5-pro","gemini-1.5-flash","gemini-1.5-pro"],default:Z.default||"gemini-2.5-flash"})).model;else X=(await D.prompt({type:Z.secret?"password":"input",name:"value",message:`${J}${Z.required?" *":""}`,default:Z.default,mask:Z.secret?"•":void 0})).value;if(X)$[J]=X,F[J]=X}return console.log(U.green("✓ Configured")),console.log(""),$}async installServers(_,F={}){if(_.length===0)return;try{let B=await this.target.readConfig(process.cwd()),$=this.target.config.mcpConfigPath,Z={...this.getNestedProperty(B,$)||{}};for(let Q of _){let X=C[Q],G=F[Q]||{},Y={...X.config},H,K;if(C1(X.config))H=X.config.command?await k1(X.config.command):void 0,K=X.config.args?await k1(X.config.args):[];if(C1(X.config))Y={...X.config,command:H,args:K};if(Object.keys(G).length>0){let q={...X.config.type==="local"?X.config.environment:X.config.type==="stdio"?X.config.env:{}};for(let[N,R]of Object.entries(G))if(R&&R.trim()!=="")q[N]=R;if(Y.type==="local")Y.environment=q;else if(Y.type==="stdio")Y.env=q}let z=this.target.transformMCPConfig(Y,Q);Z[X.name]=z}if(this.setNestedProperty(B,$,Z),await this.target.writeConfig(process.cwd(),B),this.target.approveMCPServers){let Q=_.map((X)=>C[X].name);await this.target.approveMCPServers(process.cwd(),Q)}}catch(B){throw Error(`Failed to install MCP servers: ${B instanceof Error?B.message:String(B)}`)}}async readConfig(){try{return await this.target.readConfig(process.cwd())}catch(_){return{settings:{}}}}async writeConfig(_){await this.target.writeConfig(process.cwd(),_)}getNestedProperty(_,F){return F.split(".").reduce((B,$)=>{if(typeof B==="object"&&B!==null)return B[$];return},_)}setNestedProperty(_,F,B){let $=F.split("."),J=$.pop();if(!J)return;let Z=$.reduce((Q,X)=>{if(!Q[X])Q[X]={};return Q[X]},_);Z[J]=B}}async function Z_(_,F){let B=j.getTarget(F);if(!B)throw Error(`Target not found: ${F}`);let $=await B.readConfig(_),J=B.config.mcpConfigPath,Z=d6($,J);if(!Z||Object.keys(Z).length===0){console.log("ℹ️  No MCP servers configured");return}console.log(`\uD83D\uDCCB Currently configured MCP servers for ${B.name}:`),console.log("");for(let[Q,X]of Object.entries(Z)){let G="";if(X&&typeof X==="object"&&"type"in X){if(X.type==="local")G=X.command?.join(" ")||"Unknown command";else if(X.type==="remote")G=`HTTP: ${X.url}`}console.log(`  • ${Q}: ${G}`);let Y=Object.values(C).find((H)=>H.name===Q);if(Y)console.log(`    ${Y.description}`);console.log("")}}function Q_(_){let F=j.getTarget(_);if(!F)throw Error(`Unknown target: ${_}. Available targets: ${j.getImplementedTargetIDs().join(", ")}`);if(!F.isImplemented)throw Error(`Target '${_}' is not implemented. Available targets: ${j.getImplementedTargetIDs().join(", ")}`);return _}function F0(_){return j.getTarget(_)?.config.installation.supportedMcpServers??!1}function d6(_,F){return F.split(".").reduce((B,$)=>B?.[$],_)}async function c6(_){let F=await j.resolveTarget({target:_.target});_.target=F;try{Q_(F)}catch(B){if(B instanceof Error)throw new L(B.message,"UNSUPPORTED_TARGET");throw B}if(_.merge)throw new L("The --merge option is not supported with init command.","INVALID_OPTION")}var G_={name:"init",description:"Initialize project with Sylphx Flow development agents and MCP tools",options:[{flags:"--target <type>",description:`Force specific target (${j.getImplementedTargetIDs().join(", ")}, default: opencode)`},{flags:"--verbose",description:"Show detailed output"},{flags:"--dry-run",description:"Show what would be done without making changes"},{flags:"--clear",description:"Clear obsolete items before processing"},{flags:"--no-mcp",description:"Skip MCP tools installation"}],handler:async(_)=>{let F=_.target;if(console.log(""),console.log(U.cyan.bold("▸ Sylphx Flow Setup")),!F)F=await j.promptForTargetSelection(),_.target=F;if(await c6(_),!F)throw Error("Target ID not set");if(_.dryRun){if(console.log(U.yellow(`
  Dry run mode - no changes will be made`)),_.mcp!==!1&&F0(F)){let Z=await new _0(F).getAvailableServers();console.log(U.cyan(`
▸ MCP Tools`));for(let Q of Z)console.log(U.gray(`  • ${C[Q].name}`))}console.log(U.cyan(`
▸ Agents`)),console.log(U.gray("  • Development agents")),console.log(U.cyan(`
▸ Rules`)),console.log(U.gray("  • Custom rules")),console.log(U.green(`
✓ Dry run complete
`));return}if(_.mcp!==!1&&F0(F)){let J=new _0(F),Z=J.getAllServerIds(),Q=await J.getInstalledServerIds();console.log(""),console.log(U.cyan.bold("▸ Configure MCP Tools")),console.log("");let G=(await D.prompt([{type:"checkbox",name:"selectedServers",message:"Select MCP tools to install:",choices:Z.map((H)=>{let K=C[H],z=Q.includes(H);return{name:`${K.name} - ${K.description}`,value:H,checked:K.required||z||K.defaultInInit||!1,disabled:K.required?"(required)":!1}})}])).selectedServers,Y=Z.filter((H)=>C[H].required);if(G=[...new Set([...Y,...G])],G.length>0){let H=G.filter((W)=>{let q=C[W];return q.envVars&&Object.keys(q.envVars).length>0}),K={};if(H.length>0){console.log(""),console.log(U.cyan.bold("▸ Configure selected MCP tools"));let W={};for(let q of H){let N=await J.configureServer(q,W);K[q]=N}}let z=g("Installing MCP servers...").start();try{await J.installServers(G,K),z.succeed("MCP servers installed")}catch(W){throw z.fail(U.red("Failed to install MCP servers")),W}}}if(F==="opencode")await i0.ensureSecretsDir(process.cwd()),await i0.addToGitignore(process.cwd());console.log("");let B=g("Installing agents...").start();await $_({..._,quiet:!0}),B.succeed("Agents installed"),console.log("");let $=g("Installing rules...").start();await J_({..._,quiet:!0}),$.succeed("Rules installed"),console.log(""),console.log(U.green.bold("✓ Setup complete!")),console.log(U.gray("  Start coding with Sylphx Flow")),console.log("");try{await X_.setDefaultTarget(F),console.log(U.gray(`  Default target set to: ${j.getTarget(F)?.name||F}`))}catch(J){console.warn(U.yellow(`  Warning: Could not save default target: ${J instanceof Error?J.message:String(J)}`))}console.log("")}};var l6=new f("search").description("Search knowledge base, documentation, and guides").argument("<query>","Search query - use natural language, technology names, or topic keywords").option("-l, --limit <number>","Maximum number of results to return (default: 10)","10").option("--include-content","Include full content in results (default: true)","true").action(async(_,F)=>{try{console.log(`\uD83D\uDCDA Searching knowledge base for: "${_}"`),await h.initialize();let B=await h.searchKnowledge(_,{limit:Number.parseInt(F.limit),include_content:F.includeContent!=="false"}),$=h.formatResultsForCLI(B.results,_,B.totalIndexed);console.log($)}catch(B){throw new L(`Knowledge search failed: ${B.message}`)}}),p6=new f("get").description("Get specific knowledge document by URI").argument("<uri>",'Knowledge URI to access (e.g., "knowledge://stacks/react-app")').action(async(_)=>{try{let F=Y_(_);console.log(F)}catch(F){let B=`Knowledge get failed: ${F.message}`,$=await h.getAvailableKnowledgeURIs();if($.length>0)console.log(`
**Available knowledge URIs:**`),$.forEach((J)=>console.log(`• ${J}`));throw new L(B)}}),i6=new f("list").description("List all available knowledge resources").option("--category <type>","Filter by category (stacks, guides, universal, data)").action(async(_)=>{try{await h.initialize();let F=await h.getAvailableKnowledgeURIs();if(F.length===0){console.log("\uD83D\uDCED No knowledge documents available");return}let B=F;if(_.category)B=F.filter((J)=>J.includes(`/${_.category}/`));console.log(`\uD83D\uDCDA Available Knowledge Resources (${B.length} documents):
`);let $=B.reduce((J,Z)=>{let Q=Z.split("/")[2]||"unknown";if(!J[Q])J[Q]=[];return J[Q].push(Z),J},{});Object.entries($).forEach(([J,Z])=>{console.log(`### ${J.charAt(0).toUpperCase()+J.slice(1)}`),Z.forEach((Q)=>{let X=Q.split("/").pop()||"Unknown";console.log(`• ${X} - ${Q}`)}),console.log("")}),console.log("**Usage:**"),console.log("• sylphx knowledge search <query> - Search knowledge base"),console.log("• sylphx knowledge get <uri> - Get specific document")}catch(F){throw new L(`Knowledge status failed: ${F.message}`)}}),s6=new f("status").description("Get knowledge base system status").action(async()=>{try{console.log(`
### \uD83D\uDCDA Knowledge Base Status
`),await h.initialize();let _=await h.getStatus();if(_.knowledge.indexed)console.log("**Status:** ✓ Ready"),console.log(`**Documents:** ${_.knowledge.documentCount} files`);else if(_.knowledge.isIndexing)console.log(`**Status:** \uD83D\uDD04 Building index (${_.knowledge.progress||0}%)`),console.log("**Note:** Please wait a moment and try again");else console.log("**Status:** ⚠️ Not initialized"),console.log("**Note:** Will auto-index on first search");console.log(`
**Available Commands:**`),console.log("• sylphx knowledge search <query> - Search knowledge base"),console.log("• sylphx knowledge get <uri> - Get specific document")}catch(_){throw new L(`Knowledge list failed: ${_.message}`)}}),j0=new f("knowledge").description("Knowledge base search and management commands");j0.addCommand(l6);j0.addCommand(p6);j0.addCommand(i6);j0.addCommand(s6);var n6=async(_)=>{let F={disableMemory:_.disableMemory===!0,disableTime:_.disableTime===!0,disableProjectStartup:_.disableProjectStartup===!0,disableKnowledge:_.disableKnowledge===!0,disableCodebaseSearch:_.disableCodebaseSearch===!0};try{console.log(U.blue("\uD83D\uDE80 Starting Sylphx Flow MCP Server..."));let{startSylphxFlowMCPServer:B}=await import("./sylphx-flow-mcp-server-wwhqv3y1.js");await B(F)}catch(B){throw new L(`Failed to start MCP server: ${B instanceof Error?B.message:String(B)}`,"MCP_START_ERROR")}},a6=async(_)=>{let F=_.server,B=await j.resolveTarget({target:_.target,allowSelection:!0});if(!F0(B))throw new L(`Target ${B} does not support MCP servers`,"UNSUPPORTED_TARGET");console.log(""),console.log(U.cyan.bold("▸ Configure MCP Server")),console.log(U.gray(`  Target: ${B}`));let $=new _0(B),J;if(F){if(!$.getAllServerIds().includes(F))throw new L(`Invalid MCP server: ${F}. Available: ${$.getAllServerIds().join(", ")}`,"INVALID_MCP_SERVER");J=F}else J=(await D.prompt([{type:"list",name:"server",message:"Select server to configure:",choices:$.getAllServerIds().map((G)=>{let Y=C[G];return{name:`${Y.name} - ${Y.description}`,value:G}})}])).server;let Z=C[J];if(console.log(U.cyan(`
▸ ${Z.name}`)),console.log(U.gray(`  ${Z.description}`)),!Z.envVars){console.log(U.gray(`
  No configuration needed`));return}await $.configureServer(J);let Q=g("Saving configuration...").start();try{await $.installServers([J]),Q.succeed(U.green("✓ Configuration saved"))}catch(X){throw Q.fail(U.red("Failed to save configuration")),X}},o6=async(_)=>{let F=await j.resolveTarget({target:_.target,allowSelection:!0});if(!F0(F))throw new L(`Target ${F} does not support MCP servers`,"UNSUPPORTED_TARGET");await Z_(process.cwd(),F)},r6=async(_)=>{let F=_.servers,B=await j.resolveTarget({target:_.target,allowSelection:!0});if(!F0(B))throw new L(`Target ${B} does not support MCP servers`,"UNSUPPORTED_TARGET");if(!F||F.length===0)throw new L("No servers specified. Use --servers <server1,server2,...>","NO_SERVERS_SPECIFIED");let $=Array.isArray(F)?F:[F],J=new _0(B),Z=J.getAllServerIds(),Q=$.filter((G)=>!Z.includes(G));if(Q.length>0)throw new L(`Invalid MCP servers: ${Q.join(", ")}. Available: ${Z.join(", ")}`,"INVALID_MCP_SERVERS");let X=$;await J.installServers(X)},t6=async(_)=>{let F=_.servers,B=await j.resolveTarget({target:_.target,allowSelection:!0});if(!F0(B))throw new L(`Target ${B} does not support MCP servers`,"UNSUPPORTED_TARGET");if(!F||F.length===0)throw new L("No servers specified. Use --servers <server1,server2,...>","NO_SERVERS_SPECIFIED");let J=new _0(B).getInstalledServerIds(),Z=F.filter((Q)=>!J.includes(Q));if(Z.length>0)throw new L(`MCP servers not installed: ${Z.join(", ")}. Installed: ${J.join(", ")}`,"SERVERS_NOT_INSTALLED");console.log(U.yellow("Remove functionality not yet implemented"))},z_={name:"mcp",description:"Manage MCP (Model Context Protocol) servers",options:[{flags:"--target <type>",description:`Force specific target (${j.getImplementedTargetIDs().join(", ")}, default: opencode)`}],subcommands:[{name:"start",description:"Start Sylphx Flow MCP server with specific configuration",options:[{flags:"--disable-memory",description:"Disable memory functionality"},{flags:"--disable-time",description:"Disable time functionality"},{flags:"--disable-project-startup",description:"Disable project startup functionality"},{flags:"--disable-knowledge",description:"Disable knowledge functionality"},{flags:"--disable-codebase-search",description:"Disable codebase search functionality"}],handler:n6},{name:"config",description:"Configure MCP server settings",options:[{flags:"--server <name>",description:"Configure specific server (shows selection if not provided)"}],handler:a6},{name:"list",description:"List installed MCP servers",options:[],handler:o6},{name:"add",description:"Add MCP servers",options:[{flags:"--servers <servers>",description:"Comma-separated list of server names to add"}],handler:r6},{name:"remove",description:"Remove MCP servers",options:[{flags:"--servers <servers>",description:"Comma-separated list of server names to remove"}],handler:t6}]};var e6=async(_)=>{let B=await new i().getAll();if(_.namespace&&_.namespace!=="all"){let $=B.filter((Q)=>Q.namespace===_.namespace);if(console.log(`\uD83D\uDCCB Memory entries in namespace: ${_.namespace}`),console.log(`Total: ${$.length} entries
`),$.length===0){console.log("No entries found in this namespace.");return}let J=_.limit||50;$.slice(0,J).forEach((Q,X)=>{let G=Q.value||"",Y=typeof G==="string"?G.substring(0,50)+(G.length>50?"...":""):`${JSON.stringify(G).substring(0,50)}...`;console.log(`${X+1}. ${Q.namespace}:${Q.key}`),console.log(`   Value: ${Y}`),console.log(`   Updated: ${Q.updated_at}`),console.log("")})}else{if(console.log(`\uD83D\uDCCB All memory entries (showing first ${_.limit||50}):`),console.log(`Total: ${B.length} entries
`),B.length===0){console.log("No memory entries found.");return}let $=_.limit||50;B.slice(0,$).forEach((Z,Q)=>{let X=Z.value||"",G=typeof X==="string"?X.substring(0,50)+(X.length>50?"...":""):`${JSON.stringify(X).substring(0,50)}...`;console.log(`${Q+1}. ${Z.namespace}:${Z.key}`),console.log(`   Value: ${G}`),console.log(`   Updated: ${Z.updated_at}`),console.log("")})}},_5=async(_)=>{if(!_.pattern)throw new L("Search pattern is required. Use --pattern <pattern>");let B=await new i().search(_.pattern,_.namespace);if(console.log(`\uD83D\uDD0D Search results for pattern: ${_.pattern}`),_.namespace&&_.namespace!=="all")console.log(`Namespace: ${_.namespace}`);if(console.log(`Found: ${B.length} results
`),B.length===0){console.log("No matching entries found.");return}B.forEach(($,J)=>{let Z=$.value||"",Q=typeof Z==="string"?Z.substring(0,50)+(Z.length>50?"...":""):`${JSON.stringify(Z).substring(0,50)}...`;console.log(`${J+1}. ${$.namespace}:${$.key}`),console.log(`   Value: ${Q}`),console.log(`   Updated: ${$.updated_at}`),console.log("")})},F5=async(_)=>{if(!_.key)throw new L("Key is required. Use --key <key>");if(await new i().delete(_.key,_.namespace||"default"))console.log(`✓ Deleted memory entry: ${_.namespace||"default"}:${_.key}`);else console.log(`✗ Memory entry not found: ${_.namespace||"default"}:${_.key}`)},B5=async(_)=>{if(!_.confirm)throw new L("Confirmation required. Use --confirm to clear memory entries");let F=new i;if(_.namespace)await F.clear(_.namespace),console.log(`✓ Cleared all memory entries in namespace: ${_.namespace}`);else await F.clear(),console.log("✓ Cleared all memory entries")},$5=async()=>{let F=await new i().getStats();if(console.log("\uD83D\uDCCA Memory Statistics"),console.log("=================="),console.log(`Total Entries: ${F.totalEntries}`),console.log(`Namespaces: ${F.namespaces.length}`),console.log(""),F.namespaces.length>0)console.log("Namespaces:"),F.namespaces.forEach((B)=>{console.log(`  • ${B}`)}),console.log("");console.log("\uD83D\uDCCD Database: .sylphx-flow/memory.db")},J5=async(_)=>{let F=process.argv.slice(2),B=F.indexOf("get")+1;if(B>=F.length)throw new L("Usage: flow memory get <key> [--namespace <namespace>]");let $=F[B],J=_.namespace||"default",Q=await new i().get($,J);if(Q)console.log(`\uD83D\uDCC4 Memory entry: ${J}:${$}`),console.log(`Value: ${JSON.stringify(Q.value,null,2)}`),console.log(`Created: ${Q.created_at}`),console.log(`Updated: ${Q.updated_at}`);else console.log(`✗ Memory entry not found: ${J}:${$}`)},Z5=async(_)=>{let F=process.argv.slice(2),B=F.indexOf("set")+1,$=B+1;if(B>=F.length||$>=F.length)throw new L("Usage: flow memory set <key> <value> [--namespace <namespace>]");let J=F[B],Z=F[$],Q=_.namespace||"default";await new i().set(J,Z,Q),console.log(`✓ Set memory entry: ${Q}:${J} = "${Z}"`)},U_={name:"memory",description:"Manage memory storage (set, get, search, list, delete, clear)",options:[{flags:"--target <type>",description:`Target platform (${j.getImplementedTargets().join(", ")}, default: auto-detect)`}],subcommands:[{name:"list",description:"List memory entries",options:[{flags:"--namespace <name>",description:"Filter by namespace (default: all)"},{flags:"--limit <number>",description:"Limit number of entries (default: 50)"}],handler:e6},{name:"search",description:"Search memory entries",arguments:[{name:"pattern",required:!0,description:"Search pattern"}],options:[{flags:"--namespace <name>",description:"Filter by namespace (default: all)"}],handler:_5},{name:"delete",description:"Delete memory entry",arguments:[{name:"key",required:!0,description:"Memory key to delete"}],options:[{flags:"--namespace <name>",description:"Namespace (default: default)"},{flags:"--confirm",description:"Skip confirmation prompt"}],handler:F5},{name:"clear",description:"Clear memory entries",options:[{flags:"--namespace <name>",description:"Clear specific namespace (default: all)"},{flags:"--confirm",description:"Skip confirmation prompt"}],handler:B5},{name:"stats",description:"Show memory statistics",options:[{flags:"--namespace <name>",description:"Filter by namespace (default: all)"}],handler:$5},{name:"get",description:"Get memory entry",arguments:[{name:"key",required:!0,description:"Memory key to retrieve"}],options:[{flags:"--namespace <name>",description:"Namespace (default: default)"}],handler:J5},{name:"set",description:"Set memory entry",arguments:[{name:"key",description:"Memory key",required:!0},{name:"value",description:"Memory value",required:!0}],options:[{flags:"--namespace <name>",description:"Namespace (default: default)"}],handler:Z5}]};import*as S0 from"node:fs";import*as z0 from"node:path";import Q5 from"node:crypto";import P1 from"node:fs";function H_(_){let F=_.migrationsFolder,B=[],$=`${F}/meta/_journal.json`;if(!P1.existsSync($))throw Error("Can't find meta/_journal.json file");let J=P1.readFileSync(`${F}/meta/_journal.json`).toString(),Z=JSON.parse(J);for(let Q of Z.entries){let X=`${F}/${Q.tag}.sql`;try{let G=P1.readFileSync(`${F}/${Q.tag}.sql`).toString(),Y=G.split("--> statement-breakpoint").map((H)=>{return H});B.push({sql:Y,bps:Q.breakpoints,folderMillis:Q.when,hash:Q5.createHash("sha256").update(G).digest("hex")})}catch{throw Error(`No file ${X} found in ${F} folder`)}}return B}async function W_(_,F){let B=H_(F),$=F.migrationsTable??"__drizzle_migrations",J=B0`
		CREATE TABLE IF NOT EXISTS ${B0.identifier($)} (
			id SERIAL PRIMARY KEY,
			hash text NOT NULL,
			created_at numeric
		)
	`;await _.session.run(J);let Q=(await _.values(B0`SELECT id, hash, created_at FROM ${B0.identifier($)} ORDER BY created_at DESC LIMIT 1`))[0]??void 0,X=[];for(let G of B)if(!Q||Number(Q[2])<G.folderMillis){for(let Y of G.sql)X.push(_.run(B0.raw(Y)));X.push(_.run(B0`INSERT INTO ${B0.identifier($)} ("hash", "created_at") VALUES(${G.hash}, ${G.folderMillis})`))}await _.session.migrate(X)}var n0={};I2(n0,{tfidfTerms:()=>x,tfidfIdf:()=>N0,tfidfDocuments:()=>G0,memory:()=>M,codebaseMetadata:()=>Y0,codebaseFiles:()=>V});var M=X0("memory",{key:k("key").notNull(),namespace:k("namespace").notNull().default("default"),value:k("value").notNull(),timestamp:I0("timestamp").notNull(),created_at:k("created_at").notNull(),updated_at:k("updated_at").notNull()},(_)=>({pk:K_({columns:[_.key,_.namespace]}),namespaceIdx:$0("idx_memory_namespace").on(_.namespace),timestampIdx:$0("idx_memory_timestamp").on(_.timestamp),keyIdx:$0("idx_memory_key").on(_.key)})),V=X0("codebase_files",{path:k("path").primaryKey(),mtime:I0("mtime").notNull(),hash:k("hash").notNull(),content:k("content"),language:k("language"),size:I0("size"),indexedAt:k("indexed_at").notNull()},(_)=>({mtimeIdx:$0("idx_codebase_files_mtime").on(_.mtime),hashIdx:$0("idx_codebase_files_hash").on(_.hash)})),x=X0("tfidf_terms",{filePath:k("file_path").notNull().references(()=>V.path,{onDelete:"cascade"}),term:k("term").notNull(),frequency:s0("frequency").notNull()},(_)=>({termIdx:$0("idx_tfidf_terms_term").on(_.term),fileIdx:$0("idx_tfidf_terms_file").on(_.filePath)})),G0=X0("tfidf_documents",{filePath:k("file_path").primaryKey().references(()=>V.path,{onDelete:"cascade"}),magnitude:s0("magnitude").notNull(),termCount:I0("term_count").notNull(),rawTerms:k("raw_terms").notNull()}),N0=X0("tfidf_idf",{term:k("term").primaryKey(),idfValue:s0("idf_value").notNull()}),Y0=X0("codebase_metadata",{key:k("key").primaryKey(),value:k("value").notNull()});class y1{client;db;constructor(){try{let _=z0.join(process.cwd(),".sylphx-flow");if(!S0.existsSync(_))S0.mkdirSync(_,{recursive:!0});let F=z0.join(_,"memory.db");this.client=A_({url:`file:${F}`}),this.db=L_(this.client,{schema:n0})}catch(_){throw new q_("Failed to initialize database connection",{url:`file:${z0.join(process.cwd(),".sylphx-flow/memory.db")}`},_)}}async initialize(){try{if((await this.getMigrationStatus()).isMigrated){if(console.error("[INFO] Database tables already exist, checking migration state"),(await this.client.execute(`
          SELECT name FROM sqlite_master 
          WHERE type='table' AND name='__drizzle_migrations'
        `)).rows.length===0)await this.client.execute(`
            CREATE TABLE IF NOT EXISTS __drizzle_migrations (
              id INTEGER PRIMARY KEY AUTOINCREMENT,
              hash text NOT NULL UNIQUE,
              created_at numeric NOT NULL DEFAULT (strftime('%s', 'now'))
            )
          `),await this.client.execute(`
            INSERT OR IGNORE INTO __drizzle_migrations (hash, created_at) 
            VALUES ('0000_wooden_lady_bullseye', strftime('%s', 'now'))
          `),console.error("[INFO] Migration tracking initialized for existing tables");return}let F=z0.join(process.cwd(),"drizzle");if(S0.existsSync(F))await W_(this.db,{migrationsFolder:F}),console.error("[INFO] Database migrations completed");else console.error("[WARN] No migrations folder found, using fallback table creation"),await this.createTablesFallback()}catch(_){let F=`Migration failed: ${_.message}`;console.error("[ERROR]",F);try{await this.createTablesFallback(),console.error("[WARN] Fallback table creation completed")}catch(B){throw new x1("Both migration and fallback failed","initialize",B,{originalError:_.message})}}}async createTablesFallback(){console.error("[INFO] Using fallback table creation")}async close(){}getDatabasePath(){let _=z0.join(process.cwd(),".sylphx-flow");return z0.join(_,"memory.db")}async getMigrationStatus(){try{let _=await this.client.execute(`
        SELECT name FROM sqlite_master 
        WHERE type='table' AND name IN ('memory', 'codebase_files', 'tfidf_terms')
      `);return{isMigrated:_.rows.length>=2,migrationCount:_.rows.length}}catch(_){throw new x1("Failed to check migration status","getMigrationStatus",_)}}async healthCheck(){try{await this.client.execute("SELECT 1");let _=await this.getMigrationStatus(),F=await this.client.execute(`
        SELECT count(*) as count FROM memory
      `);return{healthy:!0,details:{tablesExist:_.isMigrated,tableCount:_.migrationCount,memoryEntries:F.rows[0]?.count||0}}}catch(_){return{healthy:!1,error:_.message}}}}class u1{drizzleDb;db;constructor(){this.drizzleDb=new y1,this.db=this.drizzleDb.db}async initialize(){await this.drizzleDb.initialize()}safeSerialize(_){try{return JSON.stringify(_)}catch(F){throw Error(`Failed to serialize value: ${F.message}`)}}safeDeserialize(_){try{return JSON.parse(_)}catch{return _}}async set(_,F,B="default"){if(!_||typeof _!=="string")throw new h1("Key must be a non-empty string","key",_);if(!B||typeof B!=="string")throw new h1("Namespace must be a non-empty string","namespace",B);await j_("memory.set",async()=>{let $=new Date,J=$.getTime(),Z=$.toISOString(),Q=Z,X=this.safeSerialize(F);if(await this.get(_,B))await this.db.update(M).set({value:X,timestamp:J,updated_at:Q}).where(b0(y(M.key,_),y(M.namespace,B)));else{let Y={key:_,namespace:B,value:X,timestamp:J,created_at:Z,updated_at:Q};await this.db.insert(M).values(Y)}},{key:_,namespace:B})}async get(_,F="default"){let B=await this.db.select().from(M).where(b0(y(M.key,_),y(M.namespace,F))).limit(1);if(B.length===0)return null;let $=B[0];return{key:$.key,namespace:$.namespace,value:this.safeDeserialize($.value),timestamp:$.timestamp,created_at:$.created_at,updated_at:$.updated_at}}async getAll(){return(await this.db.select().from(M).orderBy(C0(M.timestamp))).map((F)=>({key:F.key,namespace:F.namespace,value:this.safeDeserialize(F.value),timestamp:F.timestamp,created_at:F.created_at,updated_at:F.updated_at}))}async search(_,F){if(!_||typeof _!=="string")throw Error("Search pattern must be a non-empty string");let B=_.replace(/[^a-zA-Z0-9\s*_\-]/g,"");if(B!==_)throw Error("Search pattern contains invalid characters");let $=B.replace(/\*/g,"%"),J=v1(M.key,$);if(F&&F!=="all"){if(!/^[a-zA-Z0-9_\-]+$/.test(F))throw Error("Namespace contains invalid characters");J=b0(J,y(M.namespace,F))}return(await this.db.select().from(M).where(J).orderBy(C0(M.timestamp)).limit(1000)).map((Q)=>({key:Q.key,namespace:Q.namespace,value:this.safeDeserialize(Q.value),timestamp:Q.timestamp,created_at:Q.created_at,updated_at:Q.updated_at}))}async delete(_,F="default"){return(await this.db.delete(M).where(b0(y(M.key,_),y(M.namespace,F)))).rowsAffected>0}async clear(_){if(_&&_!=="all")await this.db.delete(M).where(y(M.namespace,_));else await this.db.delete(M)}async getStats(){let[_,F,B,$]=await Promise.all([this.db.select({count:f1()}).from(M),this.db.select({namespace:M.namespace,count:f1()}).from(M).groupBy(M.namespace).orderBy(M.namespace),this.db.select({created_at:M.created_at}).from(M).orderBy(M.created_at).limit(1),this.db.select({created_at:M.created_at}).from(M).orderBy(C0(M.created_at)).limit(1)]),J=_[0]?.count||0,Z=F.map((Y)=>Y.namespace),Q=Object.fromEntries(F.map((Y)=>[Y.namespace,Y.count])),X=B[0]?.created_at||null,G=$[0]?.created_at||null;return{totalEntries:J,namespaces:Z,namespaceCounts:Q,oldestEntry:X,newestEntry:G}}async load(){let _=await this.getAll(),F={};return _.forEach((B)=>{if(!F[B.namespace])F[B.namespace]={};F[B.namespace][B.key]=B.value}),{namespaces:F}}async close(){await this.drizzleDb.close()}getDatabasePath(){return this.drizzleDb.getDatabasePath()}async setCodebaseMetadata(_,F){let B=this.safeSerialize(F);await this.db.insert(Y0).values({key:_,value:B}).onConflictDoUpdate({target:Y0.key,set:{value:B}})}async getCodebaseMetadata(_){let F=await this.db.select().from(Y0).where(y(Y0.key,_)).limit(1);if(F.length===0)return null;return this.safeDeserialize(F[0].value)}async upsertCodebaseFile(_){let F=new Date().toISOString();await this.db.insert(V).values({path:_.path,mtime:_.mtime,hash:_.hash,content:_.content||null,language:_.language||null,size:_.size||null,indexedAt:F}).onConflictDoUpdate({target:V.path,set:{mtime:_.mtime,hash:_.hash,content:_.content||null,language:_.language||null,size:_.size||null,indexedAt:F}})}async getCodebaseFile(_){let F=await this.db.select().from(V).where(y(V.path,_)).limit(1);return F.length>0?F[0]:null}async getAllCodebaseFiles(){return await this.db.select({path:V.path,mtime:V.mtime,hash:V.hash,content:V.content,language:V.language,size:V.size,indexedAt:V.indexedAt}).from(V).orderBy(V.path)}async deleteCodebaseFile(_){await this.db.delete(V).where(y(V.path,_))}async upsertTFIDFDocument(_,F){await this.db.insert(G0).values({filePath:_,magnitude:F.magnitude,termCount:F.termCount,rawTerms:this.safeSerialize(F.rawTerms)}).onConflictDoUpdate({target:G0.filePath,set:{magnitude:F.magnitude,termCount:F.termCount,rawTerms:this.safeSerialize(F.rawTerms)}})}async getTFIDFDocument(_){let F=await this.db.select().from(G0).where(y(G0.filePath,_)).limit(1);if(F.length===0)return null;let B=F[0];return{...B,rawTerms:this.safeDeserialize(B.rawTerms)}}async setTFIDFTerms(_,F){if(await this.db.delete(x).where(y(x.filePath,_)),Object.keys(F).length>0){let B=Object.entries(F).map(([J,Z])=>({filePath:_,term:J,frequency:Z})),$=100;for(let J=0;J<B.length;J+=100){let Z=B.slice(J,J+100);await this.db.insert(x).values(Z)}}}async getTFIDFTerms(_){let F=await this.db.select().from(x).where(y(x.filePath,_)),B={};return F.forEach(($)=>{B[$.term]=$.frequency}),B}async setIDFValues(_){if(await this.db.delete(N0),Object.keys(_).length>0){let F=Object.entries(_).map(([$,J])=>({term:$,idfValue:J})),B=100;for(let $=0;$<F.length;$+=100){let J=F.slice($,$+100);await this.db.insert(N0).values(J)}}}async getIDFValues(){let _=await this.db.select().from(N0),F={};return _.forEach((B)=>{F[B.term]=B.idfValue}),F}async getCodebaseIndexStats(){let F=(await this.db.select({count:V.path}).from(V)).length,$=(await this.db.selectDistinct({term:x.term}).from(x)).length,[J,Z]=await Promise.all([this.getCodebaseMetadata("indexedAt"),this.getCodebaseMetadata("version")]);return{fileCount:F,termCount:$,indexedAt:J,version:Z}}async clearCodebaseIndex(){await Promise.all([this.db.delete(V),this.db.delete(x),this.db.delete(G0),this.db.delete(N0),this.db.delete(Y0)])}async searchTFIDFTerms(_){if(!_||typeof _!=="string")throw Error("Term pattern must be a non-empty string");let F=_.replace(/[^a-zA-Z0-9\s_\-]/g,"");if(F!==_)throw Error("Term pattern contains invalid characters");let B=`%${F}%`;return await this.db.select({path:V.path,term:x.term,frequency:x.frequency,language:V.language}).from(x).innerJoin(V,y(x.filePath,V.path)).where(v1(x.term,B)).orderBy(C0(x.frequency)).limit(100)}}class N_{memory;entries=[];running=!0;constructor(){this.memory=new u1}async start(){console.clear(),console.log(U.cyan.bold("\uD83E\uDDE0 Memory Manager")),console.log(U.gray(`Interactive memory management for Sylphx Flow
`)),await this.loadEntries();while(this.running)try{await this.showMainMenu()}catch(_){console.error(U.red(`Error: ${_}`)),await D.prompt([{type:"input",name:"continue",message:"Press Enter to continue..."}])}}async loadEntries(){try{this.entries=await this.memory.getAll(),this.entries.sort((_,F)=>new Date(F.updated_at).getTime()-new Date(_.updated_at).getTime())}catch(_){console.error(U.red(`Failed to load entries: ${_}`)),this.entries=[]}}async showMainMenu(){if(this.entries.length===0){console.log(U.yellow("No memory entries found."));let{action:B}=await D.prompt([{type:"list",name:"action",message:"What would you like to do?",choices:[{name:"➕ Add new entry",value:"add"},{name:"\uD83D\uDD04 Refresh entries",value:"refresh"},{name:"✗ Exit",value:"exit"}]}]);if(B==="add")await this.showAddEntry();else if(B==="refresh")await this.loadEntries();else this.running=!1;return}let _=[{name:"\uD83D\uDCDD View entry details",value:"view",short:"View"},{name:"✏️ Edit entry",value:"edit",short:"Edit"},{name:"➕ Add new entry",value:"add",short:"Add"},{name:"\uD83D\uDDD1️ Delete entry",value:"delete",short:"Delete"},{name:"\uD83D\uDD0D Search entries",value:"search",short:"Search"},{name:"\uD83D\uDD04 Refresh entries",value:"refresh",short:"Refresh"},{name:"✗ Exit",value:"exit",short:"Exit"}],{action:F}=await D.prompt([{type:"list",name:"action",message:"What would you like to do?",choices:_}]);switch(F){case"view":await this.showViewEntry();break;case"edit":await this.showEditEntry();break;case"add":await this.showAddEntry();break;case"delete":await this.showDeleteEntry();break;case"search":await this.showSearchEntries();break;case"refresh":await this.loadEntries(),console.log(U.green("✓ Entries refreshed"));break;case"exit":this.running=!1;break}}async selectEntry(_,F=!1){if(this.entries.length===0){if(F)return null;throw Error("No entries available")}let B=this.entries.map((J,Z)=>({value:J,name:`${U.cyan(`${Z+1}.`)} ${U.bold(J.namespace)}:${U.bold(J.key)}`,short:`${J.namespace}:${J.key}`}));if(F)B.unshift({name:"← Back to menu",value:null,short:"Back"});let{selected:$}=await D.prompt([{type:"list",name:"selected",message:_,choices:B,pageSize:15}]);return $}async showViewEntry(){let _=await this.selectEntry("Select entry to view:",!0);if(!_)return;console.clear(),console.log(U.cyan.bold("\uD83D\uDCC4 Entry Details")),console.log(U.gray("─".repeat(50))),console.log(U.blue.bold("Namespace:"),_.namespace),console.log(U.blue.bold("Key:"),_.key),console.log(U.blue.bold("Updated:"),_.updated_at),console.log(U.blue.bold(`
Value:`));let F=JSON.stringify(_.value,null,2);console.log(U.gray(F)),await D.prompt([{type:"input",name:"continue",message:"Press Enter to continue..."}])}async showEditEntry(){let _=await this.selectEntry("Select entry to edit:",!0);if(!_)return;console.clear(),console.log(U.yellow.bold("✏️ Edit Entry")),console.log(U.gray("─".repeat(50))),console.log(`${U.blue("Editing:")} ${_.namespace}:${_.key}
`);let F=await D.prompt([{type:"input",name:"namespace",message:"Namespace:",default:_.namespace,validate:(B)=>B.trim().length>0||"Namespace is required"},{type:"input",name:"key",message:"Key:",default:_.key,validate:(B)=>B.trim().length>0||"Key is required"},{type:"editor",name:"value",message:"Value (JSON):",default:JSON.stringify(_.value,null,2),validate:(B)=>{try{return JSON.parse(B),!0}catch{return"Invalid JSON format"}}}]);try{let B=JSON.parse(F.value);if(await this.memory.set(F.key,B,F.namespace),F.namespace!==_.namespace||F.key!==_.key)await this.memory.delete(_.key,_.namespace);await this.loadEntries(),console.log(U.green(`✓ Updated ${F.namespace}:${F.key}`))}catch(B){console.error(U.red(`Failed to update entry: ${B}`))}await D.prompt([{type:"input",name:"continue",message:"Press Enter to continue..."}])}async showAddEntry(){console.clear(),console.log(U.green.bold("➕ Add New Entry")),console.log(U.gray("─".repeat(50)));let _=await D.prompt([{type:"input",name:"namespace",message:"Namespace:",default:"default",validate:(F)=>F.trim().length>0||"Namespace is required"},{type:"input",name:"key",message:"Key:",validate:(F)=>F.trim().length>0||"Key is required"},{type:"editor",name:"value",message:"Value (JSON):",default:`{
  
}`,validate:(F)=>{try{return JSON.parse(F),!0}catch{return"Invalid JSON format"}}}]);try{let F=JSON.parse(_.value);await this.memory.set(_.key,F,_.namespace),await this.loadEntries(),console.log(U.green(`✓ Added ${_.namespace}:${_.key}`))}catch(F){console.error(U.red(`Failed to add entry: ${F}`))}await D.prompt([{type:"input",name:"continue",message:"Press Enter to continue..."}])}async showDeleteEntry(){let _=await this.selectEntry("Select entry to delete:",!0);if(!_)return;console.clear(),console.log(U.red.bold("\uD83D\uDDD1️ Delete Entry")),console.log(U.gray("─".repeat(50))),console.log(`${U.blue("Entry:")} ${_.namespace}:${_.key}`);let F=JSON.stringify(_.value),B=F.length>100?F.substring(0,100)+"...":F;console.log(`${U.blue("Value:")} ${U.gray(B)}`);let{confirmed:$}=await D.prompt([{type:"confirm",name:"confirmed",message:U.yellow("Are you sure you want to delete this entry?"),default:!1}]);if($)try{await this.memory.delete(_.key,_.namespace),await this.loadEntries(),console.log(U.green(`✓ Deleted ${_.namespace}:${_.key}`))}catch(J){console.error(U.red(`Failed to delete entry: ${J}`))}else console.log(U.gray("Delete cancelled"));await D.prompt([{type:"input",name:"continue",message:"Press Enter to continue..."}])}async showSearchEntries(){console.clear(),console.log(U.magenta.bold("\uD83D\uDD0D Search Entries")),console.log(U.gray("─".repeat(50)));let{query:_}=await D.prompt([{type:"input",name:"query",message:"Search query:",validate:(B)=>B.trim().length>0||"Search query is required"}]),F=this.entries.filter((B)=>B.namespace.toLowerCase().includes(_.toLowerCase())||B.key.toLowerCase().includes(_.toLowerCase())||JSON.stringify(B.value).toLowerCase().includes(_.toLowerCase()));if(F.length===0)console.log(U.yellow("No entries found matching your search."));else console.log(U.cyan(`
Found ${F.length} matching entries:
`)),F.forEach((B,$)=>{let J=JSON.stringify(B.value),Z=J.length>80?J.substring(0,80)+"...":J;console.log(`${U.cyan(`${$+1}.`)} ${U.bold(B.namespace)}:${U.bold(B.key)}`),console.log(`   ${U.gray(Z)}
`)});await D.prompt([{type:"input",name:"continue",message:"Press Enter to continue..."}])}}var M_=async()=>{await new N_().start()};var m1=async()=>{await M_()},_9={name:"memory-tui",description:"Launch interactive memory management TUI",options:[{flags:"--target <type>",description:`Target platform (${j.getImplementedTargets().join(", ")}, default: auto-detect)`}],handler:m1};import R_ from"node:fs/promises";import E_ from"node:path";async function X5(_){if(_.target=await j.resolveTarget({target:_.target,allowSelection:!0}),!_.agent)_.agent="craftsman"}async function G5(_){try{let F=E_.join(process.cwd(),"agents",`${_}.md`);try{return await R_.readFile(F,"utf-8")}catch(B){let $=a0(),J=E_.join($,`${_}.md`);return await R_.readFile(J,"utf-8")}}catch(F){throw new L(`Agent '${_}' not found`,"AGENT_NOT_FOUND")}}function Y5(_){let F=/^---\s*\n[\s\S]*?\n---\s*\n/,B=_.match(F);if(B)return _.substring(B[0].length).trim();return _.trim()}function z5(_,F,B,$){let J=j.getTarget(_);if(!J)throw new L(`Target not found: ${_}`,"TARGET_NOT_FOUND");if(!J.isImplemented)throw new L(`Target '${_}' is not implemented. Supported targets: ${D_().join(", ")}`,"TARGET_NOT_IMPLEMENTED");if(!J.executeCommand)throw new L(`Target '${_}' does not support command execution. Supported targets: ${D_().join(", ")}`,"EXECUTION_NOT_SUPPORTED");return J.executeCommand(F,B,$)}function D_(){return j.getImplementedTargetIDs().filter((_)=>{return j.getTarget(_)?.executeCommand!==void 0})}var V_={name:"run",description:"Run a prompt with a specific agent (default: craftsman) using the detected or specified target",options:[{flags:"--target <name>",description:`Target platform (${j.getImplementedTargetIDs().join(", ")}, default: auto-detect)`},{flags:"--agent <name>",description:"Agent to use (default: craftsman)"},{flags:"--verbose",description:"Show detailed output"},{flags:"--dry-run",description:"Show what would be done without executing the command"}],arguments:[{name:"prompt",description:"The prompt to execute with the agent (optional - if not provided, will start Claude Code interactively)",required:!1}],handler:async(_)=>{await X5(_);let{prompt:F,agent:B,verbose:$}=_;if($){if(console.log("\uD83D\uDE80 Sylphx Flow Run"),console.log("===================="),console.log(`\uD83C\uDFAF Target: ${_.target}`),console.log(`\uD83E\uDD16 Agent: ${B}`),F)console.log(`\uD83D\uDCAC Prompt: ${F}`);else console.log("\uD83D\uDCAC Prompt: [Interactive mode]");console.log("")}let J=await G5(B),Q=`AGENT INSTRUCTIONS:
${Y5(J)}`,X="";if(F&&F.trim()!=="")X=F;if($)if(console.log("\uD83D\uDCDD System Prompt:"),console.log("================"),console.log(Q.substring(0,500)+(Q.length>500?"...":"")),console.log(""),X.trim()!=="")console.log("\uD83D\uDCDD User Prompt:"),console.log("=============="),console.log(X.substring(0,500)+(X.length>500?"...":"")),console.log("");else console.log("\uD83D\uDCDD User Prompt: [Interactive mode - Claude will greet the user]"),console.log("");await z5(_.target,Q,X,_)}};import E from"node:fs/promises";import I from"node:path";import{spawn as T_}from"node:child_process";class r{static instance;childProcesses=new Set;isShuttingDown=!1;static getInstance(){if(!r.instance)r.instance=new r,r.instance.setupSignalHandlers();return r.instance}setupSignalHandlers(){let _=async(F)=>{if(this.isShuttingDown)return;this.isShuttingDown=!0,console.log(`
\uD83D\uDED1 Received ${F}, shutting down benchmark...`),await this.killAllProcesses(),process.exit(0)};process.on("SIGINT",()=>_("SIGINT")),process.on("SIGTERM",()=>_("SIGTERM")),process.on("SIGHUP",()=>_("SIGHUP"))}trackChildProcess(_){this.childProcesses.add(_),_.on("exit",()=>{this.childProcesses.delete(_)})}async killAllProcesses(){console.log("\uD83D\uDD04 Terminating all running processes...");let _=Array.from(this.childProcesses).map(async(F)=>{try{if(F&&!F.killed)F.kill("SIGTERM"),setTimeout(()=>{if(!F.killed)F.kill("SIGKILL")},2000)}catch(B){console.warn("⚠️ Error killing child process:",B)}});await Promise.all(_),this.childProcesses.clear(),console.log("✅ All processes terminated")}}class w_{agents=new Map;isRunning=!1;workspaceDirs=[];updateInterval;lastDisplayLines=0;constructor(){this.setupSignalHandlers()}start(){this.isRunning=!0,this.showHeader(),this.updateInterval=setInterval(()=>{if(this.updateDisplay(),Array.from(this.agents.values()).every((F)=>F.status==="completed"||F.status==="error")&&this.agents.size>0)setTimeout(()=>{this.stop()},2000)},1000)}setWorkspaceDirs(_){this.workspaceDirs=_}showHeader(){if(console.log("\uD83C\uDFAF Agent Benchmark Monitor - Real-time Updates"),console.log("─".repeat(50)),console.log("\uD83D\uDCA1 Workspaces: Each agent runs in its own temp directory"),this.workspaceDirs.length>0)console.log("\uD83D\uDCC1 Recent workspace dirs:"),this.workspaceDirs.slice(-3).forEach((_)=>{console.log(`   ${_}`)});console.log("\uD83D\uDCA1 Tip: Open these directories in another terminal to see files in real-time"),console.log("─".repeat(50))}updateDisplay(){let F=`[${new Date().toLocaleTimeString()}] ${this.getCurrentDisplay()}`;console.log(F)}getCurrentDisplay(){let _=[];for(let[F,B]of this.agents){let $=0;if(B.startTime){if(B.endTime)$=Math.floor((B.endTime-B.startTime)/1000);else if(B.status==="running")$=Math.floor((Date.now()-B.startTime)/1000)}let J=B.status==="completed"?"✅":B.status==="running"?"\uD83D\uDD04":B.status==="error"?"❌":"⏸️",Z=B.startTime?`${$}s`:"pending";if(_.push(`${J} ${F} - ${B.status.toUpperCase()} - Runtime: ${Z}`),B.output.length>0){let Q=B.output[B.output.length-1];if(Q&&Q.trim().length>8){let X=Q.trim(),G=X.length>60?X.substring(0,60)+"...":X;_.push(`    ${G}`)}}else if(B.status==="running")_.push("    (working...)");else if(B.status==="idle")_.push("    (waiting to start...)");_.push("")}return _.join(`
`)}addAgent(_){this.agents.set(_,{status:"idle",output:[],startTime:void 0})}updateAgentStatus(_,F){let B=this.agents.get(_);if(B){if(B.status=F,F==="running"&&!B.startTime)B.startTime=Date.now();else if(F==="completed"||F==="error")B.endTime=Date.now()}}addAgentOutput(_,F){let B=this.agents.get(_);if(B){let $=F.split(`
`).filter((J)=>J.trim());B.output=[...B.output.slice(-3),...$]}}stop(){if(this.isRunning=!1,this.updateInterval)clearInterval(this.updateInterval);console.log(`
✅ Benchmark completed!`)}setupSignalHandlers(){let _=async(F)=>{if(!this.isRunning)return;console.log(`
\uD83D\uDED1 Received ${F}, shutting down benchmark...`),this.stop(),await r.getInstance().killAllProcesses(),process.exit(0)};process.on("SIGINT",()=>_("SIGINT")),process.on("SIGTERM",()=>_("SIGTERM")),process.on("SIGHUP",()=>_("SIGHUP"))}}var o0=["craftsman","practitioner","craftsman-reflective","practitioner-reflective"];async function U5(_){if(!_.task)_.task="examples/benchmark-tasks/user-management-system.md";try{await E.access(_.task)}catch{throw new L(`Task file not found: ${_.task}`)}if(!_.output){let F=new Date().toISOString().replace(/[:.]/g,"-").slice(0,19);_.output=`/tmp/agent-benchmark-${F}`}if(!_.agents)_.agents="all";if(!_.context)_.context="";if(_.evaluate===void 0)_.evaluate=!0;if(!_.concurrency)_.concurrency=1;if(!_.delay)_.delay=2}async function H5(_){try{await E.mkdir(_,{recursive:!0}),console.log(`\uD83D\uDCC1 Created benchmark directory: ${_}`)}catch(F){throw new L(`Failed to create benchmark directory: ${F}`)}}async function W5(_,F,B){let $=await E.readFile(_,"utf-8");if(await E.writeFile(I.join(B,"task-definition.txt"),$),F)try{let J=await E.readFile(F,"utf-8");await E.writeFile(I.join(B,"context-info.txt"),J),console.log(`\uD83D\uDCC4 Copied context file: ${F}`)}catch(J){console.warn(`⚠️  Warning: Could not read context file: ${J}`)}console.log(`\uD83D\uDCCB Task definition copied from: ${_}`)}async function K5(_){if(_==="all")return o0;let F=_.split(",").map((B)=>B.trim());for(let B of F)if(!o0.includes(B))throw new L(`Invalid agent: ${B}. Available agents: ${o0.join(", ")}`);return F}async function O_(_,F,B,$,J,Z,Q=3){let X=I.join(F,_);await E.mkdir(X,{recursive:!0});let G=a0(),Y=I.join(G,`${_}.md`);try{let H=await E.readFile(Y,"utf-8"),K=await E.readFile(B,"utf-8"),z=K;if($)try{z=`CONTEXT:
${await E.readFile($,"utf-8")}

TASK:
${K}`}catch(q){console.warn(`⚠️  Warning: Could not read context file: ${q}`)}z+=`

IMPORTANT: Please implement your solution in the current working directory: ${X}
This is a temporary directory for testing, so you can create files freely without affecting any production codebase.`,console.log(`\uD83D\uDE80 Running agent: ${_} in ${X}`),console.log(`\uD83D\uDCDD Claude command: claude --system-prompt [${H.length} chars] --dangerously-skip-permissions --print [${z.length} chars]`),await(async()=>{let q=I.join(X,".agent-prompt.md");return await E.writeFile(q,H),new Promise((N,R)=>{let b=T_("claude",["--system-prompt",`@${q}`,"--dangerously-skip-permissions","--print",z],{cwd:X,stdio:["inherit","pipe","pipe"]});r.getInstance().trackChildProcess(b);let O="",P="";b.stdout?.on("data",(v)=>{let u=v.toString();if(O+=u,J?.addOutput(_,u),Z?.(_,u),!Z)process.stdout.write(`[${_}] ${u}`)}),b.stderr?.on("data",(v)=>{let u=v.toString();if(P+=u,J?.addOutput(_,`ERROR: ${u}`),Z?.(_,`ERROR: ${u}`),!Z)process.stderr.write(`[${_} ERROR] ${u}`)}),b.on("close",async(v)=>{let u=Date.now();try{await E.unlink(q)}catch(j5){}let P_=`Execution completed at: ${new Date(u).toISOString()}
Exit code: ${v}

=== STDOUT ===
${O}

=== STDERR ===
${P}
`;await E.writeFile(I.join(X,"execution-log.txt"),P_);let x_={endTime:u,exitCode:v,stdoutLength:O.length,stderrLength:P.length};if(await E.writeFile(I.join(X,"timing.json"),JSON.stringify(x_,null,2)),v===0)console.log(`✅ Agent ${_} completed successfully`),N();else await E.writeFile(I.join(X,"execution-error.txt"),P),R(Error(`Agent ${_} failed with code ${v}`))}),b.on("error",(v)=>{R(v)})})})()}catch(H){throw new L(`Failed to load agent ${_}: ${H}`)}}async function q5(_,F,B){console.log("\uD83D\uDD0D Evaluating code created by agents...");let $={},J=o0.map((z)=>I.join(_,z));for(let z of J){let W=I.basename(z);try{let q=I.join(z,"execution-time.txt"),R=(await E.readFile(q,"utf-8")).match(/Duration:\s*(\d+)\s*seconds/),b=R?parseInt(R[1]):0;$[W]={duration:b}}catch(q){try{let N=I.join(z,"timing.json"),R=await E.readFile(N,"utf-8"),b=JSON.parse(R);$[W]={duration:0}}catch(N){$[W]={duration:0}}}}let Z=`
Please evaluate the code and solutions created by these software engineering agents. For each agent, analyze their work by examining the files they created in their respective directories.

**IMPORTANT: Performance and timing are critical evaluation factors.** Faster execution times that maintain quality are highly valued.

For each agent, evaluate:

1. **Performance & Speed** (1-10): Execution time, efficiency, how quickly they completed the task
2. **Code Quality** (1-10): Readability, structure, naming conventions, code organization
3. **Architecture Design** (1-10): Modularity, scalability, separation of concerns, best practices
4. **Functionality** (1-10): Requirements satisfaction, error handling, feature completeness
5. **Testing Coverage** (1-10): Test quality, coverage, testing strategies used
6. **Documentation** (1-10): Code comments, README files, API documentation, setup instructions
7. **Business Value** (1-10): Practicality, maintainability, innovation, solution effectiveness

**Scoring Guidelines for Performance:**
- 9-10: Extremely fast (under 5 seconds), excellent efficiency
- 7-8: Fast (5-10 seconds), good optimization
- 5-6: Average (10-20 seconds), acceptable speed
- 3-4: Slow (20-30 seconds), needs optimization
- 1-2: Very slow (30+ seconds), significant performance issues

**Approximate Timing Data:**
${Object.entries($).map(([z,W])=>`- ${z}: ${W.duration||"unknown"} seconds`).join(`
`)}

Agents to evaluate:
- craftsman: Idealistic craftsman with principles-based approach
- practitioner: Pragmatic practitioner with business-focused approach
- craftsman-reflective: Idealistic craftsman with reflective questioning
- practitioner-reflective: Pragmatic practitioner with contextual decision-making

For each agent, please:
1. Examine all files they created in their directory
2. Analyze the code quality and architecture
3. Check if requirements were met
4. **CRITICAL: Consider their execution speed and efficiency**
5. Evaluate the overall solution quality
6. Compare approaches between agents

Please provide:
1. Detailed scoring for each agent (1-10 scale) with special attention to performance
2. Analysis of differences between approaches, including speed vs quality tradeoffs
3. What each agent excels at (including speed advantages)
4. Recommendations for different use cases (when speed matters vs when quality matters more)
5. Overall comparison and insights with performance as a key factor

Format your response as a structured evaluation report with clear sections for each agent.
`,Q={};for(let z of J){let W=I.basename(z);try{let q=await E.readdir(z),N=`=== ${W} WORK ===

`;for(let R of q){let b=I.join(z,R);if((await E.stat(b)).isFile()){let P=await E.readFile(b,"utf-8");N+=`
--- File: ${R} ---
${P}
`}}Q[W]=N}catch(q){Q[W]=`=== ${W} WORK ===

ERROR: Could not read files - ${q}`}}let X=Object.values(Q).join(`
`+"=".repeat(80)+`
`),G=Z+`

AGENT WORK TO EVALUATE:
`+X,Y=I.join(_,".evaluation-prompt.md");await E.writeFile(Y,G);let H=T_("claude",["--system-prompt",`@${Y}`,"--dangerously-skip-permissions","--print","Please evaluate the agent work as described in the system prompt."],{cwd:_,stdio:["inherit","pipe","pipe"]});r.getInstance().trackChildProcess(H);let K="";return H.stdout?.on("data",(z)=>{K+=z.toString()}),new Promise((z,W)=>{H.on("close",async(q)=>{if(q===0){let N=I.join(_,"evaluation-report.md");await E.writeFile(N,K);let R=Object.entries(Q).map(([O,P])=>{let v=(P.match(/--- File: /g)||[]).length;return`${O}: ${v} files created`}).join(`
`),b=I.join(_,"summary.txt");await E.writeFile(b,R);try{await E.unlink(Y)}catch(O){}if(console.log("\uD83D\uDCCA Evaluation completed"),console.log(`\uD83D\uDCC4 Report saved to: ${N}`),F){let O=I.join(process.cwd(),F,"evaluation-report.md"),P=I.join(process.cwd(),F,"summary.txt");await E.mkdir(I.dirname(O),{recursive:!0}),await E.writeFile(O,K),await E.writeFile(P,R),console.log(`\uD83D\uDCC4 Report also saved to: ${O}`)}console.log("\uD83D\uDCCB Summary of created files saved"),z()}else W(Error(`Evaluation failed with code ${q}`))}),H.on("error",(q)=>{W(q)})})}async function A5(_,F,B,$,J,Z,Q=!1){console.log(`\uD83D\uDD04 Running ${_.length} agents with concurrency: ${J}, delay: ${Z}s`);let X;if(Q){X=new w_,X.start();let G=_.map((Y)=>I.join(F,Y));X.setWorkspaceDirs(G),_.forEach((Y)=>{X.addAgent(Y)})}if(J<=1){console.log("\uD83D\uDCDD Running agents sequentially...");for(let G of _)try{let Y=Date.now();X?.updateAgentStatus(G,"running"),await O_(G,F,B,$,void 0,(z,W)=>{X?.addAgentOutput(z,W)});let H=Date.now(),K=Math.floor((H-Y)/1000);try{await E.writeFile(I.join(F,G,"execution-time.txt"),`Started: ${new Date(Y).toISOString()}
Completed: ${new Date(H).toISOString()}
Duration: ${K} seconds
`)}catch(z){}if(X?.updateAgentStatus(G,"completed"),G!==_[_.length-1])console.log(`⏳ Waiting ${Z}s before next agent...`),await new Promise((z)=>setTimeout(z,Z*1000))}catch(Y){X?.updateAgentStatus(G,"error"),X?.addAgentOutput(G,`❌ ERROR: ${Y}`),console.error(`❌ Agent ${G} failed:`,Y)}}else{let G=[];for(let Y=0;Y<_.length;Y+=J)G.push(_.slice(Y,Y+J));for(let Y=0;Y<G.length;Y++){console.log(`\uD83D\uDD04 Running chunk ${Y+1}/${G.length} (${G[Y].length} agents)...`);let H={};G[Y].forEach((z)=>{H[z]=Date.now(),X?.updateAgentStatus(z,"running")});let K=G[Y].map((z)=>O_(z,F,B,$,void 0,(W,q)=>{X?.addAgentOutput(W,q)}));try{await Promise.all(K);let z=Date.now();G[Y].forEach((W)=>{let q=H[W],N=Math.floor((z-q)/1000);try{E.writeFile(I.join(F,W,"execution-time.txt"),`Started: ${new Date(q).toISOString()}
Completed: ${new Date(z).toISOString()}
Duration: ${N} seconds (parallel execution)
`).catch(()=>{})}catch(R){}X?.updateAgentStatus(W,"completed")}),console.log(`✅ Chunk ${Y+1} completed`)}catch(z){G[Y].forEach((W)=>{X?.updateAgentStatus(W,"error"),X?.addAgentOutput(W,`❌ ERROR: ${z}`)}),console.error(`❌ Chunk ${Y+1} had failures:`,z)}if(Y<G.length-1)console.log(`⏳ Waiting ${Z}s before next chunk...`),await new Promise((z)=>setTimeout(z,Z*1000))}}if(X)X.stop();console.log("✅ All agent executions completed")}var I_={name:"benchmark",description:"Run benchmark tests comparing multiple agent designs",options:[{flags:"--agents <agents>",description:'Agents to test (comma-separated or "all")',defaultValue:"all"},{flags:"--task <file>",description:"Path to task definition file",defaultValue:"examples/benchmark-tasks/user-management-system.md"},{flags:"--output <dir>",description:"Output directory for results"},{flags:"--context <file>",description:"Path to context information file (optional)"},{flags:"--no-evaluate",description:"Skip LLM evaluation after agents complete"},{flags:"--report <dir>",description:"Directory to save evaluation reports",defaultValue:"benchmark-results"},{flags:"--concurrency <number>",description:"Number of agents to run concurrently",defaultValue:"1"},{flags:"--delay <seconds>",description:"Delay in seconds between agent executions",defaultValue:"2"},{flags:"--quiet",description:"Disable real-time monitoring, show minimal output"}],handler:async(_)=>{try{await U5(_),console.log("\uD83C\uDFAF Starting agent benchmark test"),console.log(`\uD83D\uDCC1 Output directory: ${_.output}`),await H5(_.output),await W5(_.task,_.context,_.output);let F=await K5(_.agents);if(console.log(`\uD83E\uDD16 Testing agents: ${F.join(", ")}`),await A5(F,_.output,_.task,_.context,_.concurrency,_.delay,_.quiet!==!0),_.evaluate)await q5(_.output,_.report,_);console.log("\uD83C\uDF89 Benchmark completed!"),console.log(`\uD83D\uDCC1 Results saved to: ${_.output}`)}catch(F){throw new L(`Benchmark failed: ${F}`)}}};function g1(_){let F=new f(_.name);F.description(_.description);for(let B of _.options||[])F.option(B.flags,B.description,B.defaultValue);if(_.arguments)for(let B of _.arguments){let $=B.name==="servers"?`[${B.name}...]`:B.required?`<${B.name}>`:`[${B.name}]`;F.argument($,B.description)}if(_.subcommands)for(let B of _.subcommands)F.addCommand(g1(B));if(_.handler){let B=S_(_.handler,_.name);if(_.validator)F.action((...$)=>{let J=$.slice(0,-1),Q=$[$.length-1].opts();if(_.arguments&&J.length>0)_.arguments.forEach((X,G)=>{if(G<J.length)Q[X.name]=J[G]});return _.validator?.(Q),B(Q)});else F.action((...$)=>{let J=$.slice(0,-1),Q=$[$.length-1].opts();if(_.arguments&&J.length>0)_.arguments.forEach((X,G)=>{if(G<J.length)Q[X.name]=J[G]});return B(Q)})}return F}var L9=[{flags:"--target <type>",description:"Force specific target"},{flags:"--verbose",description:"Show detailed output"},{flags:"--dry-run",description:"Show what would be done without making changes"},{flags:"--clear",description:"Clear obsolete items before processing"},{flags:"--mcp [servers...]",description:`Install MCP servers (${b_().join(", ")})`}];function C_(){console.log("\uD83D\uDE80 Sylphx Flow CLI - Type-safe development flow"),console.log("========================================="),console.log(""),console.log("Available commands:"),console.log("  init     Initialize project with Sylphx Flow"),console.log("  mcp      Manage MCP tools"),console.log("  memory   Manage memory storage"),console.log("  tui      Interactive TUI for all operations"),console.log(""),console.log("Examples:"),console.log("  sylphx-flow init"),console.log("  sylphx-flow init --target opencode"),console.log("  sylphx-flow mcp install --all"),console.log("  sylphx-flow memory set key value"),console.log("  sylphx-flow tui"),console.log(""),console.log('Run "sylphx-flow <command> --help" for more information about a command.')}function L5(){let _=new f;_.name("sylphx-flow").description("Sylphx Flow - Type-safe development flow CLI").version("1.0.0");let F=[G_,z_,U_,V_,I_];_.addCommand(a2),_.addCommand(j0);for(let B of F)_.addCommand(g1(B));return _.command("tui").description("Launch interactive Sylphx Flow TUI").option("--target <type>","Target platform (opencode, default: auto-detect)").action(m1),_.action(()=>{C_()}),_}function k_(){let _=L5();if(process.argv.length===2)_.help();process.on("uncaughtException",(F)=>{console.error(`✗ Uncaught error: ${F.message}`),process.exit(1)}),process.on("unhandledRejection",(F)=>{console.error(`✗ Unhandled rejection: ${F}`),process.exit(1)});try{_.parse()}catch(F){console.error(`✗ Error: ${F.message}`),process.exit(1)}}k_();
