---
description: Functional modules for TypeScript/Node.js â€” prefer pure functions and factories; avoid classes
globs: ["**/*.ts"]
alwaysApply: true
---

# Functional Key Rules

## Do
- Pure functions, immutable data; no hidden state.
- Factories (createX) for deps; ports for externals.
- Separate pure core from effect adapters (IO/HTTP/DB).
- DI-by-params; <50 lines/functions, 200-300/files.
- Serializable Results/typed errors at boundaries.
- Async: AbortSignal; timeouts in adapters.
- Startup config validation; injected logger port.
- Cache in adapters only.

## Structure
- types/ports, pure core, adapters, factory API object.

## Testing
- In-memory fakes via ports; no real IO/time.

## Avoid
- Classes/statics, global/mutable state.
- Core importing infra, catch-all helpers.
- Untyped exceptions, swallowing errors.

## Checklist
- DI-by-params, ports.
- Pure/effects separation.
- Small functions/files.
- Results/errors explicit.
- Async signals/timeouts.
- In-memory test adapters.