---
description: Universal development practices applicable to all languages and frameworks
globs: ["**/*"]
alwaysApply: true
---

# General Key Rules

## Architecture
- Single responsibility; inject deps for testing.
- <200-300 lines/file, <50 lines/function.

## Organization
- Feature/domain grouping; consistent naming.
- Refactor duplicates; remove dead code/magic numbers.

## Clean Code
- Nesting <=3 levels; immutability preferred.
- Comment non-obvious only; sync comments.

## Docs/Commits
- Capture reqs/AC/arch before impl.
- Descriptive commits.

## Testing
- Unit/integration/E2E/contract mirror prod.
- Realistic/isolated data; descriptive names.

## Performance
- Build-time precompute; static imports/tree-shaking.
- Cleanup resources; lazy load when beneficial.

## Security
- Validate inputs/auth at boundaries.
- Parameterized queries, env secrets, HTTPS.
- Sanitize/redact logs.

## Workflow
- Plan with risks/AC; peer review; CI tests.
- Startup env validation/fail-fast.

## Paths
- Canonical/typed constants; no guessing/fallbacks.
- Init validation/abort.

## Avoid
- Hardcoded secrets, direct main commits.
- Globals/mutables, suppressed types.
- Long functions/deep nesting, unprofiled heavy libs.
