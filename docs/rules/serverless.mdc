---
description: Serverless runtime rules â€” stateless, no in-memory cache, no long-lived connections
globs: ["api/**/*.{ts,js}", "functions/**/*.{ts,js}", "src/api/**/*.{ts,js}", "src/functions/**/*.{ts,js}"]
alwaysApply: true
---

# Serverless Key Rules

## Do
- Stateless/invocation; no mutable state/caches/conns.
- Open/close clients per req; AbortSignal/timeout IO.
- Idempotent; keys for mutations.
- External durable state; lazy deps in handler.
- Prompt return; no post-response work.
- Structured logs w/IDs; no secrets.

## Avoid
- Singletons/cross-reuse.
- Module caches/memo, setInterval/unbounded timeouts.
- Detached promises, persistent pools.
- In-mem locks, local FS writes.

## Checklist
- Timeouts/signals per call.
- Scoped clients.
- Idempotency on mutations.
- No persistent disk; /tmp cleanup if used.
- No concurrent shared state.