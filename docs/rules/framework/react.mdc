---
description: React-specific rules and best practices
globs: ["**/*.{tsx,jsx}"]
alwaysApply: true
---

# React Key Rules

## Design
- Functional only; strict props/state typing; freeze defaults.
- Single responsibility; <300 lines; extract primitives.

## Hooks/State
- Built-in first; custom for shared.
- Rules of Hooks; `useReducer` for complex (immutable).

## Effects
- `useEffect` sparse: accurate deps, cleanup returns.
- Custom hooks for async/cancellation.

## Performance
- `React.memo`/`useMemo`/`useCallback`.
- `React.lazy`/Suspense.

## Avoid
- Classes/legacy context/DOM manip.
- `dangerouslySetInnerHTML` sans sanitize.
- Inline fns/objects in hot paths.

## Tests
- RTL isolation.
- Hook units: state/updates/cleanup.
- Accessibility assertions.
