name: Auto Publish Wiki

on:
  push:
    branches: [ main ]
    paths:
      - 'wiki-pages/**'
      - '.github/workflows/auto-wiki.yml'
  workflow_dispatch:

jobs:
  publish-wiki:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Publish Wiki
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Check if wiki-pages directory exists
          const wikiDir = 'wiki-pages';
          if (!fs.existsSync(wikiDir)) {
            console.log('‚ùå wiki-pages directory not found');
            return;
          }
          
          // Read all markdown files
          const files = fs.readdirSync(wikiDir)
            .filter(file => file.endsWith('.md'))
            .sort();
          
          if (files.length === 0) {
            console.log('‚ùå No markdown files found in wiki-pages');
            return;
          }
          
          console.log(`üìö Found ${files.length} wiki pages to publish`);
          
          // Create a temporary directory for the wiki
          await exec.exec('mkdir', ['wiki-temp']);
          
          // Copy files to temp directory
          for (const file of files) {
            const content = fs.readFileSync(path.join(wikiDir, file), 'utf8');
            fs.writeFileSync(path.join('wiki-temp', file), content);
            console.log(`‚úÖ Prepared: ${file}`);
          }
          
          // Initialize git repo for wiki
          process.chdir('wiki-temp');
          await exec.exec('git', ['init']);
          await exec.exec('git', ['config', 'user.name', 'github-actions[bot]']);
          await exec.exec('git', ['config', 'user.email', 'github-actions[bot]@users.noreply.github.com']);
          await exec.exec('git', ['add', '.']);
          
          // Check if there are changes
          const status = await exec.exec('git', ['status', '--porcelain'], { silent: true });
          if (!status.trim()) {
            console.log('‚ÑπÔ∏è No changes to publish');
            return;
          }
          
          await exec.exec('git', ['commit', '-m', 'üìö Update wiki pages [auto]']);
          
          // Try to push to wiki
          try {
            await exec.exec('git', ['push', '-f', `https://${process.env.GITHUB_TOKEN}@github.com/${{ github.repository }}.wiki.git`, 'main:main']);
            console.log('‚úÖ Wiki published successfully!');
          } catch (error) {
            console.log('‚ö†Ô∏è Push failed, wiki might not exist yet');
            console.log('üìù You may need to create the first page manually at:');
            console.log(`   https://github.com/${{ github.repository }}/wiki`);
          }
          
          process.chdir('..');
          
          // Create summary
          console.log('## üìö Wiki Publication Summary');
          console.log('');
          console.log('### üìÑ Pages Published:');
          for (const file of files) {
            const name = file.replace('.md', '');
            console.log(`- [${name}](https://github.com/${{ github.repository }}/wiki/${name})`);
          }
          console.log('');
          console.log('### üîó Links:');
          console.log(`- [üìñ View Wiki](https://github.com/${{ github.repository }}/wiki)`);
          console.log(`- [‚öôÔ∏è Manage Wiki](https://github.com/${{ github.repository }}/wiki/_pages)`);