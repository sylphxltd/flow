name: Publish Wiki

on:
  push:
    branches: [ main ]
    paths:
      - 'wiki-pages/**'
      - '.github/workflows/publish-wiki.yml'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update all wiki pages'
        required: false
        default: 'false'
        type: boolean

jobs:
  publish-wiki:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
    - name: Check if wiki exists
      id: check-wiki
      run: |
        if git ls-remote --exit-code https://github.com/${{ github.repository }}.wiki.git >/dev/null 2>&1; then
          echo "wiki_exists=true" >> $GITHUB_OUTPUT
          echo "✅ Wiki repository exists"
        else
          echo "wiki_exists=false" >> $GITHUB_OUTPUT
          echo "📝 Wiki repository does not exist yet"
        fi
        
    - name: Clone wiki repository
      if: steps.check-wiki.outputs.wiki_exists == 'true'
      run: |
        echo "📥 Cloning existing wiki..."
        git clone https://github.com/${{ github.repository }}.wiki.git wiki
        cd wiki
        git checkout main
        cd ..
        
    - name: Initialize wiki repository
      if: steps.check-wiki.outputs.wiki_exists == 'false'
      run: |
        echo "🆕 Initializing new wiki..."
        mkdir wiki
        cd wiki
        git init
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        cd ..
        
    - name: Copy wiki pages
      run: |
        echo "📚 Copying wiki pages..."
        
        # Check if wiki-pages directory exists
        if [ ! -d "wiki-pages" ]; then
          echo "❌ wiki-pages directory not found!"
          echo "Please create wiki-pages directory with your markdown files"
          exit 1
        fi
        
        # Copy all markdown files from wiki-pages to wiki
        cp -r wiki-pages/*.md wiki/ 2>/dev/null || echo "No markdown files found in wiki-pages"
        
        # List what we copied
        echo "📋 Files to publish:"
        ls -la wiki/*.md 2>/dev/null || echo "No .md files found"
        
    - name: Validate wiki pages
      run: |
        echo "🔍 Validating wiki pages..."
        
        # Check if Home.md exists (required for GitHub wiki)
        if [ ! -f "wiki/Home.md" ]; then
          echo "❌ Home.md not found! Creating default Home page..."
          cat > wiki/Home.md << 'EOF'
        # Welcome to the Sylphx Flow Wiki

        This wiki contains detailed documentation for Sylphx Flow.

        ## 📚 Documentation

        Please check back soon for detailed documentation.

        ---
        *This page was automatically generated*
        EOF
        fi
        
        # Validate markdown files
        for file in wiki/*.md; do
          if [ -f "$file" ]; then
            echo "✅ Validating $(basename "$file")"
            # Basic markdown validation - check if file has content
            if [ ! -s "$file" ]; then
              echo "⚠️ Warning: $(basename "$file") is empty"
            fi
          fi
        done
        
    - name: Commit and push changes
      run: |
        echo "📤 Publishing to wiki..."
        
        cd wiki
        
        # Add all files
        git add .
        
        # Check if there are changes
        if git diff --staged --quiet; then
          echo "ℹ️ No changes to commit"
        else
          # Commit changes
          if [ "${{ github.event.inputs.force_update }}" = "true" ]; then
            git commit -m "📚 Update wiki pages (forced update) [skip ci]"
          else
            git commit -m "📚 Update wiki pages [skip ci]"
          fi
          
          # Push to wiki repository
          if [ "${{ steps.check-wiki.outputs.wiki_exists }}" = "true" ]; then
            echo "📤 Pushing to existing wiki..."
            git push origin main
          else
            echo "🆕 Pushing to new wiki..."
            git push https://github.com/${{ github.repository }}.wiki.git main
          fi
          
          echo "✅ Wiki published successfully!"
        fi
        
        cd ..
        
    - name: Create initial wiki page (if needed)
      if: steps.check-wiki.outputs.wiki_exists == 'false'
      run: |
        echo "🏠 Creating initial wiki page via API..."
        
        # Use GitHub API to create the first page (this initializes the wiki)
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/wiki/pages \
          -d '{
            "title": "Home",
            "content": "'"$(cat wiki/Home.md | jq -Rs .)"'",
            "format": "markdown"
          }' || echo "⚠️ API creation failed, but git push should have worked"
        
    - name: Summary
      run: |
        echo "## 📚 Wiki Publication Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.check-wiki.outputs.wiki_exists }}" = "true" ]; then
          echo "✅ **Wiki Repository**: Already existed" >> $GITHUB_STEP_SUMMARY
        else
          echo "🆕 **Wiki Repository**: Created" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📄 Published Pages:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        for file in wiki/*.md; do
          if [ -f "$file" ]; then
            filename=$(basename "$file" .md)
            echo "- **[$filename](https://github.com/${{ github.repository }}/wiki/$filename)**" >> $GITHUB_STEP_SUMMARY
          fi
        done
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Links:" >> $GITHUB_STEP_SUMMARY
        echo "- [📖 View Wiki](https://github.com/${{ github.repository }}/wiki)" >> $GITHUB_STEP_SUMMARY
        echo "- [⚙️ Manage Wiki](https://github.com/${{ github.repository }}/wiki/_pages)" >> $GITHUB_STEP_SUMMARY